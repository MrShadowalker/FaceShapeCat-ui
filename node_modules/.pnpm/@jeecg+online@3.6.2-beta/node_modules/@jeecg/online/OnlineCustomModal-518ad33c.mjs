var p = (e, f, r) => new Promise((m, u) => {
  var c = (t) => {
    try {
      s(r.next(t));
    } catch (l) {
      u(l);
    }
  }, a = (t) => {
    try {
      s(r.throw(t));
    } catch (l) {
      u(l);
    }
  }, s = (t) => t.done ? m(t.value) : Promise.resolve(t.value).then(c, a);
  s((r = r.apply(e, f)).next());
});
import { defineComponent as z, ref as i, nextTick as T, watch as J, reactive as Q, markRaw as W, defineAsyncComponent as X, resolveComponent as C, openBlock as S, createBlock as k, mergeProps as Y, withCtx as d, createVNode as R, createTextVNode as P, resolveDynamicComponent as Z } from "vue";
import { BasicModal as x, useModalInner as ee } from "/@/components/Modal";
import { g as _ } from "./useExtendComponent-325fe3f1.mjs";
import { defHttp as oe } from "/@/utils/http/axios";
import te from "./OnlineForm-1fa2d893.mjs";
import { importViewsFile as ne } from "/@/utils";
import { _ as re } from "./index-0e3ab3af.mjs";
import "/@/components/Form/src/componentMap";
import "/@/utils/propTypes";
import "@ant-design/icons-vue";
import "/@/hooks/web/useMessage";
import "/@/components/Form/index";
import "lodash-es";
import "./constant-754f1a9d.mjs";
import "/@/components/Form/src/jeecg/components/JUpload";
import "/@/views/system/user/user.api";
import "/@/store/modules/user";
import "/@/utils/desform/customExpression";
import "/@/store/modules/permission";
import "/@/utils/dict/JDictSelectUtil";
import "/@/utils/common/compUtils";
import "/@/components/Table";
import "/@/hooks/system/useListPage";
import "vue-router";
import "/@/components/Form/src/utils/Area";
import "/@/components/Preview/index";
import "./LinkTableListPiece-8499a318.mjs";
import "./OnlineSelectCascade-4265c95d.mjs";
import "/@/components/Loading";
import "/@/utils/auth";
import "./JModalTip-33c7dc44.mjs";
import "/@/hooks/web/useAppInject";
import "ant-design-vue";
import "@vueuse/core";
import "/@/components/jeecg/JVxeTable/types";
import "/@/hooks/core/useContext";
import "/@/utils/mitt";
import "./useCustomHook-acb00837.mjs";
import "/@/utils/cache";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
const ie = {
  code: "",
  title: "自定义弹框",
  width: 600,
  row: {},
  hide: [],
  show: [],
  requestUrl: "",
  tableType: "",
  foreignKeys: "",
  formComponent: ""
}, me = z({
  name: "OnlineCustomModal",
  components: {
    OnlineForm: te,
    BasicModal: x
  },
  setup(e, { emit: f }) {
    const r = i(), m = i(""), u = i("自定义弹框"), c = i(600);
    let a = [], s = [], t = "", l = {};
    const I = {
      loadFormItems: "/online/cgform/api/getFormItem/",
      optPre: "/online/cgform/api/form/"
    }, B = { position: "relative" }, E = i(!1), F = i(!1);
    function $() {
      F.value = !0;
    }
    const h = i(!0), [N, { setModalProps: D, closeModal: b }] = ee((o) => p(this, null, function* () {
      D({ confirmLoading: !1 }), L(o), yield T(() => p(this, null, function* () {
        o.formComponent ? K(o.formComponent) : yield H();
      }));
    }));
    function L(o) {
      let n = Object.assign({}, ie, o);
      m.value = n.code, u.value = n.title, c.value = n.width, a = n.hide || [], s = n.show || [], t = U(n.requestUrl), l = n.row;
    }
    function U(o) {
      return o || I.optPre + m.value;
    }
    const g = i(!1);
    function V() {
      g.value = !0, h.value === !0 ? r.value.handleSubmit() : M.value.handleSubmit(), setTimeout(() => {
        g.value = !0;
      }, 3500);
    }
    function j() {
      b();
    }
    function A(o) {
      f("success", o), b();
    }
    function H() {
      return p(this, null, function* () {
        h.value = !0, yield _(F), r.value.handleCustomFormSh(s, a), r.value.handleCustomFormEdit(l, t);
      });
    }
    const O = i(1);
    J(m, q, { immediate: !0 });
    function q() {
      return p(this, null, function* () {
        if (F.value = !1, !m.value)
          return;
        let o = yield G(), n = o.head.formTemplate;
        O.value = n ? Number(n) : 1, T(() => p(this, null, function* () {
          (yield _(r)).createRootProperties(o);
        }));
      });
    }
    function G() {
      let o = `/online/cgform/api/getFormItem/${m.value}`;
      return new Promise((n, v) => {
        oe.get({ url: o }, { isTransformResponse: !1 }).then((y) => {
          y.success ? n(y.result) : v(y.message);
        }).catch(() => {
          v();
        });
      });
    }
    const M = i(), w = Q({
      url: "",
      is: "",
      row: {}
    });
    function K(o) {
      h.value = !1, w.url = t, w.row = l, w.is = W(X(() => ne(o)));
    }
    return {
      //modal
      registerModal: N,
      title: u,
      width: c,
      modalStyle: B,
      handleSubmit: V,
      handleCancel: j,
      // online表单
      id: m,
      onlineFormCompRef: r,
      formTemplate: O,
      renderSuccess: $,
      //自定义表单
      customFormRef: M,
      customFormComponent: w,
      //通用
      open,
      isOnlineForm: h,
      confirmLoading: E,
      submitLoading: g,
      handleSuccess: A
    };
  }
});
function le(e, f, r, m, u, c) {
  const a = C("a-button"), s = C("online-form"), t = C("a-spin"), l = C("BasicModal");
  return S(), k(l, Y({
    title: e.title,
    width: e.width
  }, e.$attrs, {
    style: e.modalStyle,
    onRegister: e.registerModal,
    wrapClassName: "jeecg-online-modal2",
    onOk: e.handleSubmit
  }), {
    footer: d(() => [
      R(a, {
        key: "submit",
        type: "primary",
        onClick: e.handleSubmit
      }, {
        default: d(() => [
          P("确定")
        ]),
        _: 1
      }, 8, ["onClick"]),
      R(a, {
        key: "back",
        onClick: e.handleCancel
      }, {
        default: d(() => [
          P("关闭")
        ]),
        _: 1
      }, 8, ["onClick"])
    ]),
    default: d(() => [
      R(t, { spinning: e.confirmLoading }, {
        default: d(() => [
          e.isOnlineForm ? (S(), k(s, {
            key: 0,
            ref: "onlineFormCompRef",
            id: e.id,
            "form-template": e.formTemplate,
            onRendered: e.renderSuccess,
            onSuccess: e.handleSuccess,
            modalClass: "jeecg-online-modal2"
          }, null, 8, ["id", "form-template", "onRendered", "onSuccess"])) : (S(), k(Z(e.customFormComponent.is), {
            key: 1,
            ref: "customFormRef",
            url: e.customFormComponent.url,
            row: e.customFormComponent.row,
            onClose: e.handleSuccess
          }, null, 40, ["url", "row", "onClose"]))
        ]),
        _: 1
      }, 8, ["spinning"])
    ]),
    _: 1
  }, 16, ["title", "width", "style", "onRegister", "onOk"]);
}
const We = /* @__PURE__ */ re(me, [["render", le]]);
export {
  We as default
};
