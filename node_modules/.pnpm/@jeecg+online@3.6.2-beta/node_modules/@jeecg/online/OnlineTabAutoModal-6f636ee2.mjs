var A = (e, n, a) => new Promise((p, l) => {
  var b = (t) => {
    try {
      r(a.next(t));
    } catch (m) {
      l(m);
    }
  }, u = (t) => {
    try {
      r(a.throw(t));
    } catch (m) {
      l(m);
    }
  }, r = (t) => t.done ? p(t.value) : Promise.resolve(t.value).then(b, u);
  r((a = a.apply(e, n)).next());
});
import { defineComponent as x, ref as S, watch as ee, resolveComponent as d, openBlock as s, createBlock as h, mergeProps as te, createSlots as oe, withCtx as i, createElementBlock as w, Fragment as E, renderList as O, createTextVNode as g, toDisplayString as y, createCommentVNode as ne, createVNode as T, createElementVNode as B } from "vue";
import { BasicModal as ae } from "/@/components/Modal";
import ie from "./OnlineTabForm-512d3951.mjs";
import { b as re } from "./useExtendComponent-325fe3f1.mjs";
import me from "/@/components/jeecg/comment/CommentPanel.vue";
import { T as le } from "./constant-754f1a9d.mjs";
import { _ as de } from "./index-0e3ab3af.mjs";
import "/@/hooks/web/useMessage";
import "/@/components/Form/index";
import "/@/utils/http/axios";
import "lodash-es";
import "/@/utils";
import "/@/components/Loading";
import "/@/utils/auth";
import "@ant-design/icons-vue";
import "./useCustomHook-acb00837.mjs";
import "/@/utils/cache";
import "/@/utils/common/compUtils";
import "/@/store/modules/user";
import "/@/components/Form/src/componentMap";
import "/@/utils/propTypes";
import "/@/components/Form/src/jeecg/components/JUpload";
import "/@/views/system/user/user.api";
import "/@/utils/desform/customExpression";
import "/@/store/modules/permission";
import "/@/utils/dict/JDictSelectUtil";
import "/@/components/Table";
import "/@/hooks/system/useListPage";
import "vue-router";
import "/@/components/Form/src/utils/Area";
import "/@/components/Preview/index";
import "./LinkTableListPiece-8499a318.mjs";
import "./OnlineSelectCascade-4265c95d.mjs";
import "./JModalTip-33c7dc44.mjs";
import "/@/hooks/web/useAppInject";
import "ant-design-vue";
import "@vueuse/core";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
const se = x({
  name: "OnlineTabAutoModal",
  props: {
    id: {
      type: String,
      default: ""
    }
  },
  components: {
    BasicModal: ae,
    OnlineForm: ie,
    CommentPanel: me
  },
  emits: ["success", "register", "formConfig"],
  setup(e, { emit: n }) {
    const a = S(), p = S([]), l = S("-1");
    function b() {
      a.value && a.value.reload();
    }
    const {
      title: u,
      modalWidth: r,
      registerModal: t,
      closeModal: m,
      cgButtonList: v,
      handleCgButtonClick: I,
      disableSubmit: o,
      handleSubmit: f,
      submitLoading: V,
      handleCancel: $,
      handleFormConfig: L,
      onlineFormCompRef: D,
      formTemplate: P,
      isTreeForm: j,
      pidFieldName: W,
      renderSuccess: H,
      formRendered: U,
      tableName: q,
      formDataId: z,
      enableComment: G,
      onCloseEvent: F,
      themeTemplate: J
    } = re(!1, { emit: n }, b);
    function K(c) {
      n("success", c), m(), F(), _();
    }
    ee(() => e.id, Q, { immediate: !0 });
    function Q() {
      return A(this, null, function* () {
        U.value = !1, e.id && (yield L(e.id, {}, (c) => {
          const M = [], k = [], { head: R, schema: Y } = c, { properties: Z } = Y;
          M.push({ tableName: R.tableName, tableTxt: R.tableTxt }), Object.entries(Z).forEach(([N, C]) => {
            C.view == "tab" && k.push({ tableName: N, tableTxt: C.describe });
          }), k.sort((N, C) => N.order - C.order), p.value = [...M, ...k];
        }));
      });
    }
    const X = (c) => String(c - 1), _ = () => {
      setTimeout(() => {
        l.value = "-1";
      }, 500);
    };
    return {
      title: u,
      onlineFormCompRef: D,
      renderSuccess: H,
      registerModal: t,
      handleSubmit: f,
      handleSuccess: K,
      handleCancel: $,
      modalWidth: r,
      formTemplate: P,
      disableSubmit: o,
      cgButtonList: v,
      handleCgButtonClick: I,
      isTreeForm: j,
      pidFieldName: W,
      submitLoading: V,
      tableName: q,
      formDataId: z,
      enableComment: G,
      commentPanelRef: a,
      onCloseEvent: F,
      themeTemplate: J,
      tabNav: p,
      tabValue: X,
      tabIndex: l,
      TAB: le,
      restTabIndex: _
    };
  }
});
const pe = { class: "titleArea" }, ue = { class: "title" }, ce = { class: "right" };
function be(e, n, a, p, l, b) {
  const u = d("a-radio-button"), r = d("a-radio-group"), t = d("a-button"), m = d("online-form"), v = d("comment-panel"), I = d("BasicModal");
  return s(), h(I, te({
    title: e.title,
    onCancel: n[2] || (n[2] = () => {
      e.onCloseEvent(), e.restTabIndex();
    }),
    enableComment: e.enableComment,
    width: e.modalWidth
  }, e.$attrs, {
    maxHeight: 600,
    onRegister: e.registerModal,
    wrapClassName: "jeecg-online-modal",
    onOk: e.handleSubmit
  }), oe({
    footer: i(() => [
      (s(!0), w(E, null, O(e.cgButtonList, (o) => (s(), h(t, {
        key: o.id,
        type: "primary",
        onClick: (f) => e.handleCgButtonClick(o.optType, o.buttonCode),
        preIcon: o.buttonIcon ? "ant-design:" + o.buttonIcon : ""
      }, {
        default: i(() => [
          g(y(o.buttonName), 1)
        ]),
        _: 2
      }, 1032, ["onClick", "preIcon"]))), 128)),
      e.disableSubmit ? ne("", !0) : (s(), h(t, {
        key: "submit",
        type: "primary",
        onClick: e.handleSubmit,
        loading: e.submitLoading
      }, {
        default: i(() => [
          g("确定")
        ]),
        _: 1
      }, 8, ["onClick", "loading"])),
      T(t, {
        key: "back",
        onClick: n[1] || (n[1] = () => {
          e.handleCancel(), e.restTabIndex();
        })
      }, {
        default: i(() => [
          g("关闭")
        ]),
        _: 1
      })
    ]),
    comment: i(() => [
      T(v, {
        ref: "commentPanelRef",
        tableName: e.tableName,
        dataId: e.formDataId
      }, null, 8, ["tableName", "dataId"])
    ]),
    default: i(() => [
      T(m, {
        ref: "onlineFormCompRef",
        id: e.id,
        disabled: e.disableSubmit,
        "form-template": e.formTemplate,
        isTree: e.isTreeForm,
        pidField: e.pidFieldName,
        themeTemplate: e.themeTemplate,
        tabIndex: e.tabIndex,
        onRendered: e.renderSuccess,
        onSuccess: e.handleSuccess
      }, null, 8, ["id", "disabled", "form-template", "isTree", "pidField", "themeTemplate", "tabIndex", "onRendered", "onSuccess"])
    ]),
    _: 2
  }, [
    e.themeTemplate === e.TAB ? {
      name: "title",
      fn: i(() => [
        B("div", pe, [
          B("div", ue, y(e.title), 1),
          B("div", ce, [
            T(r, {
              value: e.tabIndex,
              "onUpdate:value": n[0] || (n[0] = (o) => e.tabIndex = o)
            }, {
              default: i(() => [
                (s(!0), w(E, null, O(e.tabNav, (o, f) => (s(), h(u, {
                  value: e.tabValue(f),
                  key: o.tableName
                }, {
                  default: i(() => [
                    g(y(o.tableTxt), 1)
                  ]),
                  _: 2
                }, 1032, ["value"]))), 128))
              ]),
              _: 1
            }, 8, ["value"])
          ])
        ])
      ]),
      key: "0"
    } : void 0
  ]), 1040, ["title", "enableComment", "width", "onRegister", "onOk"]);
}
const tt = /* @__PURE__ */ de(se, [["render", be], ["__scopeId", "data-v-1b8f2c75"]]);
export {
  tt as default
};
