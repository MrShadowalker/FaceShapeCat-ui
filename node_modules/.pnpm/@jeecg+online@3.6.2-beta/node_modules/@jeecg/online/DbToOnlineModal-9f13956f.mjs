import { defineComponent as F, ref as i, resolveComponent as m, openBlock as k, createBlock as E, withCtx as l, createVNode as f, createTextVNode as g, createElementVNode as C } from "vue";
import { defHttp as v } from "/@/utils/http/axios";
import { BasicTable as R } from "/@/components/Table";
import { BasicModal as S, useModalInner as D } from "/@/components/Modal";
import { useListTable as I } from "/@/hooks/system/useListPage";
import { useMessage as N } from "/@/hooks/web/useMessage";
import { _ as $ } from "./index-0e3ab3af.mjs";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
import "vue-router";
const A = F({
  name: "TransDb2Online",
  components: { BasicModal: S, BasicTable: R },
  emits: ["success", "register"],
  setup(e, { emit: h }) {
    const { createMessage: p } = N(), t = i("暂无数据"), u = i(!1), r = i(!1), o = i([]), a = i([]), [c, { closeModal: d }] = D(() => {
      r.value = !1, t.value = "暂无数据", s.value = [], b();
    }), [T, { setPagination: w }, { rowSelection: _, selectedRowKeys: s }] = I({
      bordered: !0,
      columns: [{ title: "表名", align: "left", dataIndex: "id" }],
      dataSource: a,
      maxHeight: 300,
      locale: { emptyText: t },
      pagination: {
        showQuickJumper: !1,
        showSizeChanger: !1
      },
      clickToRowSelect: !0,
      showIndexColumn: !0,
      showActionColumn: !1,
      formConfig: {
        schemas: [
          {
            label: "表名",
            field: "tableName",
            component: "Input",
            componentProps: {
              style: { width: "100%" },
              placeholder: "请输入表名以模糊筛选",
              onChange: (n) => L(n.target.value)
            },
            disabledLabelWidth: !0,
            itemProps: {
              labelCol: { sm: 24, md: 4 },
              wrapperCol: { sm: 24, md: 20 }
            }
          }
        ],
        baseColProps: { xs: 24, sm: 24, md: 24, lg: 24, xl: 24, xxl: 24 },
        showActionButtonGroup: !1
      }
    });
    function b() {
      return u.value = !0, v.get(
        {
          url: "/online/cgform/head/queryTables/"
          /* query */
        },
        {
          errorMessageMode: "none"
        }
      ).then(
        (n) => (a.value = n, o.value = [...n], n),
        (n) => {
          n.message == "noadminauth" && (t.value = "非admin用户无权限操作！", p.warn(t.value)), a.value = [], o.value = [];
        }
      ).finally(() => {
        u.value = !1;
      });
    }
    function L(n) {
      o.value.length !== 0 && (n ? (a.value = o.value.filter((y) => y.id.toLowerCase().includes(n.toLowerCase())), t.value = a.value.length === 0 ? "无筛选结果" : "暂无数据") : a.value = [...o.value], w({ current: 1 }));
    }
    function M() {
      d();
    }
    function B() {
      if (!s.value || s.value.length == 0) {
        p.warning("请选择一张表");
        return;
      } else {
        r.value = !0;
        let n = s.value.join(",");
        v.post({ url: "/online/cgform/head/transTables/" + n }).then(() => {
          d(), h("success");
        }).finally(() => r.value = !1);
      }
    }
    return {
      emptyText: t,
      confirmLoading: u,
      btnLoading: r,
      metaSource: o,
      handleTrans: B,
      handleCancel: M,
      queryTables: b,
      registerModal: c,
      registerTable: T,
      rowSelection: _,
      selectedRowKeys: s
    };
  }
}), P = /* @__PURE__ */ C("div", null, [
  /* @__PURE__ */ g(" 注：导入表会排除配置前缀表 "),
  /* @__PURE__ */ C("a", {
    href: "http://doc.jeecg.com/2043924",
    target: "_blank"
  }, " 参考文档")
], -1);
function q(e, h, p, t, u, r) {
  const o = m("BasicTable"), a = m("a-spin"), c = m("a-button"), d = m("BasicModal");
  return k(), E(d, {
    onRegister: e.registerModal,
    width: 500,
    title: "从数据库导入表单",
    confirmLoading: e.confirmLoading,
    onCancel: e.handleCancel
  }, {
    footer: l(() => [
      f(c, { onClick: e.handleCancel }, {
        default: l(() => [
          g("关闭")
        ]),
        _: 1
      }, 8, ["onClick"]),
      f(c, {
        onClick: e.handleTrans,
        type: "primary",
        preIcon: "ant-design:swap",
        loading: e.confirmLoading || e.btnLoading
      }, {
        default: l(() => [
          g(" 生成表单 ")
        ]),
        _: 1
      }, 8, ["onClick", "loading"])
    ]),
    default: l(() => [
      f(a, { spinning: e.confirmLoading }, {
        default: l(() => [
          f(o, {
            onRegister: e.registerTable,
            rowSelection: e.rowSelection,
            onTableRedo: e.queryTables
          }, {
            tableTitle: l(() => [
              P
            ]),
            _: 1
          }, 8, ["onRegister", "rowSelection", "onTableRedo"])
        ]),
        _: 1
      }, 8, ["spinning"])
    ]),
    _: 1
  }, 8, ["onRegister", "confirmLoading", "onCancel"]);
}
const Q = /* @__PURE__ */ $(A, [["render", q]]);
export {
  Q as default
};
