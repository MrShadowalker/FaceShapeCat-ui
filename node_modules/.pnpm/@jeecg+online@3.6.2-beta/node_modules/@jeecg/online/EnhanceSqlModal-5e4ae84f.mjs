var X = Object.defineProperty;
var E = Object.getOwnPropertySymbols;
var Y = Object.prototype.hasOwnProperty, Z = Object.prototype.propertyIsEnumerable;
var R = (e, t, o) => t in e ? X(e, t, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[t] = o, A = (e, t) => {
  for (var o in t || (t = {}))
    Y.call(t, o) && R(e, o, t[o]);
  if (E)
    for (var o of E(t))
      Z.call(t, o) && R(e, o, t[o]);
  return e;
};
var d = (e, t, o) => new Promise((g, p) => {
  var b = (i) => {
    try {
      c(o.next(i));
    } catch (u) {
      p(u);
    }
  }, s = (i) => {
    try {
      c(o.throw(i));
    } catch (u) {
      p(u);
    }
  }, c = (i) => i.done ? g(i.value) : Promise.resolve(i.value).then(b, s);
  c((o = o.apply(e, t)).next());
});
import { defineComponent as x, ref as y, reactive as ee, computed as oe, nextTick as ne, resolveComponent as r, openBlock as D, createBlock as q, withCtx as a, createVNode as l, createTextVNode as _, createElementBlock as te, createCommentVNode as L, normalizeProps as ae, guardReactiveProps as le } from "vue";
import { BasicModal as ie, useModalInner as re, useModal as se } from "/@/components/Modal";
import { BasicForm as ce, useForm as ue } from "/@/components/Form";
import { BasicTable as me, TableAction as de } from "/@/components/Table";
import { useListPage as pe } from "/@/hooks/system/useListPage";
import { u as fe } from "./useOnlineTest-e4bd8be3.mjs";
import { b as _e, c as ge } from "./enhance.data-efc7e155.mjs";
import { c as be, e as he, f as P } from "./enhance.api-138e6826.mjs";
import { _ as Ce } from "./index-0e3ab3af.mjs";
import "./cgform.data-cbdd88c3.mjs";
import "/@/utils/dict";
import "/@/utils/dict/JDictSelectUtil";
import "/@/utils/uuid";
import "/@/utils/http/axios";
import "/@/utils/is";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
import "/@/hooks/web/useMessage";
import "vue-router";
const we = x({
  name: "EnhanceSqlModal",
  components: { BasicModal: ie, BasicTable: me, BasicForm: ce, TableAction: de },
  emits: ["register"],
  setup() {
    const e = y(""), t = y(""), o = y([]), { columns: g } = ge(o), { doRequest: p, doDeleteRecord: b, tableContext: s } = pe({
      tableProps: {
        api: (n) => d(this, null, function* () {
          let { dataSource: w, btnList: J } = yield be(e.value, n);
          return o.value = J, w;
        }),
        columns: g,
        canResize: !1,
        useSearchForm: !1,
        beforeFetch(n) {
          return Object.assign(n, { column: "orderNum", order: "asc" });
        }
      }
    }), [c, { reload: i }, { rowSelection: u, selectedRowKeys: h }] = s, [v, { closeModal: M }] = re((n) => d(this, null, function* () {
      e.value = n.row.id, t.value = n.row.tableName, i();
    })), { aiTestMode: S, genEnhanceSqlData: B } = fe(), [C, m] = se(), f = y(!1), F = ee({
      onRegister: C,
      title: oe(() => f != null && f.value ? "修改" : "新增"),
      width: 800,
      confirmLoading: !1,
      onOk: H,
      onCancel: m.closeModal
    });
    let k = {};
    const { formSchemas: N } = _e(o), [$, { resetFields: O, setFieldsValue: V, validate: G }] = ue({
      schemas: N,
      showActionButtonGroup: !1,
      // update-begin--author:liaozhiyang---date:20231017---for：【issues/790】弹窗内文本框不居中问题
      labelWidth: 80,
      labelCol: null,
      wrapperCol: null
      // update-end--author:liaozhiyang---date:20231017---for：【issues/790】弹窗内文本框不居中问题
    });
    function I() {
      M();
    }
    function T(n) {
      return d(this, null, function* () {
        var w;
        f.value = n.isUpdate, k = A({}, (w = n.record) != null ? w : {}), m.openModal(), yield ne(), yield O(), V(k);
      });
    }
    function j() {
      T({ isUpdate: !1 });
    }
    function z(n) {
      T({ isUpdate: !0, record: n });
    }
    function K() {
      B(e.value, t.value);
    }
    function U() {
      return d(this, null, function* () {
        p(() => P(h.value));
      });
    }
    function H() {
      return d(this, null, function* () {
        try {
          F.confirmLoading = !0;
          let n = yield G();
          n = Object.assign({}, k, n), yield he(e.value, n, f.value), i(), m.closeModal();
        } finally {
          F.confirmLoading = !1;
        }
      });
    }
    function Q(n) {
      return [
        {
          label: "编辑",
          onClick: () => z(n)
        }
      ];
    }
    function W(n) {
      return [
        {
          label: "删除",
          popConfirm: {
            title: "确定删除吗？",
            placement: "left",
            confirm: () => b(() => P([n.id]))
          }
        }
      ];
    }
    return {
      rowSelection: u,
      selectedRowKeys: h,
      aiTestMode: S,
      onCancel: I,
      onAdd: j,
      onGenEnhanceSqlData: K,
      onBatchDelete: U,
      getTableAction: Q,
      getDropDownAction: W,
      formModalProps: F,
      registerModal: v,
      registerTable: c,
      registerForm: $
    };
  },
  computed: {
    tableScroll() {
      return {
        y: window.innerHeight - 320
      };
    }
  }
});
const ye = {
  key: 0,
  style: { float: "left" }
};
function ve(e, t, o, g, p, b) {
  const s = r("a-button"), c = r("a-icon"), i = r("a-menu-item"), u = r("a-menu"), h = r("a-dropdown"), v = r("TableAction"), M = r("BasicTable"), S = r("BasicForm"), B = r("a-spin"), C = r("BasicModal");
  return D(), q(C, {
    onRegister: e.registerModal,
    title: "SQL增强",
    width: 1200,
    defaultFullscreen: "",
    onCancel: e.onCancel
  }, {
    footer: a(() => [
      l(s, { onClick: e.onCancel }, {
        default: a(() => [
          _("关闭")
        ]),
        _: 1
      }, 8, ["onClick"]),
      e.aiTestMode ? (D(), te("div", ye, [
        l(s, { onClick: e.onGenEnhanceSqlData }, {
          default: a(() => [
            _("生成测试数据")
          ]),
          _: 1
        }, 8, ["onClick"])
      ])) : L("", !0)
    ]),
    default: a(() => [
      l(M, {
        onRegister: e.registerTable,
        rowSelection: e.rowSelection
      }, {
        tableTitle: a(() => [
          l(s, {
            onClick: e.onAdd,
            type: "primary",
            preIcon: "ant-design:plus"
          }, {
            default: a(() => [
              _("新增")
            ]),
            _: 1
          }, 8, ["onClick"]),
          e.selectedRowKeys.length > 0 ? (D(), q(h, { key: 0 }, {
            overlay: a(() => [
              l(u, null, {
                default: a(() => [
                  l(i, {
                    key: "1",
                    onClick: e.onBatchDelete
                  }, {
                    default: a(() => [
                      l(c, { type: "delete" }),
                      _(" 删除 ")
                    ]),
                    _: 1
                  }, 8, ["onClick"])
                ]),
                _: 1
              })
            ]),
            default: a(() => [
              l(s, { style: { "margin-left": "8px" } }, {
                default: a(() => [
                  _(" 批量操作 "),
                  l(c, { type: "down" })
                ]),
                _: 1
              })
            ]),
            _: 1
          })) : L("", !0)
        ]),
        action: a(({ record: m }) => [
          l(v, {
            actions: e.getTableAction(m),
            dropDownActions: e.getDropDownAction(m)
          }, null, 8, ["actions", "dropDownActions"])
        ]),
        _: 1
      }, 8, ["onRegister", "rowSelection"]),
      l(C, ae(le(e.formModalProps)), {
        default: a(() => [
          l(B, {
            spinning: e.formModalProps.confirmLoading
          }, {
            default: a(() => [
              l(S, {
                class: "popupForm",
                onRegister: e.registerForm
              }, null, 8, ["onRegister"])
            ]),
            _: 1
          }, 8, ["spinning"])
        ]),
        _: 1
      }, 16)
    ]),
    _: 1
  }, 8, ["onRegister", "onCancel"]);
}
const je = /* @__PURE__ */ Ce(we, [["render", ve], ["__scopeId", "data-v-0a46f791"]]);
export {
  je as default
};
