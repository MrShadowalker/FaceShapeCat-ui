var d = (o, m, e) => new Promise((c, s) => {
  var p = (r) => {
    try {
      i(e.next(r));
    } catch (l) {
      s(l);
    }
  }, t = (r) => {
    try {
      i(e.throw(r));
    } catch (l) {
      s(l);
    }
  }, i = (r) => r.done ? c(r.value) : Promise.resolve(r.value).then(p, t);
  i((e = e.apply(o, m)).next());
});
import { defineComponent as k, nextTick as B, resolveComponent as h, openBlock as j, createBlock as x, withCtx as P, createVNode as R } from "vue";
import { BasicModal as U, useModalInner as V } from "/@/components/Modal";
import { BasicForm as v, useForm as O } from "/@/components/Form";
import { useMessage as Q } from "/@/hooks/web/useMessage";
import { a as b } from "./useSchemas-0433a403.mjs";
import { _ as E } from "./index-0e3ab3af.mjs";
import "ant-design-vue";
import "@ant-design/icons-vue";
import "/@/utils/common/compUtils";
import "/@/hooks/web/usePermission";
import "/@/utils/helper/validator";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
import "vue-router";
const I = k({
  name: "CgformExtConfigModel",
  components: { BasicModal: U, BasicForm: v },
  props: {
    parentForm: {
      type: Object,
      required: !0
    }
  },
  emits: ["register", "ok"],
  setup(o, { emit: m }) {
    const { createMessage: e } = Q(), { formSchemas: c } = b(o, {
      onIsDesformChange: C,
      onJoinQueryChange: M,
      onReportPrintShowChange: y
    }), [s, { resetFields: p, setFieldsValue: t, getFieldsValue: i, clearValidate: r, validate: l }] = O({
      schemas: c,
      showActionButtonGroup: !1,
      labelAlign: "right"
    }), [_, { closeModal: f }] = V((n) => d(this, null, function* () {
      yield p(), yield t(n.extConfigJson);
    }));
    function w() {
      return d(this, null, function* () {
        yield r(), yield B();
        try {
          const n = yield l();
          m("ok", n), f();
        } catch (n) {
        }
      });
    }
    function F() {
      f();
    }
    function C(n) {
      if (n === "Y") {
        let { themeTemplate: a } = o.parentForm.getFieldsValue(["themeTemplate"]);
        a === "erp" && (o.parentForm.setFieldsValue({ themeTemplate: "normal" }), e.warning("请注意：erp风格不支持对接表单设计，已自动改为默认风格！"));
      } else
        r("desFormCode");
    }
    const u = "{{ window._CONFIG['domianURL'] }}/jmreport/view/{积木报表ID}";
    function y(n) {
      return d(this, null, function* () {
        let a = i().reportPrintUrl;
        n === 0 ? a === u && (yield t({ reportPrintUrl: "" })) : n === 1 && a === "" && (yield t({ reportPrintUrl: u })), r("reportPrintUrl");
      });
    }
    function M(n) {
      if (n === 1) {
        let { themeTemplate: a, isTree: T, tableType: g } = o.parentForm.getFieldsValue(["themeTemplate", "isTree", "tableType"]);
        a === "erp" && (e.warning("请注意：erp风格不支持联合查询，配置无效!"), t({ joinQuery: 0 })), a === "innerTable" && (e.warning("请注意：内嵌风格不支持联合查询，配置无效!"), t({ joinQuery: 0 })), g === 1 ? (e.warning("请注意：单表不支持联合查询，配置无效!"), t({ joinQuery: 0 })) : g === 3 ? (e.warning("请注意：当前表为附表，请在对应主表配置!"), t({ joinQuery: 0 })) : T === "Y" && (e.warning("请注意：树形列表不支持联合查询，配置无效!"), t({ joinQuery: 0 }));
      }
    }
    return {
      handleOk: w,
      handleCancel: F,
      registerModal: _,
      registerForm: s
    };
  }
});
function $(o, m, e, c, s, p) {
  const t = h("BasicForm"), i = h("BasicModal");
  return j(), x(i, {
    onRegister: o.registerModal,
    title: "扩展配置",
    width: 1e3,
    onOk: o.handleOk,
    onCancel: o.handleCancel
  }, {
    default: P(() => [
      R(t, { onRegister: o.registerForm }, null, 8, ["onRegister"])
    ]),
    _: 1
  }, 8, ["onRegister", "onOk", "onCancel"]);
}
const Z = /* @__PURE__ */ E(I, [["render", $], ["__scopeId", "data-v-07f7580c"]]);
export {
  Z as default
};
