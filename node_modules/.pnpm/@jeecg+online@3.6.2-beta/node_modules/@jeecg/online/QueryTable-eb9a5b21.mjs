var y = Object.defineProperty, c = Object.defineProperties;
var f = Object.getOwnPropertyDescriptors;
var d = Object.getOwnPropertySymbols;
var h = Object.prototype.hasOwnProperty, b = Object.prototype.propertyIsEnumerable;
var n = (e, t, l) => t in e ? y(e, t, { enumerable: !0, configurable: !0, writable: !0, value: l }) : e[t] = l, p = (e, t) => {
  for (var l in t || (t = {}))
    h.call(t, l) && n(e, l, t[l]);
  if (d)
    for (var l of d(t))
      b.call(t, l) && n(e, l, t[l]);
  return e;
}, s = (e, t) => c(e, f(t));
import { defineComponent as g, ref as k, resolveComponent as v, openBlock as T, createBlock as _, mergeProps as V } from "vue";
import { JVxeTypes as a } from "/@/components/jeecg/JVxeTable/types";
import { u as w } from "./useTableSync-774c3774.mjs";
import { _ as C } from "./index-0e3ab3af.mjs";
import "./cgform.data-cbdd88c3.mjs";
import "/@/utils/dict";
import "/@/utils/dict/JDictSelectUtil";
import "/@/utils/uuid";
import "lodash-es";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
import "/@/hooks/web/useMessage";
import "vue-router";
const q = g({
  name: "QueryTable",
  emits: ["query"],
  setup(e, { emit: t }) {
    const l = k([
      { title: "字段名称", key: "dbFieldName", width: 130 },
      { title: "字段备注", key: "dbFieldTxt", width: 130 },
      {
        title: "控件类型",
        key: "queryShowType",
        width: 170,
        type: a.select,
        options: [
          { title: "文本框", value: "text" },
          { title: "日期(yyyy-MM-dd)", value: "date" },
          { title: "日期（yyyy-MM-dd HH:mm:ss）", value: "datetime" },
          { title: "时间（HH:mm:ss）", value: "time" },
          { title: "下拉框", value: "list" },
          { title: "下拉多选框", value: "list_multi" },
          { title: "下拉搜索框", value: "sel_search" },
          { title: "分类字典树", value: "cat_tree" },
          { title: "Popup弹框", value: "popup" },
          { title: "部门选择", value: "sel_depart" },
          { title: "用户选择", value: "sel_user" },
          { title: "省市区组件", value: "pca" },
          { title: "自定义树控件", value: "sel_tree" }
        ],
        defaultValue: "text",
        placeholder: "请选择${title}"
      },
      {
        title: "字典Table",
        key: "queryDictTable",
        width: 130,
        type: a.textarea,
        defaultValue: ""
      },
      {
        title: "字典Code",
        key: "queryDictField",
        width: 130,
        type: a.input,
        defaultValue: ""
      },
      {
        title: "字典Text",
        key: "queryDictText",
        width: 130,
        type: a.input,
        defaultValue: ""
      },
      {
        title: "默认值",
        key: "queryDefVal",
        width: 130,
        type: a.input,
        defaultValue: ""
      },
      {
        title: "是否启用",
        key: "queryConfigFlag",
        minWidth: 80,
        type: a.checkbox,
        customValue: ["1", "0"],
        defaultChecked: !1
      }
    ]), o = w(l);
    function u({ row: r, column: i, value: m }) {
      i.key === "queryConfigFlag" && m === "1" && t("query", r.id);
    }
    return s(p({}, o), { columns: l, handleChange: u });
  }
});
function x(e, t, l, o, u, r) {
  const i = v("JVxeTable");
  return T(), _(i, V({
    ref: "tableRef",
    rowNumber: "",
    keyboardEdit: "",
    maxHeight: e.tableHeight.noToolbar,
    loading: e.loading,
    columns: e.columns,
    dataSource: e.dataSource,
    disabledRows: { dbFieldName: ["id", "has_child"] },
    onValueChange: e.handleChange
  }, e.tableProps), null, 16, ["maxHeight", "loading", "columns", "dataSource", "onValueChange"]);
}
const W = /* @__PURE__ */ C(q, [["render", x]]);
export {
  W as default
};
