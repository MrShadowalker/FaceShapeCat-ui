var le = Object.defineProperty;
var H = Object.getOwnPropertySymbols;
var ie = Object.prototype.hasOwnProperty, ne = Object.prototype.propertyIsEnumerable;
var q = (a, o, d) => o in a ? le(a, o, { enumerable: !0, configurable: !0, writable: !0, value: d }) : a[o] = d, R = (a, o) => {
  for (var d in o || (o = {}))
    ie.call(o, d) && q(a, d, o[d]);
  if (H)
    for (var d of H(o))
      ne.call(o, d) && q(a, d, o[d]);
  return a;
};
var _ = (a, o, d) => new Promise((w, y) => {
  var C = (f) => {
    try {
      v(d.next(f));
    } catch (p) {
      y(p);
    }
  }, D = (f) => {
    try {
      v(d.throw(f));
    } catch (p) {
      y(p);
    }
  }, v = (f) => f.done ? w(f.value) : Promise.resolve(f.value).then(C, D);
  v((d = d.apply(a, o)).next());
});
import { ref as ae, computed as oe, watch as re, defineComponent as se, resolveComponent as k, openBlock as u, createElementBlock as m, normalizeClass as N, createVNode as x, withCtx as W, Fragment as V, renderList as J, createBlock as P, createElementVNode as c, toDisplayString as B } from "vue";
import { propTypes as O } from "/@/utils/propTypes";
import { getDictItemsByCode as de } from "/@/utils/dict";
import { filterMultiDictText as T, filterDictText as ce } from "/@/utils/dict/JDictSelectUtil";
import { initDictOptions as U } from "/@/utils/dict/index";
import { loadDictItem as ue, queryDepartTreeSync as fe, getUserList as pe } from "/@/api/common/api";
import { defHttp as me } from "/@/utils/http/axios";
import { getAreaTextByCode as _e } from "/@/components/Form/src/utils/Area";
import { getFileAccessHttpUrl as he } from "/@/utils/common/compUtils";
import { createImgPreview as ge } from "/@/components/Preview/index";
import { useMessage as ve } from "/@/hooks/web/useMessage";
import { DownloadOutlined as we, EyeOutlined as ye, PaperClipOutlined as De } from "@ant-design/icons-vue";
import { q as Fe } from "./useExtendComponent-325fe3f1.mjs";
import { MarkdownViewer as ke } from "/@/components/Markdown";
import { _ as Ce } from "./index-0e3ab3af.mjs";
import "/@/components/Form/src/componentMap";
import "/@/components/Modal";
import "/@/components/Form/index";
import "lodash-es";
import "./constant-754f1a9d.mjs";
import "/@/components/Form/src/jeecg/components/JUpload";
import "/@/views/system/user/user.api";
import "/@/store/modules/user";
import "/@/utils";
import "/@/utils/desform/customExpression";
import "/@/store/modules/permission";
import "/@/components/Table";
import "/@/hooks/system/useListPage";
import "vue-router";
import "./LinkTableListPiece-8499a318.mjs";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
import "./OnlineSelectCascade-4265c95d.mjs";
import "/@/components/Loading";
import "/@/utils/auth";
import "./JModalTip-33c7dc44.mjs";
import "/@/hooks/web/useAppInject";
import "ant-design-vue";
import "@vueuse/core";
function be(a) {
  const o = {}, d = [], w = ae({}), { createMessage: y } = ve(), C = oe(() => a.containerClass ? `jeecg-detail-form ${a.containerClass}` : "jeecg-detail-form");
  re(
    () => a.data,
    (e) => _(this, null, function* () {
      if (e) {
        let n = a.schemas, i = {};
        if (n && n.length > 0)
          for (let l of n) {
            let t = l.field;
            try {
              i[t] = yield D(l);
            } catch (r) {
            }
          }
        w.value = i;
      }
    }),
    { deep: !0, immediate: !0 }
  );
  function D(e) {
    return _(this, null, function* () {
      let n = a.data;
      if (n) {
        let i = n[e.field];
        if (!i && i !== "0" && i !== 0)
          return "";
        let l = i, t = e.view;
        if (t == "list" || t == "radio" || t == "checkbox" || t == "list_multi")
          l = yield v(e, n);
        else if (t == "sel_search")
          l = yield p(e, n);
        else if (t == "cat_tree")
          l = yield b(e, n);
        else if (t == "link_table")
          l = yield ee(e, n);
        else if (t == "sel_depart")
          l = yield S(e, n);
        else if (t == "sel_user")
          l = yield j(e, n);
        else if (t == "pca")
          l = _e(i);
        else if (t == "link_down")
          l = yield E(e, n);
        else if (t == "sel_tree")
          l = yield h(e, n);
        else if (t == "switch")
          l = yield L(e, n);
        else if (t == "image" || t == "file")
          l = K(e, n);
        else if (d.indexOf(e.field) >= 0) {
          let r = o[e.field];
          r && r.length > 0 && (l = T(r, i));
        }
        return l;
      }
      return "";
    });
  }
  function v(e, n) {
    return _(this, null, function* () {
      let i = f(e), l = n[e.field];
      if (!i)
        return l;
      let t = de(i);
      if (t && t.length > 0)
        return T(t, l);
      {
        let r = [];
        if (o[i] ? r = o[i] : r = (yield U(i)) || [], r && r.length > 0)
          return o[i] = r, T(r, l);
      }
      return "";
    });
  }
  function f(e) {
    let n = "", { dictCode: i, dictTable: l, dictText: t } = e;
    return l ? n = encodeURI(`${l},${t},${i}`) : n = i, n;
  }
  function p(e, n) {
    return _(this, null, function* () {
      let i = f(e), l = n[e.field];
      if (!l)
        return "";
      let t = [];
      return o[i + l] ? t = o[i + l] : t = (yield me.get({ url: `/sys/dict/loadDictItem/${i}`, params: { key: l } })) || [], t && t.length > 0 ? (o[i + l] = t, t.join(",")) : "";
    });
  }
  function b(e, n) {
    return _(this, null, function* () {
      let i = n[e.field];
      if (!i)
        return "";
      let l = (yield ue({ ids: i })) || [];
      return l && l.length > 0 ? l.join(",") : "";
    });
  }
  function S(e, n) {
    return _(this, null, function* () {
      let i = n[e.field];
      if (!i)
        return "";
      let t = s(e).store || "id", r = (yield fe({ ids: i, primaryKey: t })) || [];
      if (r && r.length > 0) {
        let g = [];
        for (let F of r)
          g.push(F.title);
        return g.join(",");
      }
      return "";
    });
  }
  function j(e, n) {
    return _(this, null, function* () {
      let i = n[e.field];
      if (!i)
        return "";
      let l = s(e), r = {
        [l.store || "username"]: i
      }, F = ((yield pe(r)) || {}).records || [];
      if (F && F.length > 0) {
        let I = [], $ = l.text || "realname";
        for (let M of F)
          I.push(M[$]);
        return I.join(",");
      }
      return "";
    });
  }
  function s(e) {
    let n = {}, { fieldExtendJson: i } = e;
    if (i && typeof i == "string")
      try {
        let l = JSON.parse(i);
        n = R({}, l);
      } catch (l) {
      }
    return n;
  }
  function E(e, n) {
    return _(this, null, function* () {
      let { dictTable: i, field: l } = e, t = [];
      if (o[l])
        t = o[l];
      else if (i) {
        let r = JSON.parse(i);
        if (r) {
          let { table: g, txt: F, key: I, linkField: $ } = r, M = `${g},${F},${I}`;
          if (t = [...(yield U(M)) || []], t && t.length > 0 && (o[l] = t, $)) {
            let te = $.split(",");
            for (let A of te)
              o[A] = t, d.push(A);
          }
        }
      }
      if (t && t.length > 0) {
        let r = n[l];
        return T(t, r);
      }
      return "";
    });
  }
  function h(e, n) {
    return _(this, null, function* () {
      let { dict: i, field: l } = e, t = [];
      if (o[l] ? t = o[l] : i && (t = yield U(i)), t && t.length > 0) {
        let r = n[l];
        return T(t, r);
      }
      return "";
    });
  }
  function L(e, n) {
    return _(this, null, function* () {
      let { fieldExtendJson: i, field: l } = e, t = ["Y", "N"];
      i && (t = JSON.parse(i));
      let r = [
        { value: t[0], text: "是" },
        { value: t[1], text: "否" },
        { value: t[0] + "", text: "是" },
        { value: t[1] + "", text: "否" }
      ], g = n[l];
      return ce(r, g);
    });
  }
  function z(e) {
    return e.span ? e.span : a.span;
  }
  function K(e, n) {
    let i = n[e.field];
    if (!i)
      return [];
    let l = i.split(","), t = [];
    for (let r of l) {
      let g = he(r) || "";
      g && t.push(g);
    }
    return t;
  }
  function Y(e) {
    e && window.open(e);
  }
  function G(e) {
    let n = w.value[e];
    if (!n || n.length == 0) {
      y.warning("无图片!");
      return;
    }
    ge({ imageList: n });
  }
  function Q(e) {
    return e ? e.substring(e.lastIndexOf("/") + 1) : "";
  }
  const X = ["file", "image", "markdown", "umeditor"];
  function Z(e) {
    return X.indexOf(e.view) >= 0 ? a.span == 12 ? "span12" : a.span == 8 ? "span8" : a.span == 6 ? "span6" : "span24" : "";
  }
  function ee(e, n) {
    return _(this, null, function* () {
      let i = n[e.field];
      return s(e).showType == "select" ? i ? n[e.field + "_dictText"] : "" : i ? n[e.field] : "";
    });
  }
  return {
    formContainerClass: C,
    detailFormData: w,
    getItemSpan: z,
    handleDownloadFile: Y,
    handleViewImage: G,
    getFilename: Q,
    getLabelWidthClass: Z
  };
}
const xe = se({
  name: "DetailForm",
  components: {
    DownloadOutlined: we,
    EyeOutlined: ye,
    PaperClipOutlined: De,
    LinkTableCard: Fe,
    MarkdownViewer: ke
  },
  props: {
    span: O.number.def(24),
    //表单配置
    schemas: O.array.def([]),
    //表单数据
    data: O.object.def({}),
    containerClass: O.string.def("")
  },
  setup(a) {
    const { formContainerClass: o, detailFormData: d, getItemSpan: w, handleDownloadFile: y, handleViewImage: C, getFilename: D, getLabelWidthClass: v } = be(a);
    return {
      formContainerClass: o,
      detailFormData: d,
      getItemSpan: w,
      handleDownloadFile: y,
      handleViewImage: C,
      getFilename: D,
      getLabelWidthClass: v,
      filterLable: (p) => {
        if (p.fieldExtendJson) {
          const b = JSON.parse(p.fieldExtendJson);
          if (b.labelLength && p.label.length > 4)
            return p.label.substr(0, b.labelLength);
        }
        return p.label;
      }
    };
  }
});
const Te = { class: "detail-item" }, Le = ["title"], Ie = {
  key: 0,
  class: "item-content"
}, $e = ["innerHTML"], Oe = {
  key: 2,
  class: "item-content",
  style: { display: "block", "padding-top": "10px" }
}, Se = { key: 0 }, je = {
  key: 3,
  class: "item-content"
}, Ee = { class: "ant-upload-list ant-upload-list-picture-card" }, Me = {
  class: "ant-upload-list-picture-card-container",
  style: { "margin-top": "8px" }
}, Ne = {
  class: "ant-upload-list-item ant-upload-list-item-done ant-upload-list-item-list-type-picture-card",
  "data-has-actions": "true"
}, Ve = { class: "ant-upload-list-item-info" }, Je = ["src"], Be = { class: "ant-upload-list-item-actions" }, Ue = {
  key: 4,
  class: "item-content"
}, Ae = { class: "ant-upload-list ant-upload-list-text" }, He = { class: "" }, qe = { class: "ant-upload-list-item ant-upload-list-item-done ant-upload-list-item-list-type-text" }, Re = { class: "ant-upload-list-item-info" }, We = { class: "ant-upload-span" }, Pe = { class: "ant-upload-text-icon" }, ze = ["href"], Ke = { class: "ant-upload-list-item-card-actions" }, Ye = {
  key: 5,
  class: "item-content"
};
function Ge(a, o, d, w, y, C) {
  const D = k("MarkdownViewer"), v = k("link-table-card"), f = k("download-outlined"), p = k("eye-outlined"), b = k("paper-clip-outlined"), S = k("a-col"), j = k("a-row");
  return u(), m("div", {
    class: N(a.formContainerClass)
  }, [
    x(j, null, {
      default: W(() => [
        (u(!0), m(V, null, J(a.schemas, (s, E) => (u(), P(S, {
          key: E,
          span: a.getItemSpan(s)
        }, {
          default: W(() => [
            c("div", Te, [
              c("div", {
                class: N(["item-title", a.getLabelWidthClass(s)]),
                title: s.label
              }, B(a.filterLable(s)) + "： ", 11, Le),
              s.view === "markdown" ? (u(), m("div", Ie, [
                x(D, {
                  value: a.detailFormData[s.field],
                  "onUpdate:value": (h) => a.detailFormData[s.field] = h,
                  placeholder: ""
                }, null, 8, ["value", "onUpdate:value"])
              ])) : s.isHtml ? (u(), m("div", {
                key: 1,
                class: N(["item-content", s.view]),
                innerHTML: a.detailFormData[s.field]
              }, null, 10, $e)) : s.isCard ? (u(), m("div", Oe, [
                a.detailFormData[s.field] ? (u(), P(v, {
                  key: 1,
                  disabled: "",
                  detail: "",
                  value: a.detailFormData[s.field],
                  valueField: s.dictCode,
                  textField: s.dictText,
                  tableName: s.dictTable,
                  multi: s.multi
                }, null, 8, ["value", "valueField", "textField", "tableName", "multi"])) : (u(), m("span", Se))
              ])) : s.isImage ? (u(), m("div", je, [
                c("div", Ee, [
                  (u(!0), m(V, null, J(a.detailFormData[s.field], (h) => (u(), m("div", Me, [
                    c("span", null, [
                      c("div", Ne, [
                        c("div", Ve, [
                          c("img", {
                            src: h,
                            alt: "图片不存在",
                            class: "ant-upload-list-item-image"
                          }, null, 8, Je)
                        ]),
                        c("span", Be, [
                          x(f, {
                            onClick: (L) => a.handleDownloadFile(h)
                          }, null, 8, ["onClick"]),
                          x(p, {
                            onClick: (L) => a.handleViewImage(s.field)
                          }, null, 8, ["onClick"])
                        ])
                      ])
                    ])
                  ]))), 256))
                ])
              ])) : s.isFile ? (u(), m("div", Ue, [
                c("div", Ae, [
                  (u(!0), m(V, null, J(a.detailFormData[s.field], (h) => (u(), m("div", He, [
                    c("span", null, [
                      c("div", qe, [
                        c("div", Re, [
                          c("span", We, [
                            c("div", Pe, [
                              x(b)
                            ]),
                            c("a", {
                              href: h,
                              target: "_blank",
                              rel: "noopener noreferrer",
                              class: "ant-upload-list-item-name"
                            }, B(a.getFilename(h)), 9, ze),
                            c("span", Ke, [
                              x(f, {
                                onClick: (L) => a.handleDownloadFile(h)
                              }, null, 8, ["onClick"])
                            ])
                          ])
                        ])
                      ])
                    ])
                  ]))), 256))
                ])
              ])) : (u(), m("div", Ye, B(a.detailFormData[s.field]), 1))
            ])
          ]),
          _: 2
        }, 1032, ["span"]))), 128))
      ]),
      _: 1
    })
  ], 2);
}
const Vt = /* @__PURE__ */ Ce(xe, [["render", Ge], ["__scopeId", "data-v-fce737d0"]]);
export {
  Vt as default
};
