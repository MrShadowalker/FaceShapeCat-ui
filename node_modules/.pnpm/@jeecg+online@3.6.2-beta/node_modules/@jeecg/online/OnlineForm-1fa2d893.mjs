var yt = Object.defineProperty;
var be = Object.getOwnPropertySymbols;
var vt = Object.prototype.hasOwnProperty, Ft = Object.prototype.propertyIsEnumerable;
var ye = (r, f, i) => f in r ? yt(r, f, { enumerable: !0, configurable: !0, writable: !0, value: i }) : r[f] = i, x = (r, f) => {
  for (var i in f || (f = {}))
    vt.call(f, i) && ye(r, i, f[i]);
  if (be)
    for (var i of be(f))
      Ft.call(f, i) && ye(r, i, f[i]);
  return r;
};
var S = (r, f, i) => new Promise((a, R) => {
  var w = (g) => {
    try {
      F(i.next(g));
    } catch (d) {
      R(d);
    }
  }, P = (g) => {
    try {
      F(i.throw(g));
    } catch (d) {
      R(d);
    }
  }, F = (g) => g.done ? a(g.value) : Promise.resolve(g.value).then(w, P);
  F((i = i.apply(r, f)).next());
});
import { useMessage as _t } from "/@/hooks/web/useMessage";
import { ref as p, inject as St, reactive as Tt, computed as wt, resolveComponent as y, openBlock as T, createElementBlock as I, createVNode as C, createCommentVNode as K, createBlock as H, withCtx as N, Fragment as kt, renderList as Ct, normalizeStyle as Pt, renderSlot as Ot, unref as ve, nextTick as Fe, toRaw as D } from "vue";
import { BasicForm as xt, useForm as Rt } from "/@/components/Form/index";
import { c as Vt, O as At, d as Dt, e as Et, u as Mt, l as W, g as jt, V as J, S as Bt, f as It, h as _e } from "./useExtendComponent-325fe3f1.mjs";
import { defHttp as te } from "/@/utils/http/axios";
import { pick as Nt, omit as Se } from "lodash-es";
import { sleep as Jt, goJmReportViewPage as Lt } from "/@/utils";
import { Loading as Ut } from "/@/components/Loading";
import "/@/components/jeecg/JVxeTable/types";
import { getToken as qt } from "/@/utils/auth";
import { PrinterOutlined as Kt, DiffOutlined as Ht, FormOutlined as Wt } from "@ant-design/icons-vue";
import "/@/hooks/core/useContext";
import "/@/utils/mitt";
import { useModal as Gt } from "/@/components/Modal";
import { u as zt, G as Qt } from "./useCustomHook-acb00837.mjs";
import { E as G } from "./constant-754f1a9d.mjs";
import { _ as Yt } from "./index-0e3ab3af.mjs";
import "/@/components/Form/src/componentMap";
import "/@/utils/propTypes";
import "/@/components/Form/src/jeecg/components/JUpload";
import "/@/views/system/user/user.api";
import "/@/store/modules/user";
import "/@/utils/desform/customExpression";
import "/@/store/modules/permission";
import "/@/utils/dict/JDictSelectUtil";
import "/@/utils/common/compUtils";
import "/@/components/Table";
import "/@/hooks/system/useListPage";
import "vue-router";
import "/@/components/Form/src/utils/Area";
import "/@/components/Preview/index";
import "./LinkTableListPiece-8499a318.mjs";
import "./OnlineSelectCascade-4265c95d.mjs";
import "./JModalTip-33c7dc44.mjs";
import "/@/hooks/web/useAppInject";
import "ant-design-vue";
import "@vueuse/core";
import "/@/utils/cache";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
const le = {
  optPre: "/online/cgform/api/form/",
  urlButtonAction: "/online/cgform/api/doButton"
}, Xt = {
  name: "OnlineForm",
  components: {
    BasicForm: xt,
    Loading: Ut,
    OnlineSubForm: Vt,
    PrinterOutlined: Kt,
    DiffOutlined: Ht,
    FormOutlined: Wt,
    OnlinePopModal: At
  },
  props: {
    id: {
      type: String,
      default: ""
    },
    formTemplate: {
      type: Number,
      default: 1
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    isTree: {
      type: Boolean,
      default: !1
    },
    pidField: {
      type: String,
      default: ""
    },
    submitTip: {
      type: Boolean,
      default: !0
    },
    modalClass: {
      type: String,
      default: ""
    },
    themeTemplate: {
      type: String,
      default: ""
    },
    // update-begin--author:liaozhiyang---date:20231128---for：【QQYUN-7260】erp主表编辑时保存子表记录
    // erp风格会传来所有子表数据
    subTableSource: {
      default: () => ({})
    }
    // update-end-author:liaozhiyang---date:20231128---for：【QQYUN-7260】erp主表编辑时保存子表记录
  },
  emits: ["success", "rendered"],
  setup(r, { emit: f }) {
    const { createMessage: i } = _t(), a = p(null), R = p(!0), w = p(!1), P = p(1), F = p(""), g = p(!1), d = p(!1), O = St("foreignkey", { value: {} }), V = Tt({
      reportPrintShow: 0,
      reportPrintUrl: "",
      joinQuery: 0,
      modelFullscreen: 0,
      modalMinWidth: "",
      commentStatus: 0
    }), { onlineFormContext: c, resetContext: z } = Dt(), {
      formSchemas: E,
      defaultValueFields: A,
      changeDataIfArray2String: L,
      tableName: s,
      dbData: v,
      checkOnlyFieldValue: h,
      hasSubTable: Te,
      subTabInfo: M,
      refMap: Q,
      subDataSource: U,
      baseColProps: we,
      createFormSchemas: ke,
      linkDownList: ll,
      fieldDisplayStatus: j
    } = Et(r, a);
    let { EnhanceJS: u, initCgEnhanceJs: Ce } = Mt(c, !1);
    const { executeJsEnhanced: Pe } = zt({}, c), [Oe, { setProps: xe, validate: oe, resetFields: ne, setFieldsValue: k, updateSchema: Y, getFieldsValue: X, scrollToField: Re }] = Rt({
      schemas: E,
      showActionButtonGroup: !1,
      baseColProps: we
    }), ae = p(!1);
    function Ve() {
      let e = r.disabled;
      ae.value = e, xe({ disabled: e });
    }
    function Ae(e, t, l) {
      return S(this, null, function* () {
        yield De(), F.value = "", yield ne(), v.value = "";
        let o = ve(e);
        d.value = o, o ? yield re(t) : se(), Fe(() => {
          !o && l && k(l), Ee(), Z("js", "loaded"), Ve();
        });
      });
    }
    function De() {
      return S(this, null, function* () {
        if (r.isTree === !0) {
          let e = r.pidField, t = E.value;
          t && t.length > 0 && t.filter((o) => o.field === e).length > 0 && (yield Y({
            field: e,
            componentProps: {
              reload: (/* @__PURE__ */ new Date()).getTime()
            }
          }));
        }
      });
    }
    function Ee() {
      if (ve(d) === !1) {
        let e = D(A[s.value]);
        W(e, (t) => {
          k(t);
        });
      }
    }
    function ie(e, t) {
      let l = D(A[e.key]);
      W(l, (o) => {
        const { row: n, target: m } = t;
        let _ = [{ rowKey: n.id, values: x({}, o) }];
        m.setValues(_);
      });
    }
    function re(e) {
      return S(this, null, function* () {
        let t = yield je(e.id);
        v.value = Object.assign({}, e, t);
        let l = Me.value, o = Nt(t, ...l);
        r.disabled && Object.keys(o).map((n) => {
          !o[n] && o[n] !== 0 && o[n] !== "0" && delete o[n];
        }), yield k(o), se(t);
      });
    }
    function se(e) {
      e || (e = {});
      let t = Object.keys(U.value);
      if (t && t.length > 0) {
        let l = {};
        for (let o of t)
          l[o] = e[o] || [];
        U.value = l;
      }
    }
    let Me = wt(() => {
      let e = E.value, t = [];
      for (let l of e)
        t.push(l.field);
      return t;
    });
    function je(e) {
      let t = `${le.optPre}${r.id}/${e}`;
      return new Promise((l, o) => {
        te.get({ url: t }, { isTransformResponse: !1 }).then((n) => {
          n.success ? l(n.result) : (o(), i.warning(n.message));
        }).catch(() => {
          o();
        });
      });
    }
    function Be(e) {
      return S(this, null, function* () {
        P.value = e.head.tableType, s.value = e.head.tableName, R.value = e.head.tableType == 1, Je(e.head.extConfigJson), ke(e.schema.properties, e.schema.required, h), u = Ce(e.enhanceJs), f("rendered", V);
        let t = yield jt(a);
        t.$formValueChange = (l, o, n) => {
          lt(l, o), n && k(n), Ie(l, o, n);
        }, u && u.setup && de(u.setup);
      });
    }
    function Ie(e, t, l) {
      c.changEvent(e, t, l);
    }
    function Ne(e) {
      c.addObject2Context("changEvent", e);
    }
    function Je(e) {
      let t = { reportPrintShow: 0, reportPrintUrl: "", joinQuery: 0, modelFullscreen: 0, modalMinWidth: "", commentStatus: 0 };
      e && (t = JSON.parse(e)), Object.keys(t).map((l) => {
        V[l] = t[l];
      });
    }
    function Le() {
      R.value === !0 ? We() : Ue();
    }
    function Ue() {
      qe().then((e) => {
        ue(e);
      });
    }
    function qe() {
      let e = {};
      return new Promise((t, l) => {
        oe().then(
          (o) => t(o),
          ({ errorFields: o }) => {
            o && o.length > 0 && Re(o[0][0]), l(J);
          }
        );
      }).then((t) => (Object.assign(e, L(t)), r.themeTemplate === G ? Promise.resolve({}) : He())).then((t) => (Object.assign(e, t), Promise.resolve(e))).catch((t) => ((t === J || (t == null ? void 0 : t.code) === J) && (i.warning("校验未通过"), t.key && Ke(t.key)), Promise.reject(null)));
    }
    function Ke(e) {
      let t = M.value;
      for (let l = 0; l < t.length; l++)
        if (e == t[l].key) {
          let o = l + "";
          if (q.value === o)
            break;
          if (q.value = o, t[l].relationType === 0) {
            let n = b(e);
            Jt(300, () => n == null ? void 0 : n.validateTable());
          }
          break;
        }
    }
    function He() {
      return new Promise((e, t) => S(this, null, function* () {
        let l = {};
        try {
          let o = M.value;
          for (let n = 0; n < o.length; n++) {
            let m = o[n].key, _ = b(m);
            if (o[n].relationType == 1)
              try {
                let B = yield _.getAll();
                l[m] = [], l[m].push(B);
              } catch (B) {
                throw { code: J, key: m };
              }
            else {
              if (yield _.fullValidateTable())
                throw { code: J, key: m };
              l[m] = _.getTableData();
            }
          }
        } catch (o) {
          t(o);
        }
        e(l);
      }));
    }
    function We() {
      return S(this, null, function* () {
        try {
          let e = yield oe();
          e = Object.assign({}, v.value, e), e = L(e), w.value = !0, ue(e);
        } finally {
          w.value = !1;
        }
      });
    }
    function ue(e) {
      r.themeTemplate === G && d.value && Object.keys(r.subTableSource).length && (e = x(x({}, e), r.subTableSource)), at(he, e).then(() => {
        Ge(e);
      }).catch((t) => {
        i.warning(t);
      });
    }
    function Ge(e) {
      Object.keys(e).map((n) => {
        Array.isArray(e[n]) && e[n].length == 0 && (e[n] = "");
      });
      let t = F.value, l = `${le.optPre}${r.id}?tabletype=${P.value}`;
      t && (l = `${t}?tabletype=${P.value}`), g.value === !0 && (e[Bt] = 1), O.value.field && O.value.value && (e[O.value.field] = O.value.value);
      let o = d.value === !0 ? "put" : "post";
      te.request({ url: l, method: o, params: e }, { isTransformResponse: !1 }).then((n) => {
        n.success ? (n.result && (e[It] = n.result), f("success", e), r.submitTip === !0 && i.success(n.message)) : i.warning(n.message);
      }).finally(() => {
        w.value = !1;
      });
    }
    function ze(e, t, l) {
      t && l ? l.vxeProps ? l.setValues([
        {
          rowKey: t,
          values: e
        }
      ]) : l.setValues(e) : k(e);
    }
    function Qe(e, t) {
      let l = {};
      l[e] = t, k(l);
    }
    const q = p("0"), fe = p(300), ce = p(340);
    function Ye(e) {
      if (d.value === !0) {
        let t = v.value;
        return Xe(t, e);
      }
      return "";
    }
    function Xe(e, t) {
      if (e) {
        let l = e[t];
        return !l && l !== 0 && (l = e[t.toLowerCase()], !l && l !== 0 && (l = e[t.toUpperCase()])), l;
      }
      return "";
    }
    function Ze(e, t) {
      if (u && u[t + "_onlChange"]) {
        let l = u[t + "_onlChange"](), o = Object.keys(e)[0];
        if (l[o]) {
          let m = b(t).getFormEvent(), _ = x({
            column: { key: o },
            value: e[o]
          }, m);
          l[o].call(c, c, _);
        }
      }
    }
    function $e(e, t) {
      if (u && u[t + "_onlChange"]) {
        let l = u[t + "_onlChange"](c);
        if (e.column === "all") {
          let o = Object.keys(l);
          if (o.length > 0)
            for (let n of o)
              l[n].call(c, c, e);
        } else {
          let o = e.column.key || e.col.key;
          l[o] && e.row && e.row.id && l[o].call(c, c, e);
        }
      }
    }
    function et(e, t) {
      t.isModalData || ie(e, t);
    }
    function tt(e) {
      return "online_" + e + ":";
    }
    function lt(e, t) {
      return S(this, null, function* () {
        if (!u || !u.onlChange || !e)
          return !1;
        let l = u.onlChange();
        if (l[e]) {
          let n = {
            row: yield X(),
            column: { key: e },
            value: t
          };
          l[e].call(c, c, n);
        }
      });
    }
    function de(e) {
      let l = e.toLocaleString().match(Qt);
      if (l.length > 1) {
        let o = l[1];
        Pe(o);
      }
    }
    function Z(e, t) {
      if (e == "js") {
        let l = t + "_hook";
        u && u[t] ? u[t].call(c, c) : u && u[l] && de(u[l]);
      } else if (e == "action") {
        let l = v.value, o = {
          formId: r.id,
          buttonCode: t,
          dataId: l.id,
          uiFormData: Object.assign({}, l)
        };
        te.post(
          {
            url: `${le.urlButtonAction}`,
            params: o
          },
          { isTransformResponse: !1 }
        ).then((n) => {
          n.success ? i.success("处理完成!") : i.warning("处理失败!");
        });
      }
    }
    function me(e) {
      let t = b(e), l = [...t.getNewDataWithId(), ...U.value[e]];
      if (!l || l.length == 0)
        return !1;
      let o = [];
      for (let n of l)
        o.push(n.id);
      t.removeRowsById(o);
    }
    function pe(e, t) {
      if (!t)
        return !1;
      let l = b(e);
      typeof t == "object" ? l.addRows(t, !0) : this.$message.error("添加子表数据,参数不识别!");
    }
    function ot(e, t) {
      me(e), pe(e, t);
    }
    function nt(e, t) {
      !t && t.length <= 0 && (t = []), t.map((l) => {
        l.hasOwnProperty("label") || (l.label = l.text);
      }), Y({
        field: e,
        componentProps: {
          options: t
        }
      });
    }
    function at(e, t) {
      return u && u.beforeSubmit ? u.beforeSubmit(e, t) : Promise.resolve();
    }
    function it(e, t) {
      let l = D(j);
      e && e.length > 0 ? Object.keys(l).map((o) => {
        !o.endsWith("_load") && e.indexOf(o) < 0 && (j[o] = !1);
      }) : t && t.length > 0 && Object.keys(l).map((o) => {
        t.indexOf(o) >= 0 && (j[o] = !1);
      });
    }
    function rt(e, t) {
      return S(this, null, function* () {
        F.value = t, yield ne(), v.value = "", d.value = !0, yield re(e), yield Fe(() => {
          Z("js", "loaded");
        });
      });
    }
    function b(e) {
      let t = Q[e].value;
      if (t instanceof Array && (t = t[0]), !t) {
        i.warning("子表ref找不到:" + e);
        return;
      }
      return t;
    }
    function st() {
      let e = V.reportPrintUrl, t = v.value.id, l = qt();
      Lt(e, t, l);
    }
    const [ut, { openModal: ge }] = Gt(), $ = p(""), ee = p(!0);
    function ft(e) {
      $.value = e.id, ee.value = !1, ge(!0, { isUpdate: !1, tableType: "3" });
    }
    function ct(e) {
      let l = b(e.key).getSelectedData();
      if (l.length != 1) {
        i.warning("请选择一条数据");
        return;
      }
      $.value = e.id, ee.value = !1, ge(!0, { isUpdate: !0, record: l[0] });
    }
    function dt(e) {
      const t = e[_e];
      let l = Se(e, [_e]);
      if (l.id) {
        let o = Se(x({}, l), "id"), n = [{ rowKey: l.id, values: o }];
        b(t).setValues(n);
      } else
        b(t).addRows(l, { isOnlineJS: !1, setActive: !1, emitChange: !0, isModalData: !0 });
    }
    function mt() {
      if (r.themeTemplate === G)
        return;
      let e = M.value;
      if (e && e.length > 0) {
        for (let t of e)
          if (t.relationType != 1) {
            let l = b(t.key);
            l && l.clearSelection();
          }
      }
    }
    function pt() {
      let e = X(), t = D(A[s.value]);
      W(t, (l) => {
        k(l);
      }, e);
    }
    function gt(e, t) {
      let l = M.value;
      if (l && l.length > 0) {
        let o = l.filter((n) => n.key === e);
        if (o.length == 0)
          return;
        if (o[0].relationType == 1)
          b(e).executeFillRule();
        else {
          let n = D(A[e]), m = D(t.row);
          W(n, (_) => {
            const { row: B, target: ht } = t;
            let bt = [{ rowKey: B.id, values: x({}, _) }];
            ht.setValues(bt);
          }, m);
        }
      }
    }
    let he = {
      tableName: s,
      loading: w,
      subActiveKey: q,
      onlineFormRef: a,
      getFieldsValue: X,
      setFieldsValue: k,
      submitFlowFlag: g,
      subFormHeight: fe,
      subTableHeight: ce,
      refMap: Q,
      triggleChangeValues: ze,
      triggleChangeValue: Qe,
      sh: j,
      clearSubRows: me,
      addSubRows: pe,
      clearThenAddRows: ot,
      changeOptions: nt,
      isUpdate: d,
      getSubTableInstance: b,
      updateSchema: Y,
      executeMainFillRule: pt,
      executeSubFillRule: gt,
      changEvent: () => {
      },
      onlineFormValueChange: Ne
    };
    return z(he), {
      //主表
      tableName: s,
      onlineFormRef: a,
      registerForm: Oe,
      loading: w,
      //子表
      subActiveKey: q,
      hasSubTable: Te,
      subTabInfo: M,
      refMap: Q,
      //一对一子表
      subFormHeight: fe,
      getSubTableForeignKeyValue: Ye,
      isUpdate: d,
      handleSubFormChange: Ze,
      //一对多子表
      subTableHeight: ce,
      onlineFormDisabled: ae,
      subDataSource: U,
      getSubTableAuthPre: tt,
      handleAdded: et,
      handleSubTableDefaultValue: ie,
      handleValueChange: $e,
      openSubFormModalForAdd: ft,
      openSubFormModalForEdit: ct,
      //父组件调用
      show: Ae,
      createRootProperties: Be,
      handleSubmit: Le,
      sh: j,
      handleCgButtonClick: Z,
      handleCustomFormSh: it,
      handleCustomFormEdit: rt,
      //跳转
      dbData: v,
      onOpenReportPrint: st,
      onlineExtConfigJson: V,
      //一对多子表弹窗操作数据
      registerPopModal: ut,
      popTableName: $,
      getPopFormData: dt,
      popModalRequest: ee,
      onCloseModal: mt,
      ERP: G
    };
  }
}, Zt = ["id"], $t = {
  key: 0,
  style: { "text-align": "right", position: "absolute", top: "6px", right: "20px", "z-index": "999" }
}, el = { key: 1 };
function tl(r, f, i, a, R, w) {
  const P = y("PrinterOutlined"), F = y("BasicForm"), g = y("online-sub-form"), d = y("diff-outlined"), O = y("a-button"), V = y("form-outlined"), c = y("JVxeTable"), z = y("a-tab-pane"), E = y("a-tabs"), A = y("Loading"), L = y("online-pop-modal");
  return T(), I("div", {
    id: a.tableName + "_form"
  }, [
    a.dbData.id && a.onlineExtConfigJson.reportPrintShow ? (T(), I("div", $t, [
      C(P, {
        title: "打印",
        onClick: a.onOpenReportPrint,
        style: { "font-size": "16px" }
      }, null, 8, ["onClick"])
    ])) : K("", !0),
    C(F, {
      ref: "onlineFormRef",
      onRegister: a.registerForm
    }, null, 8, ["onRegister"]),
    i.themeTemplate !== a.ERP && a.hasSubTable ? (T(), H(E, {
      key: 1,
      activeKey: a.subActiveKey,
      "onUpdate:activeKey": f[0] || (f[0] = (s) => a.subActiveKey = s)
    }, {
      default: N(() => [
        (T(!0), I(kt, null, Ct(a.subTabInfo, (s, v) => (T(), H(z, {
          tab: s.describe,
          key: v + "",
          forceRender: !0
        }, {
          default: N(() => [
            s.relationType == 1 ? (T(), I("div", {
              key: 0,
              style: Pt({ "overflow-y": "auto", "overflow-x": "hidden", "max-height": a.subFormHeight + "px" })
            }, [
              C(g, {
                ref_for: !0,
                ref: a.refMap[s.key],
                table: s.key,
                disabled: a.onlineFormDisabled,
                "form-template": i.formTemplate,
                "main-id": a.getSubTableForeignKeyValue(s.foreignKey),
                properties: s.properties,
                "required-fields": s.requiredFields,
                "is-update": a.isUpdate,
                onFormChange: (h) => a.handleSubFormChange(h, s.key)
              }, null, 8, ["table", "disabled", "form-template", "main-id", "properties", "required-fields", "is-update", "onFormChange"])
            ], 4)) : (T(), I("div", el, [
              C(c, {
                ref_for: !0,
                ref: a.refMap[s.key],
                toolbar: "",
                "keep-source": "",
                "row-number": "",
                "row-selection": "",
                height: (
                  // 【VUEN-803】一对多子表固定340高度，修复自定义列组件被遮挡的问题
                  a.subTableHeight
                ),
                disabled: a.onlineFormDisabled,
                columns: s.columns,
                dataSource: a.subDataSource[s.key],
                onValueChange: (h) => a.handleValueChange(h, s.key),
                authPre: a.getSubTableAuthPre(s.key),
                onAdded: (h) => a.handleAdded(s, h),
                onExecuteFillRule: (h) => a.handleSubTableDefaultValue(s, h)
              }, {
                toolbarSuffix: N(() => [
                  a.onlineFormDisabled ? K("", !0) : (T(), H(O, {
                    key: 0,
                    type: "primary",
                    onClick: (h) => a.openSubFormModalForAdd(s)
                  }, {
                    default: N(() => [
                      C(d)
                    ]),
                    _: 2
                  }, 1032, ["onClick"])),
                  a.onlineFormDisabled ? K("", !0) : (T(), H(O, {
                    key: 1,
                    type: "primary",
                    onClick: (h) => a.openSubFormModalForEdit(s)
                  }, {
                    default: N(() => [
                      C(V)
                    ]),
                    _: 2
                  }, 1032, ["onClick"]))
                ]),
                _: 2
              }, 1032, ["height", "disabled", "columns", "dataSource", "onValueChange", "authPre", "onAdded", "onExecuteFillRule"])
            ]))
          ]),
          _: 2
        }, 1032, ["tab"]))), 128))
      ]),
      _: 1
    }, 8, ["activeKey"])) : K("", !0),
    C(A, {
      loading: a.loading,
      absolute: !1
    }, null, 8, ["loading"]),
    Ot(r.$slots, "bottom"),
    C(L, {
      formTableType: "3",
      request: a.popModalRequest,
      id: a.popTableName,
      onRegister: a.registerPopModal,
      onSuccess: a.getPopFormData,
      topTip: "",
      isVxeTableData: ""
    }, null, 8, ["request", "id", "onRegister", "onSuccess"])
  ], 8, Zt);
}
const ql = /* @__PURE__ */ Yt(Xt, [["render", tl]]);
export {
  ql as default
};
