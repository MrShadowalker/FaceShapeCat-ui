var r = (n, f, s) => new Promise((m, u) => {
  var p = (a) => {
    try {
      i(s.next(a));
    } catch (e) {
      u(e);
    }
  }, c = (a) => {
    try {
      i(s.throw(a));
    } catch (e) {
      u(e);
    }
  }, i = (a) => a.done ? m(a.value) : Promise.resolve(a.value).then(p, c);
  i((s = s.apply(n, f)).next());
});
import { defineComponent as g, ref as k, watch as w, resolveComponent as _, openBlock as S, createElementBlock as x, createVNode as h, withCtx as l, createTextVNode as b } from "vue";
import { BasicTable as F, useTable as v } from "/@/components/Table";
import { a as E, b as I, c as y } from "./auth.api-d3a6c4b3.mjs";
import { a as T } from "./auth.data-8be5c9e3.mjs";
import { _ as B } from "./index-0e3ab3af.mjs";
import "/@/utils/http/axios";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
import "/@/hooks/web/useMessage";
import "vue-router";
const U = g({
  name: "AuthFieldConfig",
  components: { BasicTable: F },
  props: {
    headId: {
      type: String,
      default: "",
      required: !0
    }
  },
  emits: ["update:authFields"],
  setup(n, { emit: f }) {
    const s = k(""), [m, { reload: u }] = v({
      api: p,
      rowKey: "code",
      bordered: !0,
      columns: T,
      showIndexColumn: !1
    });
    w(
      () => n.headId,
      (a) => {
        s.value = a.split("?")[0], u().catch(() => null);
      },
      { immediate: !0 }
    );
    function p(a) {
      return r(this, null, function* () {
        const e = ["id"];
        let t = yield E(s.value, a), o = [], C = [];
        return t.forEach((d) => {
          e.indexOf(d.code) < 0 && ((d.isShowForm == 1 || d.isShowList == 1) && C.push(d), d.dbIsPersist == 1 && o.push({ text: d.title, value: d.code }));
        }), f("update:authFields", o), C;
      });
    }
    function c(a, e) {
      return r(this, null, function* () {
        yield I({
          cgformId: s.value,
          code: e.code,
          status: a ? 1 : 0
        }), e.formEditable || e.formShow || e.listShow || (e.formEditable = !0, e.formShow = !0, e.listShow = !0), e.status = Math.abs(e.status - 1);
      });
    }
    function i(a, e, t) {
      return r(this, null, function* () {
        let o = a.target.checked;
        yield y({
          cgformId: s.value,
          code: e.code,
          switchFlag: t,
          listShow: o,
          formShow: o,
          formEditable: o
        }), t == 1 ? e.listShow = o : t == 2 ? e.formShow = o : t == 3 && (e.formEditable = o);
      });
    }
    return { registerTable: m, onUpdateStatus: c, onCheckboxChange: i };
  }
});
const $ = { class: "auth-field-config" };
function A(n, f, s, m, u, p) {
  const c = _("a-switch"), i = _("a-checkbox"), a = _("BasicTable");
  return S(), x("div", $, [
    h(a, { onRegister: n.registerTable }, {
      switch: l(({ text: e, record: t }) => [
        h(c, {
          size: "small",
          checked: t.status === 1,
          onChange: (o) => n.onUpdateStatus(o, t)
        }, null, 8, ["checked", "onChange"])
      ]),
      list: l(({ text: e, record: t }) => [
        h(i, {
          checked: t.listShow,
          disabled: t.status === 0,
          onChange: (o) => n.onCheckboxChange(o, t, 1)
        }, {
          default: l(() => [
            b(" 可见 ")
          ]),
          _: 2
        }, 1032, ["checked", "disabled", "onChange"])
      ]),
      form: l(({ text: e, record: t }) => [
        h(i, {
          checked: t.formShow,
          disabled: t.status === 0,
          onChange: (o) => n.onCheckboxChange(o, t, 2)
        }, {
          default: l(() => [
            b(" 可见 ")
          ]),
          _: 2
        }, 1032, ["checked", "disabled", "onChange"]),
        h(i, {
          checked: t.formEditable,
          disabled: t.status === 0,
          onChange: (o) => n.onCheckboxChange(o, t, 3)
        }, {
          default: l(() => [
            b(" 可编辑 ")
          ]),
          _: 2
        }, 1032, ["checked", "disabled", "onChange"])
      ]),
      _: 1
    }, 8, ["onRegister"])
  ]);
}
const P = /* @__PURE__ */ B(U, [["render", A], ["__scopeId", "data-v-d597c946"]]);
export {
  P as default
};
