var on = Object.defineProperty, rn = Object.defineProperties;
var an = Object.getOwnPropertyDescriptors;
var at = Object.getOwnPropertySymbols;
var un = Object.prototype.hasOwnProperty, cn = Object.prototype.propertyIsEnumerable;
var ut = (n, e, t) => e in n ? on(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, me = (n, e) => {
  for (var t in e || (e = {}))
    un.call(e, t) && ut(n, t, e[t]);
  if (at)
    for (var t of at(e))
      cn.call(e, t) && ut(n, t, e[t]);
  return n;
}, Ue = (n, e) => rn(n, an(e));
var Y = (n, e, t) => new Promise((l, f) => {
  var c = (g) => {
    try {
      w(t.next(g));
    } catch (R) {
      f(R);
    }
  }, p = (g) => {
    try {
      w(t.throw(g));
    } catch (R) {
      f(R);
    }
  }, w = (g) => g.done ? l(g.value) : Promise.resolve(g.value).then(c, p);
  w((t = t.apply(n, e)).next());
});
import { add as dn } from "/@/components/Form/src/componentMap";
import { propTypes as re } from "/@/utils/propTypes";
import { ref as F, reactive as Se, watch as he, toRaw as be, nextTick as Ee, computed as de, resolveComponent as se, openBlock as Z, createBlock as Oe, unref as Pe, createElementBlock as ce, createVNode as ue, defineComponent as gt, h as $e, mergeProps as bt, withCtx as oe, createTextVNode as _e, toDisplayString as Te, createCommentVNode as we, watchEffect as fn, inject as mn, onMounted as pn, onBeforeUnmount as hn, createElementVNode as fe, Fragment as Ae, renderList as Qe, markRaw as gn, defineAsyncComponent as bn, normalizeClass as ct } from "vue";
import { PrinterOutlined as vn, DiffOutlined as yn, FormOutlined as wn, PlusOutlined as Ge, EditOutlined as Sn, MinusCircleFilled as Fn } from "@ant-design/icons-vue";
import { useModal as xe, useModalInner as vt, BasicModal as yt } from "/@/components/Modal";
import { useMessage as Xe } from "/@/hooks/web/useMessage";
import { BasicForm as wt, useForm as St } from "/@/components/Form/index";
import { defHttp as ge } from "/@/utils/http/axios";
import { pick as Le } from "lodash-es";
import { L as Cn } from "./constant-754f1a9d.mjs";
import { UploadTypeEnum as _n } from "/@/components/Form/src/jeecg/components/JUpload";
import { duplicateCheck as Tn } from "/@/views/system/user/user.api";
import { useUserStore as On } from "/@/store/modules/user";
import { replaceAll as Pn, _eval as et, goJmReportViewPage as xn, importViewsFile as In } from "/@/utils";
import * as Ft from "/@/utils/desform/customExpression";
import { usePermissionStore as Dn } from "/@/store/modules/permission";
import { filterMultiDictText as Ct } from "/@/utils/dict/JDictSelectUtil";
import { getFileAccessHttpUrl as je } from "/@/utils/common/compUtils";
import { BasicTable as Mn, TableAction as Rn } from "/@/components/Table";
import { useListPage as $n } from "/@/hooks/system/useListPage";
import { useRouter as kn } from "vue-router";
import { getAreaTextByCode as En } from "/@/components/Form/src/utils/Area";
import { createImgPreview as jn } from "/@/components/Preview/index";
import An from "./LinkTableListPiece-8499a318.mjs";
import { _ as Me } from "./index-0e3ab3af.mjs";
import Ln from "./OnlineSelectCascade-4265c95d.mjs";
import { Loading as _t } from "/@/components/Loading";
import { getToken as Nn } from "/@/utils/auth";
import Vn from "./JModalTip-33c7dc44.mjs";
import { Button as Je } from "ant-design-vue";
import { useDebounceFn as Bn } from "@vueuse/core";
const Wn = "jeecg_submit_form_and_flow", us = "flow_submit_id", Un = "online_form_table_name", Re = "validate-failed", cs = "setup", ds = "EnhanceJS", fs = {
  password: "text",
  file: "text",
  image: "text",
  textarea: "text",
  umeditor: "text",
  markdown: "text",
  checkbox: "list_multi",
  radio: "list"
}, Jn = ".jeecg-online-modal .ant-modal-content", Hn = "online_";
class Q {
  constructor(e, t) {
    this._data = t, this.field = e, this.label = t.title, this.hidden = !1, this.order = t.order || 999, this.required = !1, this.onlyValidator = "", this.setFieldsValue = "", this.hasChange = !0, e.indexOf("@") > 0 ? this.pre = e.substring(0, e.indexOf("@") + 1) : this.pre = "", this.schemaProp = {}, this.searchForm = !1, this.disabled = !1, this.popContainer = "", this.handleWidgetAttr(t), this.inPopover = !1, this.labelLength = Cn, this.initLabelLength();
  }
  /**
   * 获取最终的表单配置项，外面获取调用此方法
   */
  getFormItemSchema() {
    let e = this.getItem();
    return this.addDefaultChangeEvent(e), e;
  }
  /**
   * 获取表单配置，子类重写此方法
   */
  getItem() {
    let e = {
      field: this.field,
      label: this.label,
      labelLength: this.labelLength,
      component: "Input",
      itemProps: {
        labelCol: {
          class: "online-form-label"
        }
      }
    }, t = this.getRule();
    return t.length > 0 && this.onlyValidator && (e.rules = t), this.hidden === !0 && (e.show = !1), e;
  }
  /**
   * 设置表单ref
   * popup、分类树需要关联设置其他表单值的时候用到
   * @param ref
   */
  setFormRef(e) {
    this.formRef = e;
  }
  /**
   * 设置表单元素隐藏
   */
  isHidden() {
    return this.hidden = !0, this;
  }
  /**
   * 设置是否必填项
   * @param array
   */
  isRequired(e) {
    return e && e.length > 0 && e.indexOf(this.field) >= 0 && (this.required = !0), this;
  }
  /**
   * 初始化 label长度
   */
  initLabelLength() {
    let e = this.getExtendData();
    e && e.labelLength && (this.labelLength = e.labelLength);
  }
  /**
   * 获取扩展参数
   */
  getExtendData() {
    let e = {}, { fieldExtendJson: t } = this._data;
    if (t && typeof t == "string")
      try {
        let l = JSON.parse(t);
        e = me({}, l);
      } catch (l) {
      }
    return e;
  }
  /***
   * 获取和此字段相关的其他字段 需要设置其为隐藏
   */
  getRelatedHideFields() {
    return [];
  }
  /**
   * placeholder
   */
  getPlaceholder() {
    return "请输入" + this.label;
  }
  /**
   * 唯一校验
   */
  setOnlyValidateFun(e) {
    e && (this.onlyValidator = (t, l) => Y(this, null, function* () {
      let f = yield e(t, l);
      return f ? Promise.reject(f) : Promise.resolve();
    }));
  }
  /**
   * 获取校验规则
   */
  getRule() {
    let e = [];
    const { view: t, errorInfo: l, pattern: f, type: c } = this._data;
    if (this.required === !0) {
      let p = this.getPlaceholder();
      l && (p = l), t == "sel_depart" || t == "sel_user" ? this.schemaProp.required = !0 : e.push({ required: !0, message: p });
    }
    if (t == "sel_user" && f === "only" && this.onlyValidator && e.push({ validator: this.onlyValidator }), t === "list" || t === "radio" || t === "markdown" || t === "pca" || t.indexOf("sel") >= 0 || t === "time" || t.indexOf("upload") >= 0 || t.indexOf("file") >= 0 || t.indexOf("image") >= 0)
      return e;
    if (f)
      if (f === "only")
        this.onlyValidator && e.push({ validator: this.onlyValidator });
      else if (f === "z")
        c == "number" || c == "integer" || e.push({ pattern: /^-?\d+$/, message: "请输入整数" });
      else {
        let p = l || "正则校验失败", w;
        try {
          w = new RegExp(f), w || (w = f);
        } catch (g) {
          w = f;
        }
        e.push({ pattern: w, message: p });
      }
    return e;
  }
  /**
   * 添加默认的change事件
   * @param schema
   */
  addDefaultChangeEvent(e) {
    this.hasChange && (e.componentProps || (e.componentProps = {}), this.disabled == !0 && (e.componentProps.disabled = !0), e.componentProps.hasOwnProperty("onChange") || (e.componentProps.onChange = (t, l) => {
      t instanceof Event && (t = t.target.value), t instanceof Array && (t = t.join(",")), !this.formRef || !this.formRef.value || !this.formRef.value.$formValueChange || this.formRef.value.$formValueChange(this.field, t, l);
    })), Object.keys(this.schemaProp).map((t) => {
      e[t] = this.schemaProp[t];
    });
  }
  noChange() {
    this.hasChange = !1;
  }
  updateField(e) {
    this.field = e;
  }
  /**
   * 高级查询 没有表单ref对象 手动设置setFieldValue方法用于 popup设置表单值
   */
  setFunctionForFieldValue(e) {
    e && (this.setFieldsValue = e);
  }
  asSearchForm() {
    this.searchForm = !0;
  }
  /**获取modal作为类下拉组件pop的父容器*/
  getModalAsContainer() {
    let e = this.getPopContainer();
    if (e != "body") {
      const t = document.querySelectorAll(e);
      if (t && t.length > 1) {
        const l = [];
        if (t.forEach((f) => {
          f.offsetWidth == 0 && f.offsetHeight == 0 || l.push(f);
        }), l.length === 1)
          return l[0];
      }
    }
    return document.querySelector(e);
  }
  /**区分modal表单和查询表单*/
  getPopContainer() {
    return this.searchForm === !0 ? "body" : this.inPopover === !0 ? `.${this.popContainer}` : this.popContainer ? `.${this.popContainer} .ant-modal-content` : Jn;
  }
  handleWidgetAttr(e) {
    e.ui && e.ui.widgetattrs && e.ui.widgetattrs.disabled == !0 && (this.disabled = !0);
  }
  /**
   * 设置 popContainer
   */
  setCustomPopContainer(e) {
    this.popContainer = e;
  }
  //update-begin-author:taoyan date:2022-8-5 for: 他表字段/关联记录用
  // 获取他表字段的 配置信息
  getLinkFieldInfo() {
    return "";
  }
  // 1.将他表字段的配置信息设置到关联记录字段上
  setOtherInfo(e) {
  }
  //update-end-author:taoyan date:2022-8-5 for: 他表字段/关联记录用
  // 表单设计器高级查询用
  isInPopover() {
    this.inPopover = !0;
  }
}
class dt extends Q {
  getItem() {
    let e = super.getItem();
    return this.hidden === !0 && (e.show = !1), e;
  }
}
var Tt = /* @__PURE__ */ ((n) => (n.datetime = "YYYY-MM-DD HH:mm:ss", n.date = "YYYY-MM-DD", n))(Tt || {});
class qn extends Q {
  constructor(e, t) {
    super(e, t), this.format = Tt[t.view], this.showTime = t.view != "date";
  }
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: "DatePicker",
      componentProps: {
        placeholder: `请选择${this.label}`,
        showTime: this.showTime,
        valueFormat: this.format,
        style: {
          width: "100%"
        },
        getPopupContainer: (t) => this.getModalAsContainer()
      }
    });
  }
}
class Yn extends Q {
  constructor(e, t) {
    super(e, t), this.options = this.getOptions(t.enum, t.type), this.dictTable = t.dictTable, this.dictText = t.dictText, this.dictCode = t.dictCode, this.multi = t.multi || !1;
  }
  getItem() {
    let e = super.getItem(), t = this.getFormComponent(), l = this.getComponentProps();
    return Object.assign({}, e, {
      component: t,
      componentProps: l
    });
  }
  getFormComponent() {
    return this.options.length > 0 ? "Select" : "JDictSelectTag";
  }
  getComponentProps() {
    let t = {
      allowClear: !0,
      mode: this.multi === !0 ? "multiple" : "combobox",
      style: {
        width: "100%"
      },
      getPopupContainer: (l) => this.getModalAsContainer()
    };
    if (this.options.length > 0)
      t.options = this.options;
    else if (!this.dictTable)
      t.dictCode = this.dictCode;
    else {
      let l = `${this.dictTable},${this.dictText},${this.dictCode}`;
      t.dictCode = encodeURI(l);
    }
    return t;
  }
  getOptions(e, t) {
    if (!e || e.length == 0)
      return [];
    let l = t == "number", f = [];
    for (let c of e) {
      let p = c.value;
      l && (p = parseInt(p)), f.push({
        value: p,
        label: c.title
      });
    }
    return f;
  }
}
class zn extends Q {
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: "InputPassword"
    });
  }
}
class Qn extends Q {
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      component: "JUpload",
      componentProps: t
    });
  }
  getComponentProps() {
    let e = this.getExtendData();
    return e && e.uploadnum ? {
      maxCount: Number(e.uploadnum)
    } : {};
  }
}
class Kn extends Q {
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      component: "JUpload",
      componentProps: t
    });
  }
  getComponentProps() {
    let e = {
      fileType: _n.image
    }, t = this.getExtendData();
    return t && t.uploadnum && (e.maxCount = Number(t.uploadnum)), e;
  }
}
class Zn extends Q {
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: "InputTextArea",
      componentProps: {
        autoSize: {
          minRows: 4,
          maxRows: 10
        }
      }
    });
  }
}
class Gn extends Q {
  constructor(e, t) {
    super(e, t), this.dictTable = t.dictTable, this.dictText = t.dictText, this.dictCode = t.dictCode;
  }
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      component: "JSelectMultiple",
      componentProps: t
    });
  }
  getComponentProps() {
    if (!this.dictTable && !this.dictCode)
      return {};
    {
      let e = {};
      if (!this.dictTable)
        e.dictCode = this.dictCode;
      else {
        let t = `${this.dictTable},${this.dictText},${this.dictCode}`;
        e.dictCode = encodeURI(t);
      }
      return e.triggerChange = !0, e.popContainer = this.getPopContainer(), e;
    }
  }
}
class Xn extends Q {
  constructor(e, t) {
    super(e, t), this.dict = encodeURI(`${t.dictTable},${t.dictText},${t.dictCode}`);
  }
  getItem() {
    let e = super.getItem(), t = this.getPopContainer();
    return Object.assign({}, e, {
      component: "JSearchSelect",
      componentProps: {
        dict: this.dict,
        pageSize: 10,
        async: !0,
        popContainer: t
      }
    });
  }
}
class ei extends Q {
  constructor(e, t) {
    super(e, t), this.code = t.code, this.multi = t.popupMulti, this.fieldConfig = this.getFieldConfig(t);
  }
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      component: "JPopup",
      componentProps: t
    });
  }
  getComponentProps() {
    let e = {
      code: this.code,
      multi: this.multi,
      fieldConfig: this.fieldConfig
    };
    return this.formRef ? e.formElRef = this.formRef : e.setFieldsValue = this.setFieldsValue, this.inPopover === !0 && (e.getContainer = () => this.getModalAsContainer()), e;
  }
  getFieldConfig(e) {
    let { destFields: t, orgFields: l } = e;
    if (!t || t.length == 0)
      return [];
    let f = t.split(","), c = l.split(","), p = [];
    const w = this.pre;
    for (let g = 0; g < f.length; g++)
      p.push({
        target: w + f[g],
        source: c[g]
      });
    return p;
  }
}
class ti extends Q {
  constructor(e, t) {
    super(e, t), this.multi = !1, this.pid = t.pidValue, this.pcode = t.pcode, this.textField = t.textField;
  }
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      componentProps: t,
      component: "JCategorySelect"
    });
  }
  /**
   * 1. 不带返回值的
   * 2. 带文本返回的
   */
  getComponentProps() {
    let e = {
      placeholder: "请选择" + this.label
    };
    if (this.pcode)
      e.pcode = this.pcode;
    else {
      let t = this.pid || "EMPTY_PID";
      e.pid = t;
    }
    return this.textField ? Ue(me({
      loadTriggleChange: !0,
      multiple: this.multi
    }, e), {
      back: this.textField,
      onChange: (t, l) => {
        this.formRef && (this.formRef.value.setFieldsValue(l), this.formRef.value.$formValueChange(this.field, t));
      }
    }) : me({
      multiple: this.multi
    }, e);
  }
  getRelatedHideFields() {
    let e = [];
    return this.textField && e.push(this.textField), e;
  }
}
class ni extends Q {
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      component: "JSelectDept",
      componentProps: t
    });
  }
  getComponentProps() {
    let e = this.getExtendData(), t = {
      checkStrictly: !0,
      showButton: !1
    };
    return e.text && (t.labelKey = e.text), e.store && (t.rowKey = e.store), e.multiSelect === !1 && (t.multiple = !1), e.multiSelect === !0 && (t.multiple = !0), this.inPopover === !0 && (t.getContainer = () => this.getModalAsContainer()), t;
  }
}
class ii extends Q {
  constructor(e, t) {
    super(e, t), this.showButton = t.showButton !== !1;
  }
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      component: "JSelectUser",
      componentProps: t
    });
  }
  getComponentProps() {
    let e = this.getExtendData(), t = {
      showSelected: !1,
      allowClear: !0,
      isRadioSelection: !1,
      showButton: this.showButton
    };
    return e.text && (t.labelKey = e.text), e.store && (t.rowKey = e.store), e.multiSelect === !1 && (t.isRadioSelection = !0), this.inPopover === !0 && (t.getContainer = () => this.getModalAsContainer()), t;
  }
}
class li extends Q {
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: "JEditor",
      componentProps: {
        //update-begin-author:taoyan date:2022-6-1 for: VUEN-1159 第一次加载时，点击第一个输入框，光标会跑到富文本输入框
        options: {
          auto_focus: !1
        }
        //update-end-author:taoyan date:2022-6-1 for: VUEN-1159 第一次加载时，点击第一个输入框，光标会跑到富文本输入框
        // fileMax:1,
        // showImageUpload:false,
        // width:"966px",
        // height:"200px"
      }
    });
  }
}
class si extends Q {
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: "JMarkdownEditor",
      componentProps: {
        // height: 300,
      }
    });
  }
}
class oi extends Q {
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: "JAreaSelect"
    });
  }
}
class ri extends Q {
  constructor(e, t) {
    super(e, t), this.dict = t.dict, this.pidField = t.pidField, this.pidValue = t.pidValue;
  }
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: "JTreeSelect",
      componentProps: {
        dict: this.dict,
        pidField: this.pidField,
        pidValue: this.pidValue
      }
    });
  }
}
class ai extends Q {
  constructor(e, t) {
    super(e, t), this.dictTable = t.dictTable, this.dictText = t.dictText, this.dictCode = t.dictCode;
  }
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      component: "JDictSelectTag",
      componentProps: t
    });
  }
  getComponentProps() {
    if (!this.dictTable && !this.dictCode)
      return {};
    if (this.dictTable) {
      let e = `${this.dictTable},${this.dictText},${this.dictCode}`;
      return {
        dictCode: encodeURI(e),
        type: "radio"
      };
    } else
      return {
        dictCode: this.dictCode,
        type: "radio"
      };
  }
}
class ui extends Q {
  constructor(e, t) {
    super(e, t), this.options = this.getOptions(t.enum);
  }
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: "JCheckbox",
      componentProps: {
        options: this.options,
        triggerChange: !0
      }
    });
  }
  getOptions(e) {
    if (!e || e.length == 0)
      return [];
    let t = [];
    for (let l of e)
      t.push({
        value: l.value,
        label: l.title
      });
    return t;
  }
}
class ci extends Q {
  constructor(e, t) {
    super(e, t), this.hasChange = !1;
  }
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      component: "JSwitch",
      componentProps: t
    });
  }
  getComponentProps() {
    let { fieldExtendJson: e } = this._data, t = ["Y", "N"];
    if (e && typeof e == "string") {
      let l = JSON.parse(e);
      l.length == 2 && (t = l);
    }
    return {
      options: t
    };
  }
}
class di extends Q {
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: "TimePicker",
      componentProps: {
        placeholder: `请选择${this.label}`,
        valueFormat: "HH:mm:ss",
        getPopupContainer: (t) => this.getModalAsContainer(),
        style: {
          width: "100%"
        }
      }
    });
  }
}
class fi extends Q {
  constructor(e, t) {
    super(e, t);
    const { dictTable: l, dictText: f, dictCode: c, pidField: p, idField: w, origin: g, condition: R } = t;
    this.table = l, this.txt = f, this.store = c, this.idField = w, this.pidField = p, this.origin = g, this.condition = R, this.options = [], this.next = t.next || "", this.type = t.type;
  }
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      component: "OnlineSelectCascade",
      componentProps: t
    });
  }
  getComponentProps() {
    let e = {
      table: this.table,
      txt: this.txt,
      store: this.store,
      pidField: this.pidField,
      idField: this.idField,
      origin: this.origin,
      pidValue: "-1",
      style: {
        width: "100%"
      },
      onChange: (t) => {
        this.valueChange(t);
      },
      onNext: (t) => {
        this.nextOptionsChange(t);
      }
    };
    return this._data.origin === !0 && (e.condition = this.condition), e;
  }
  nextOptionsChange(e) {
    return Y(this, null, function* () {
      if (!this.formRef || !this.next)
        return;
      yield this.formRef.value.updateSchema({
        field: this.next,
        componentProps: {
          pidValue: e
        }
      });
    });
  }
  valueChange(e) {
    return Y(this, null, function* () {
      if (!this.formRef || !this.next)
        return;
      let t = this.formRef.value;
      t.$formValueChange(this.field, e), yield t.setFieldsValue({ [this.next]: "" });
    });
  }
}
class ft extends Q {
  constructor(e, t) {
    super(e, t), this.slot = "";
  }
  getItem() {
    let e = super.getItem(), t = this.slot;
    return Object.assign({}, e, { slot: t });
  }
  groupDate() {
    return this.slot = "groupDate", this;
  }
  groupDatetime() {
    return this.slot = "groupDatetime", this;
  }
  groupNumber() {
    return this.slot = "groupNumber", this;
  }
}
class mi extends Q {
  constructor(e, t) {
    super(e, t), this.dbPointLength = t.dbPointLength;
  }
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      component: "InputNumber",
      componentProps: t
    });
  }
  getComponentProps() {
    const e = {
      style: {
        width: "100%"
      }
    };
    return this.dbPointLength >= 0 && (e.precision = this.dbPointLength), e;
  }
}
class pi extends Q {
  constructor(e, t) {
    super(e, t), this.dictTable = t.dictTable, this.dictText = t.dictText, this.dictCode = t.dictCode, this.view = t.view, this.componentString = "", this.linkFields = [];
  }
  getItem() {
    let e = super.getItem();
    const t = this.getComponentProps();
    return Object.assign({}, e, {
      component: this.componentString,
      componentProps: t
    });
  }
  getComponentProps() {
    let e = {
      textField: this.dictText,
      tableName: this.dictTable,
      valueField: this.dictCode
    }, t = this.getExtendData();
    if (t.multiSelect ? e.multi = !0 : e.multi = !1, t.imageField ? e.imageField = t.imageField : e.imageField = "", t.showType == "select") {
      this.componentString = "LinkTableSelect";
      let l = this.getPopContainer();
      e.popContainer = l;
    } else
      this.componentString = "LinkTableCard";
    return this.linkFields.length > 0 && (e.linkFields = this.linkFields), e;
  }
  // 他表字段用于翻译
  setOtherInfo(e) {
    this.linkFields = e;
  }
}
class hi extends Q {
  constructor(e, t) {
    super(e, t), this.dictTable = t.dictTable, this.dictText = t.dictText;
  }
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      componentProps: {
        readOnly: !0,
        allowClear: !1,
        disabled: !0,
        style: {
          background: "none",
          color: "rgba(0, 0, 0, 0.85)",
          border: "none"
        }
      }
    });
  }
  /**
   * 获取他表字段的关联信息
   */
  getLinkFieldInfo() {
    return [this.dictTable, `${this.field},${this.dictText}`];
  }
}
class gi extends Q {
  constructor(e, t) {
    super(e, t), this.code = t.code, this.titleField = t.titleField, this.multi = t.multi || !1;
  }
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: "LinkTableForQuery",
      componentProps: {
        code: this.code,
        multi: this.multi,
        field: this.titleField,
        style: {
          width: "100%"
        }
      }
    });
  }
}
class bi extends Q {
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: "CascaderPcaForQuery",
      componentProps: {
        style: {
          width: "100%"
        }
      }
    });
  }
}
class vi extends Q {
  constructor(e, t) {
    super(e, t), this.multi = t.multi === !0, this.store = t.store || "", this.query = t.query || !1;
  }
  getItem() {
    let e = super.getItem(), t = this.getComponentProps();
    return Object.assign({}, e, {
      component: "UserSelect",
      componentProps: t
    });
  }
  getComponentProps() {
    let e = {
      multi: this.multi,
      store: this.store,
      query: this.query
    };
    return this.inPopover === !0 && (e.getContainer = () => this.getModalAsContainer()), e;
  }
}
class yi extends Q {
  constructor(e, t) {
    super(e, t);
    let l = t.view;
    this.format = t.format, this.datetime = !1, l === "rangeNumber" ? this.componentType = "JRangeNumber" : l === "rangeTime" ? this.componentType = "RangeTime" : (this.componentType = "RangeDate", t.datetime === !0 && (this.datetime = !0));
  }
  getItem() {
    let e = super.getItem();
    return Object.assign({}, e, {
      component: this.componentType,
      componentProps: {
        datetime: this.datetime,
        format: this.format,
        getPopupContainer: (t) => this.getModalAsContainer()
      }
    });
  }
}
class He {
  static createFormSchema(e, t) {
    switch (t.view) {
      case "password":
        return new zn(e, t);
      case "list":
        return new Yn(e, t);
      case "radio":
        return new ai(e, t);
      case "checkbox":
        return new ui(e, t);
      case "date":
      case "datetime":
        return new qn(e, t);
      case "time":
        return new di(e, t);
      case "file":
        return new Qn(e, t);
      case "image":
        return new Kn(e, t);
      case "textarea":
        return new Zn(e, t);
      case "list_multi":
        return new Gn(e, t);
      case "sel_search":
        return new Xn(e, t);
      case "popup":
        return new ei(e, t);
      case "cat_tree":
        return new ti(e, t);
      case "sel_depart":
        return new ni(e, t);
      case "sel_user":
        return new ii(e, t);
      case "umeditor":
        return new li(e, t);
      case "markdown":
        return new si(e, t);
      case "pca":
        return new oi(e, t);
      case "link_down":
        return new fi(e, t);
      case "sel_tree":
        return new ri(e, t);
      case "switch":
        return new ci(e, t);
      case "link_table":
        return new pi(e, t);
      case "link_table_field":
        return new hi(e, t);
      case "slot":
        return new ft(e, t);
      case "LinkTableForQuery":
        return new gi(e, t);
      case "CascaderPcaForQuery":
        return new bi(e, t);
      case "select_user2":
        return new vi(e, t);
      case "rangeDate":
      case "rangeTime":
      case "rangeNumber":
        return new yi(e, t);
      case "hidden":
        return new dt(e, t).isHidden();
      default:
        return t.type == "number" ? new mi(e, t) : new dt(e, t);
    }
  }
  static createSlotFormSchema(e, t) {
    let l = new ft(e, t), f = t.view;
    if (f == "date")
      l.groupDate();
    else if (f == "datetime")
      l.groupDatetime();
    else {
      let c = t.type;
      (c == "number" || c == "integer") && l.groupNumber();
    }
    return l;
  }
  /**
   * 表单ID 默认是隐藏的
   */
  static createIdField() {
    return {
      label: "",
      field: "id",
      component: "Input",
      show: !1
    };
  }
}
var wi = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {};
function Si(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
var Ot = { exports: {} };
(function(n, e) {
  (function(t, l) {
    n.exports = l();
  })(wi, function() {
    var t = 1e3, l = 6e4, f = 36e5, c = "millisecond", p = "second", w = "minute", g = "hour", R = "day", k = "week", b = "month", S = "quarter", _ = "year", E = "date", V = "Invalid Date", A = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, D = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, B = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(a) {
      var u = ["th", "st", "nd", "rd"], i = a % 100;
      return "[" + a + (u[(i - 20) % 10] || u[i] || u[0]) + "]";
    } }, T = function(a, u, i) {
      var o = String(a);
      return !o || o.length >= u ? a : "" + Array(u + 1 - o.length).join(i) + a;
    }, L = { s: T, z: function(a) {
      var u = -a.utcOffset(), i = Math.abs(u), o = Math.floor(i / 60), s = i % 60;
      return (u <= 0 ? "+" : "-") + T(o, 2, "0") + ":" + T(s, 2, "0");
    }, m: function a(u, i) {
      if (u.date() < i.date())
        return -a(i, u);
      var o = 12 * (i.year() - u.year()) + (i.month() - u.month()), s = u.clone().add(o, b), C = i - s < 0, I = u.clone().add(o + (C ? -1 : 1), b);
      return +(-(o + (i - s) / (C ? s - I : I - s)) || 0);
    }, a: function(a) {
      return a < 0 ? Math.ceil(a) || 0 : Math.floor(a);
    }, p: function(a) {
      return { M: b, y: _, w: k, d: R, D: E, h: g, m: w, s: p, ms: c, Q: S }[a] || String(a || "").toLowerCase().replace(/s$/, "");
    }, u: function(a) {
      return a === void 0;
    } }, H = "en", q = {};
    q[H] = B;
    var W = "$isDayjsObject", P = function(a) {
      return a instanceof r || !(!a || !a[W]);
    }, O = function a(u, i, o) {
      var s;
      if (!u)
        return H;
      if (typeof u == "string") {
        var C = u.toLowerCase();
        q[C] && (s = C), i && (q[C] = i, s = C);
        var I = u.split("-");
        if (!s && I.length > 1)
          return a(I[0]);
      } else {
        var $ = u.name;
        q[$] = u, s = $;
      }
      return !o && s && (H = s), s || !o && H;
    }, v = function(a, u) {
      if (P(a))
        return a.clone();
      var i = typeof u == "object" ? u : {};
      return i.date = a, i.args = arguments, new r(i);
    }, y = L;
    y.l = O, y.i = P, y.w = function(a, u) {
      return v(a, { locale: u.$L, utc: u.$u, x: u.$x, $offset: u.$offset });
    };
    var r = function() {
      function a(i) {
        this.$L = O(i.locale, null, !0), this.parse(i), this.$x = this.$x || i.x || {}, this[W] = !0;
      }
      var u = a.prototype;
      return u.parse = function(i) {
        this.$d = function(o) {
          var s = o.date, C = o.utc;
          if (s === null)
            return /* @__PURE__ */ new Date(NaN);
          if (y.u(s))
            return /* @__PURE__ */ new Date();
          if (s instanceof Date)
            return new Date(s);
          if (typeof s == "string" && !/Z$/i.test(s)) {
            var I = s.match(A);
            if (I) {
              var $ = I[2] - 1 || 0, M = (I[7] || "0").substring(0, 3);
              return C ? new Date(Date.UTC(I[1], $, I[3] || 1, I[4] || 0, I[5] || 0, I[6] || 0, M)) : new Date(I[1], $, I[3] || 1, I[4] || 0, I[5] || 0, I[6] || 0, M);
            }
          }
          return new Date(s);
        }(i), this.init();
      }, u.init = function() {
        var i = this.$d;
        this.$y = i.getFullYear(), this.$M = i.getMonth(), this.$D = i.getDate(), this.$W = i.getDay(), this.$H = i.getHours(), this.$m = i.getMinutes(), this.$s = i.getSeconds(), this.$ms = i.getMilliseconds();
      }, u.$utils = function() {
        return y;
      }, u.isValid = function() {
        return this.$d.toString() !== V;
      }, u.isSame = function(i, o) {
        var s = v(i);
        return this.startOf(o) <= s && s <= this.endOf(o);
      }, u.isAfter = function(i, o) {
        return v(i) < this.startOf(o);
      }, u.isBefore = function(i, o) {
        return this.endOf(o) < v(i);
      }, u.$g = function(i, o, s) {
        return y.u(i) ? this[o] : this.set(s, i);
      }, u.unix = function() {
        return Math.floor(this.valueOf() / 1e3);
      }, u.valueOf = function() {
        return this.$d.getTime();
      }, u.startOf = function(i, o) {
        var s = this, C = !!y.u(o) || o, I = y.p(i), $ = function(K, X) {
          var ne = y.w(s.$u ? Date.UTC(s.$y, X, K) : new Date(s.$y, X, K), s);
          return C ? ne : ne.endOf(R);
        }, M = function(K, X) {
          return y.w(s.toDate()[K].apply(s.toDate("s"), (C ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(X)), s);
        }, U = this.$W, z = this.$M, ee = this.$D, G = "set" + (this.$u ? "UTC" : "");
        switch (I) {
          case _:
            return C ? $(1, 0) : $(31, 11);
          case b:
            return C ? $(1, z) : $(0, z + 1);
          case k:
            var te = this.$locale().weekStart || 0, J = (U < te ? U + 7 : U) - te;
            return $(C ? ee - J : ee + (6 - J), z);
          case R:
          case E:
            return M(G + "Hours", 0);
          case g:
            return M(G + "Minutes", 1);
          case w:
            return M(G + "Seconds", 2);
          case p:
            return M(G + "Milliseconds", 3);
          default:
            return this.clone();
        }
      }, u.endOf = function(i) {
        return this.startOf(i, !1);
      }, u.$set = function(i, o) {
        var s, C = y.p(i), I = "set" + (this.$u ? "UTC" : ""), $ = (s = {}, s[R] = I + "Date", s[E] = I + "Date", s[b] = I + "Month", s[_] = I + "FullYear", s[g] = I + "Hours", s[w] = I + "Minutes", s[p] = I + "Seconds", s[c] = I + "Milliseconds", s)[C], M = C === R ? this.$D + (o - this.$W) : o;
        if (C === b || C === _) {
          var U = this.clone().set(E, 1);
          U.$d[$](M), U.init(), this.$d = U.set(E, Math.min(this.$D, U.daysInMonth())).$d;
        } else
          $ && this.$d[$](M);
        return this.init(), this;
      }, u.set = function(i, o) {
        return this.clone().$set(i, o);
      }, u.get = function(i) {
        return this[y.p(i)]();
      }, u.add = function(i, o) {
        var s, C = this;
        i = Number(i);
        var I = y.p(o), $ = function(z) {
          var ee = v(C);
          return y.w(ee.date(ee.date() + Math.round(z * i)), C);
        };
        if (I === b)
          return this.set(b, this.$M + i);
        if (I === _)
          return this.set(_, this.$y + i);
        if (I === R)
          return $(1);
        if (I === k)
          return $(7);
        var M = (s = {}, s[w] = l, s[g] = f, s[p] = t, s)[I] || 1, U = this.$d.getTime() + i * M;
        return y.w(U, this);
      }, u.subtract = function(i, o) {
        return this.add(-1 * i, o);
      }, u.format = function(i) {
        var o = this, s = this.$locale();
        if (!this.isValid())
          return s.invalidDate || V;
        var C = i || "YYYY-MM-DDTHH:mm:ssZ", I = y.z(this), $ = this.$H, M = this.$m, U = this.$M, z = s.weekdays, ee = s.months, G = s.meridiem, te = function(X, ne, ie, j) {
          return X && (X[ne] || X(o, C)) || ie[ne].slice(0, j);
        }, J = function(X) {
          return y.s($ % 12 || 12, X, "0");
        }, K = G || function(X, ne, ie) {
          var j = X < 12 ? "AM" : "PM";
          return ie ? j.toLowerCase() : j;
        };
        return C.replace(D, function(X, ne) {
          return ne || function(ie) {
            switch (ie) {
              case "YY":
                return String(o.$y).slice(-2);
              case "YYYY":
                return y.s(o.$y, 4, "0");
              case "M":
                return U + 1;
              case "MM":
                return y.s(U + 1, 2, "0");
              case "MMM":
                return te(s.monthsShort, U, ee, 3);
              case "MMMM":
                return te(ee, U);
              case "D":
                return o.$D;
              case "DD":
                return y.s(o.$D, 2, "0");
              case "d":
                return String(o.$W);
              case "dd":
                return te(s.weekdaysMin, o.$W, z, 2);
              case "ddd":
                return te(s.weekdaysShort, o.$W, z, 3);
              case "dddd":
                return z[o.$W];
              case "H":
                return String($);
              case "HH":
                return y.s($, 2, "0");
              case "h":
                return J(1);
              case "hh":
                return J(2);
              case "a":
                return K($, M, !0);
              case "A":
                return K($, M, !1);
              case "m":
                return String(M);
              case "mm":
                return y.s(M, 2, "0");
              case "s":
                return String(o.$s);
              case "ss":
                return y.s(o.$s, 2, "0");
              case "SSS":
                return y.s(o.$ms, 3, "0");
              case "Z":
                return I;
            }
            return null;
          }(X) || I.replace(":", "");
        });
      }, u.utcOffset = function() {
        return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
      }, u.diff = function(i, o, s) {
        var C, I = this, $ = y.p(o), M = v(i), U = (M.utcOffset() - this.utcOffset()) * l, z = this - M, ee = function() {
          return y.m(I, M);
        };
        switch ($) {
          case _:
            C = ee() / 12;
            break;
          case b:
            C = ee();
            break;
          case S:
            C = ee() / 3;
            break;
          case k:
            C = (z - U) / 6048e5;
            break;
          case R:
            C = (z - U) / 864e5;
            break;
          case g:
            C = z / f;
            break;
          case w:
            C = z / l;
            break;
          case p:
            C = z / t;
            break;
          default:
            C = z;
        }
        return s ? C : y.a(C);
      }, u.daysInMonth = function() {
        return this.endOf(b).$D;
      }, u.$locale = function() {
        return q[this.$L];
      }, u.locale = function(i, o) {
        if (!i)
          return this.$L;
        var s = this.clone(), C = O(i, o, !0);
        return C && (s.$L = C), s;
      }, u.clone = function() {
        return y.w(this.$d, this);
      }, u.toDate = function() {
        return new Date(this.valueOf());
      }, u.toJSON = function() {
        return this.isValid() ? this.toISOString() : null;
      }, u.toISOString = function() {
        return this.$d.toISOString();
      }, u.toString = function() {
        return this.$d.toUTCString();
      }, a;
    }(), h = r.prototype;
    return v.prototype = h, [["$ms", c], ["$s", p], ["$m", w], ["$H", g], ["$W", R], ["$M", b], ["$y", _], ["$D", E]].forEach(function(a) {
      h[a[1]] = function(u) {
        return this.$g(u, a[0], a[1]);
      };
    }), v.extend = function(a, u) {
      return a.$i || (a(u, r, v), a.$i = !0), v;
    }, v.locale = O, v.isDayjs = P, v.unix = function(a) {
      return v(1e3 * a);
    }, v.en = q[H], v.Ls = q, v.p = {}, v;
  });
})(Ot);
var Fi = Ot.exports;
const qe = /* @__PURE__ */ Si(Fi), Pt = Object.keys(Ft), Ci = Pt.join(","), _i = Pt.map((n) => Ft[n]), xt = /#{([^}]+)?}/g, It = /{{([^}]+)?}}/g, Ke = /\${([^}]+)?}/g, ke = { ADD: "add", EDIT: "edit", DETAIL: "detail", RELOAD: "reload" };
function Ti(n, e, t) {
  tt(e.defVal) && t.push({ field: n, type: e.type, value: e.defVal });
}
function Oi(n, e) {
  tt(n.fieldDefaultValue) && e.push({ field: n.key, type: n.type, value: n.fieldDefaultValue });
}
function Ze(n, e, t) {
  return Y(this, null, function* () {
    if (Array.isArray(n) && n.length > 0) {
      let l = {};
      for (let f of n) {
        let { value: c, type: p, field: w } = f;
        c = yield Dt(c, ke.ADD, t || {}), p === "number" && c && (c = Number.parseFloat(c)), l[w] = c;
      }
      e(l);
    }
  });
}
function ms(n, e, t) {
  return Y(this, null, function* () {
    let { defVal: l, type: f } = e;
    if (tt(l)) {
      let c = yield Dt(l, ke.ADD, {});
      f === "number" && c && (c = Number.parseFloat(c)), t[n] = c;
    }
  });
}
function tt(n) {
  return !!(n || n === 0);
}
function Dt(n, e, t) {
  return Y(this, null, function* () {
    if (n != null && Pi(n)) {
      let l = yield Ii(n, e, t);
      if (l != null)
        return l;
    }
    return n;
  });
}
function Pi(n) {
  let e = 0, t = 0, l = 0;
  if (n.replace(Ke, () => l++), l > 1)
    return !1;
  n.replace(xt, () => e++), n.replace(It, () => t++);
  let f = e + t;
  return !(l > 0 && f > 0);
}
function xi(n, e) {
  let t = /* @__PURE__ */ new Map();
  return n.replace(e, function(l, f) {
    return t.set(l, f.trim()), l;
  }), t;
}
function Ii(n, e, t) {
  return Y(this, null, function* () {
    return (e === ke.ADD || e === ke.RELOAD) && Ke.test(n) ? yield Ye(n, Ke, $i, [t]) : e === ke.ADD ? (n = yield Ye(n, xt, Di), n = yield Ye(n, It, Ri), n) : null;
  });
}
function Ye(f, c, p) {
  return Y(this, arguments, function* (n, e, t, l = []) {
    let w = xi(n, e);
    for (let g of w.keys()) {
      let R = w.get(g), k = yield t.apply(null, [R, g, ...l]);
      if (g === n)
        return k;
      n = Pn(n, g, k);
    }
    return n;
  });
}
function Di(n, e) {
  return Y(this, null, function* () {
    switch (n) {
      case "date":
        return qe().format("YYYY-MM-DD");
      case "time":
        return qe().format("HH:mm:ss");
      case "datetime":
        return qe().format("YYYY-MM-DD HH:mm:ss");
      default:
        let t = Mi(n);
        return t != null ? t : e;
    }
  });
}
function Mi(n) {
  let t = On().getUserInfo;
  if (t)
    switch (n) {
      case "sysUserId":
        return t.id;
      case "sysUserCode":
      case "sys_user_code":
        return t.username;
      case "sysUserName":
        return t.realname;
      case "sysOrgCode":
      case "sys_org_code":
        return t.orgCode;
    }
  return null;
}
function Ri(n, e) {
  return Y(this, null, function* () {
    let t = et(`(function (${Ci}){ return ${n} })`);
    try {
      return t.apply(null, _i);
    } catch (l) {
      return e;
    }
  });
}
function $i(n, e, t) {
  return Y(this, null, function* () {
    let l = `/sys/fillRule/executeRuleByCode/${n}`, f = {};
    typeof t == "function" ? f = t() : t && (f = me({}, t));
    let { success: c, message: p, result: w } = yield ge.put({ url: l, params: f }, { isTransformResponse: !1 });
    return c ? w : e;
  });
}
const nt = "link_down", ki = "link_table_field", Ei = "link_table";
function Mt(n, e) {
  Ml();
  const t = n.modalClass, l = F([]), f = F(""), c = F({}), p = Se({}), w = F(!1), g = F([]), R = F({}), k = {}, b = F([]), S = Se({}), _ = F("");
  _.value = { sm: 24, xs: 24, md: 12, lg: 12, xl: 12, xxl: 12 };
  function E(T, L, H) {
    var r;
    Li(S), S[f.value] = [];
    let q = [], W = [], P = [], O = {}, v = {};
    Object.keys(T).map((h) => {
      const a = T[h];
      if (a.view == "tab") {
        w.value = !0, S[h] = [];
        let u = {
          key: h,
          // 这个foreignKey是主表的字段
          foreignKey: a.foreignKey,
          describe: a.describe,
          relationType: a.relationType,
          requiredFields: a.required || [],
          order: a.order,
          id: a.id
        };
        a.relationType == 1 ? (k[h] = F(null), u.properties = a.properties) : (V(a), k[h] = F(), u.columns = a.columns, O[h] = []), q.push(u), Vi(h, a);
      } else if (Ti(h, a, S[f.value]), a.view === nt) {
        let u = Ai(a, h);
        for (let i of u) {
          p[i.key] = !0, p[i.key + "_load"] = !0;
          let o = He.createFormSchema(i.key, i);
          H && o.setOnlyValidateFun(H), o.isRequired(L), o.setFormRef(e), o.handleWidgetAttr(a);
          let s = mt(W, i.key);
          s == -1 ? W.push(o) : W[s] = o;
        }
      } else if (p[h] = !0, p[h + "_load"] = !0, mt(W, h) == -1) {
        let i = He.createFormSchema(h, a);
        if (H && i.setOnlyValidateFun(H), i.isRequired(L), i.setFormRef(e), W.push(i), P.push(...i.getRelatedHideFields()), a.view === ki) {
          let o = i.getLinkFieldInfo();
          o && (v[o[0]] ? v[o[0]].push(o[1]) : v[o[0]] = [o[1]]);
        }
      }
    }), W.sort(function(h, a) {
      return h.order - a.order;
    });
    let y = [];
    y.push(He.createIdField());
    for (let h of W) {
      h.view && h.view == Ei && v[h.field] && h.setOtherInfo(v[h.field]), P.indexOf(h.field) >= 0 && h.isHidden(), t && h.setCustomPopContainer(t);
      const a = h.getFormItemSchema();
      a.component === "JDictSelectTag" && ((r = h == null ? void 0 : h._data) == null ? void 0 : r.type) === "number" && (a.componentProps.stringToNumber = !0), y.push(a);
    }
    l.value = y, q.sort(function(h, a) {
      return h.order - a.order;
    }), q.forEach((h) => {
      const a = h.columns;
      h.columns && a.forEach((u) => {
        u.type === "popup" && u.fieldExtendJson && JSON.parse(u.fieldExtendJson).popupMulti && (u.props ? Object.assign(u.props, { multi: !0 }) : u.props = { multi: !0 });
      });
    }), g.value = q, R.value = O;
  }
  he(
    p,
    (T) => {
      let L = e.value, H = [], q = be(T);
      Object.keys(q).map((W) => {
        if (!W.endsWith("_load")) {
          let P = {
            field: W,
            show: q[W]
          }, O = W + "_load";
          q.hasOwnProperty(O) && (P.ifShow = q[O]), H.push(P);
        }
      }), L && L.updateSchema(H);
    },
    { immediate: !1 }
  );
  function V(T) {
    Rt(T, (L) => {
      Oi(L, S[T.key]);
    });
  }
  he(
    () => n.formTemplate,
    () => {
      _.value = A();
    },
    { immediate: !0 }
  );
  function A() {
    let T = n.formTemplate;
    return T == 2 ? { sm: 24, xs: 24, md: 12, lg: 12, xl: 12, xxl: 12 } : T == 3 ? { sm: 24, xs: 24, md: 8, lg: 8, xl: 8, xxl: 8 } : T == 4 ? { sm: 24, xs: 24, md: 6, lg: 6, xl: 6, xxl: 6 } : { sm: 24, xs: 24, md: 24, lg: 24, xl: 24, xxl: 24 };
  }
  function D(T, L) {
    return new Promise((H) => {
      L || H("");
      let W = {
        tableName: f.value.replace(/\$\d+/, ""),
        fieldName: T.field,
        fieldVal: L
      }, P = c.value;
      P.id && (W.dataId = P.id), Tn(W).then((O) => {
        O.success ? H("") : H(O.message);
      }).catch((O) => {
        H(O);
      });
    });
  }
  function B(T) {
    return Object.keys(T).map((L) => {
      T[L] && T[L] instanceof Array && (T[L] = T[L].join(","));
    }), T;
  }
  return {
    formSchemas: l,
    defaultValueFields: S,
    tableName: f,
    dbData: c,
    checkOnlyFieldValue: D,
    createFormSchemas: E,
    fieldDisplayStatus: p,
    subTabInfo: g,
    hasSubTable: w,
    subDataSource: R,
    baseColProps: _,
    changeDataIfArray2String: B,
    linkDownList: b,
    refMap: k
  };
}
function Rt(n, e) {
  const t = {
    inputNumber: "input-number",
    sel_depart: "depart-select",
    sel_user: "user-select",
    list_multi: "select-multiple",
    input_pop: "textarea",
    sel_search: "select-search",
    "select-dict-search": "selectDictSearch"
  };
  n.columns.forEach((c) => {
    c.type === "radio" ? c.type = "select" : t[c.type] ? c.type = t[c.type] : c.type === "popup" && l(c), c.type === "depart-select" && (c.checkStrictly = !0), c.type === "user-select" && f(c), c.type === "pca" && (c.width = "230px"), (c.width == 120 || c.width == "120px") && (c.type == "image" || c.type == "file") && (c.width = "130px"), c.width || (c.width = "200px"), e && e(c);
  });
  function l(c) {
    let { destFields: p, orgFields: w } = c, g = [];
    if (!(!p || p.length == 0)) {
      let R = p.split(","), k = w.split(",");
      for (let b = 0; b < R.length; b++)
        g.push({
          target: R[b],
          source: k[b]
        });
    }
    c.fieldConfig = g;
  }
  function f(c) {
    let p = c.fieldExtendJson, w = !1;
    if (p)
      try {
        JSON.parse(p).multiSelect === !1 && (w = !0);
      } catch (g) {
      }
    c.isRadioSelection = w;
  }
}
function ji() {
  let n = {};
  const e = {
    addSubRows: "<m> 一对多子表，新增自定义行",
    changeOptions: "<m> 改变下拉框选项",
    clearSubRows: "<m> 清空一对多子表行",
    clearThenAddRows: "<m> 清空一对多子表行，然后新增自定义行",
    executeMainFillRule: "<m> 刷新主表的增值规制值",
    executeSubFillRule: "<m> 刷新子表的增值规制值",
    getFieldsValue: "<m> 获取表单控件的值",
    getSubTableInstance: "<m> 获取子表实例",
    isUpdate: "<p> 判断是否为编辑模式",
    loading: "<p> 页面加载状态",
    onlineFormRef: "<p> 当前表单ref对象",
    refMap: "<p> 子表ref对象map",
    setFieldsValue: "<m> 设置表单控件的值",
    sh: "<p> 表单控件的显示隐藏状态",
    subActiveKey: "<p> 子表激活tab，对应子表表名",
    subFormHeight: "<p> 一对一子表表单高度",
    submitFlowFlag: "<p> 是否提交流程状态",
    subTableHeight: "<p> 一对多子表表格高度",
    tableName: "<p> 当前表名",
    triggleChangeValues: "<m> 修改多个表单值",
    triggleChangeValue: "<m> 修改表单值",
    updateSchema: "<m> 修改表单控件配置"
  }, t = new Proxy(e, {
    get(c, p) {
      return Reflect.get(n, p);
    }
  });
  function l(c, p) {
    n[c] = p;
  }
  function f(c) {
    Object.keys(c).map((p) => {
      n[p] = c[p];
    });
  }
  return l("$nextTick", Ee), l("addObject2Context", l), { onlineFormContext: t, addObject2Context: l, resetContext: f };
}
function Ai(n, e) {
  const {
    config: { table: t, key: l, txt: f, linkField: c, idField: p, pidField: w, condition: g },
    others: R,
    order: k,
    title: b
  } = n;
  let S = {
    dictTable: t,
    dictText: f,
    dictCode: l,
    pidField: w,
    idField: p,
    view: nt,
    type: n.type
  }, _ = [], E = me({
    key: e,
    title: b,
    order: k,
    condition: g,
    origin: !0
  }, S);
  if (c && c.length > 0) {
    let V = c.split(",");
    E.next = V[0];
    for (let A = 0; A < V.length; A++)
      for (let D of R)
        if (D.field == V[A]) {
          let B = me({
            key: D.field,
            title: D.title,
            order: D.order,
            origin: !1
          }, S);
          A + 1 < V.length && (B.next = V[A + 1]), _.push(B);
        }
  }
  return _.push(E), _;
}
function mt(n, e) {
  let t = -1;
  for (let l = 0; l < n.length; l++)
    if (n[l].field === e) {
      t = l;
      break;
    }
  return t;
}
function De(n) {
  return new Promise((e) => {
    (function t() {
      let l = n.value;
      l ? e(l) : setTimeout(() => {
        t();
      }, 100);
    })();
  });
}
function Li(n) {
  Object.keys(n).map((e) => {
    delete n[e];
  });
}
const Ni = Dn();
function Vi(n, e) {
  let t = e.hideButtons, l = Hn + n + ":";
  t || (t = []), Ni.setOnlineSubTableAuth(l, t);
}
function ps(n) {
  const e = F([]), t = {}, l = Se({}), f = F(!1), c = F([]), p = F({}), w = de(() => {
    let S = n.formTemplate;
    return S == "2" ? 12 : S == "3" ? 8 : S == "4" ? 6 : 24;
  });
  function g(S) {
    let _ = [], E = [], V = {};
    Object.keys(S).map((A) => {
      const D = S[A];
      if (D.view == "tab") {
        f.value = !0;
        let B = {
          key: A,
          // 这个foreignKey是主表的字段
          foreignKey: D.foreignKey,
          describe: D.describe,
          relationType: D.relationType,
          requiredFields: D.required || [],
          order: D.order
        };
        D.relationType == 1 ? (t[A] = F(null), B.properties = D.properties) : (R(D), t[A] = F(), B.columns = D.columns, V[A] = [], l[A] = !1), _.push(B);
      } else if (D.view === nt) {
        let B = b(D, A);
        for (let T of B) {
          let L = k(E, T.key), H = {
            field: T.key,
            label: T.title,
            view: T.view,
            order: T.order,
            dictTable: T.dictTable,
            linkField: T.linkField || ""
          };
          L == -1 ? E.push(H) : E[L] = H;
        }
      } else if (D.view != "hidden") {
        if (k(E, A) == -1) {
          let T = Object.assign(
            {
              field: A,
              label: D.title
            },
            Le(D, ["view", "order", "fieldExtendJson", "dictTable", "dictText", "dictCode", "dict"])
          );
          if (D.view == "file" && (T.span = 24, T.isFile = !0), D.view == "image" && (T.span = 24, T.isImage = !0), D.view == "link_table" && D.fieldExtendJson)
            try {
              let L = JSON.parse(D.fieldExtendJson);
              L.showType != "select" && (T.isCard = !0), L.multiSelect == !0 && (T.multi = !0);
            } catch (L) {
            }
          (D.view == "umeditor" || D.view == "markdown") && (T.isHtml = !0, T.span = 24), E.push(T);
        }
      }
    }), E.sort(function(A, D) {
      return A.order - D.order;
    }), _.sort(function(A, D) {
      return A.order - D.order;
    }), c.value = _;
    for (let A = 0; A < E.length; A++) {
      let D = E[A];
      if ((D.isFile === !0 || D.isImage === !0 || D.isHtml === !0) && A > 0) {
        let B = E[A - 1], T = B.span || w.value;
        B.span = T;
      }
    }
    e.value = E, p.value = V;
  }
  function R(S) {
    Rt(S);
  }
  function k(S, _) {
    let E = -1;
    for (let V = 0; V < S.length; V++)
      if (S[V].field === _) {
        E = V;
        break;
      }
    return E;
  }
  function b(S, _) {
    let E = [];
    const {
      config: { table: V, key: A, txt: D, linkField: B },
      order: T,
      title: L,
      others: H
    } = S;
    let W = {
      view: "link_down",
      order: T,
      title: L,
      dictTable: JSON.stringify({
        table: V,
        key: A,
        txt: D
      })
    };
    if (E.push(Object.assign({}, { linkField: B, key: _ }, W)), B) {
      let P = B.split(",");
      for (let O of P) {
        let v = "";
        for (let y of H)
          y.field == O && (v = y.title);
        E.push(Object.assign({}, { key: O }, W, { title: v }));
      }
    }
    return E;
  }
  return {
    detailFormSchemas: e,
    hasSubTable: f,
    subTabInfo: c,
    refMap: t,
    showStatus: l,
    createFormSchemas: g,
    formSpan: w,
    subDataSource: p
  };
}
function Bi(n, e = !0) {
  let t = Se({});
  const l = (b, S) => ge.get({ url: b, params: S }, { isTransformResponse: !1 }), f = (b, S) => ge.post({ url: b, params: S }, { isTransformResponse: !1 }), c = (b, S) => ge.put({ url: b, params: S }, { isTransformResponse: !1 }), p = (b, S) => ge.delete({ url: b, params: S }, { isTransformResponse: !1 });
  e === !0 ? (n._getAction = l, n._postAction = f, n._putAction = c, n._deleteAction = p) : (n.addObject2Context("_getAction", l), n.addObject2Context("_postAction", f), n.addObject2Context("_putAction", c), n.addObject2Context("_deleteAction", p));
  function w(b) {
    if (b) {
      const S = et(b);
      return new S(l, f, p);
    } else
      return {};
  }
  function g(b, S) {
    t && t[S] && t[S](b);
  }
  function R(b, S) {
    return t && t.beforeSubmit ? t.beforeSubmit(b, S) : Promise.resolve();
  }
  function k(b, S) {
    return t && t.beforeDelete ? t.beforeDelete(b, S) : Promise.resolve();
  }
  return e === !0 && n && (n.beforeDelete = (b) => {
    const S = n.EnhanceJS;
    return S && S.beforeDelete ? S.beforeDelete(n, b) : Promise.resolve();
  }, n.beforeEdit = (b) => {
    const S = n.EnhanceJS;
    return S && S.beforeEdit ? S.beforeEdit(n, b) : Promise.resolve();
  }), {
    EnhanceJS: t,
    initCgEnhanceJs: w,
    customBeforeSubmit: R,
    beforeDelete: k,
    triggerJsFun: g
  };
}
const Wi = "/online/cgform/api/subform", Ui = {
  name: "OnlineSubForm",
  components: {
    BasicForm: wt,
    Loading: _t
  },
  props: {
    properties: {
      type: Object,
      required: !0
    },
    mainId: {
      type: String,
      default: ""
    },
    table: {
      type: String,
      default: ""
    },
    formTemplate: {
      type: Number,
      default: 1
    },
    requiredFields: {
      type: Array,
      default: []
    },
    isUpdate: {
      type: Boolean,
      default: !1
    },
    disabled: {
      type: Boolean,
      default: !1
    }
  },
  emits: ["formChange"],
  setup(n, { emit: e }) {
    const t = F(null), l = F(!1);
    Xe();
    const {
      formSchemas: f,
      defaultValueFields: c,
      changeDataIfArray2String: p,
      tableName: w,
      dbData: g,
      checkOnlyFieldValue: R,
      fieldDisplayStatus: k,
      createFormSchemas: b,
      baseColProps: S
    } = Mt(n, t), [_, { setProps: E, validate: V, resetFields: A, setFieldsValue: D, getFieldsValue: B }] = St({
      schemas: f,
      showActionButtonGroup: !1,
      baseColProps: S
    });
    he(
      () => n.table,
      () => {
        w.value = n.table;
      },
      { immediate: !0 }
    ), he(
      () => n.properties,
      (r) => {
        l.value = !1, T(), b(n.properties, n.requiredFields, R), l.value = !0;
      },
      { deep: !0, immediate: !0 }
    ), he(
      () => n.mainId,
      (r) => {
        setTimeout(() => {
          H();
        }, 100);
      },
      { immediate: !0 }
    ), he(
      () => n.disabled,
      (r) => {
        E({ disabled: r });
      }
    );
    function T() {
      return Y(this, null, function* () {
        let r = yield De(t);
        r.$formValueChange = (h, a) => {
          let u = { [h]: a };
          e("formChange", u);
        };
      });
    }
    function L() {
      if (Pe(n.isUpdate) === !1) {
        let r = be(c[w.value]);
        Ze(r, (h) => {
          D(h);
        });
      }
    }
    function H() {
      return Y(this, null, function* () {
        yield De(l), yield A(), L();
        const { table: r, mainId: h } = n;
        if (!r || !h)
          return;
        let a = yield q(r, h);
        g.value = a, yield D(a);
      });
    }
    function q(r, h) {
      let a = `${Wi}/${r}/${h}`;
      return new Promise((u, i) => {
        ge.get({ url: a }, { isTransformResponse: !1 }).then((o) => {
          o.success ? u(o.result) : i();
        });
      }).finally(() => {
        g.value = "";
      });
    }
    function W() {
      return new Promise((r, h) => {
        V().then(() => {
          let a = B();
          a = p(a), r(a);
        }).catch((a) => {
          h(a);
        });
      });
    }
    function P() {
      let r = B();
      return r.id || (r.id = "sub-change-temp-id"), {
        row: r,
        target: y
      };
    }
    function O(r) {
      D(r);
    }
    function v() {
      let r = B(), h = be(c[w.value]);
      Ze(h, (a) => {
        D(a);
      }, r);
    }
    const y = {
      onlineFormRef: t,
      baseColProps: S,
      formSchemas: f,
      registerForm: _,
      setFieldsValue: D,
      getFieldsValue: B,
      getFormEvent: P,
      setValues: O,
      getAll: W,
      executeFillRule: v,
      sh: k
    };
    return y;
  }
};
function Ji(n, e, t, l, f, c) {
  const p = se("BasicForm");
  return Z(), Oe(p, {
    ref: "onlineFormRef",
    onRegister: n.registerForm
  }, null, 8, ["onRegister"]);
}
const $t = /* @__PURE__ */ Me(Ui, [["render", Ji]]), hs = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: $t
}, Symbol.toStringTag, { value: "Module" })), ze = {
  optPre: "/online/cgform/api/form/",
  urlButtonAction: "/online/cgform/api/doButton"
}, Hi = {
  name: "OnlinePopForm",
  components: {
    BasicForm: wt,
    Loading: _t,
    OnlineSubForm: $t,
    PrinterOutlined: vn,
    DiffOutlined: yn,
    FormOutlined: wn
  },
  props: {
    id: {
      type: String,
      default: ""
    },
    formTemplate: {
      type: Number,
      default: 1
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    isTree: {
      type: Boolean,
      default: !1
    },
    pidField: {
      type: String,
      default: ""
    },
    submitTip: {
      type: Boolean,
      default: !0
    },
    modalClass: {
      type: String,
      default: ""
    },
    //是否发送请求-即表单的保存/编辑请求，false则只将表单数据抛出去
    request: {
      type: Boolean,
      default: !0
    },
    // 是否是vxeTable上方按钮点击打开的表单数据
    isVxeTableData: {
      type: Boolean,
      default: !1
    }
  },
  emits: ["success", "rendered", "dataChange"],
  setup(n, { emit: e }) {
    const { createMessage: t } = Xe(), [l, { openModal: f }] = xe(), c = F(""), p = F(null), w = F(!0), g = F(!1), R = F(1), k = F(!1), b = F(!1), S = Se({
      reportPrintShow: 0,
      reportPrintUrl: "",
      joinQuery: 0,
      modelFullscreen: 0,
      modalMinWidth: ""
    }), { onlineFormContext: _, resetContext: E } = ji(), {
      formSchemas: V,
      defaultValueFields: A,
      changeDataIfArray2String: D,
      tableName: B,
      dbData: T,
      checkOnlyFieldValue: L,
      hasSubTable: H,
      subTabInfo: q,
      refMap: W,
      subDataSource: P,
      baseColProps: O,
      createFormSchemas: v,
      fieldDisplayStatus: y
    } = Mt(n, p);
    let { EnhanceJS: r, initCgEnhanceJs: h } = Bi(_, !1);
    const [a, { setProps: u, validate: i, resetFields: o, setFieldsValue: s, updateSchema: C, getFieldsValue: I, scrollToField: $ }] = St({
      schemas: V,
      showActionButtonGroup: !1,
      baseColProps: O
    }), M = F(!1);
    function U() {
      let d = n.disabled;
      M.value = d, u({ disabled: d });
    }
    function z(d, m, x) {
      return Y(this, null, function* () {
        yield o(), T.value = "";
        let N = Pe(d);
        b.value = N, N && (yield G(m)), yield Ee(() => {
          !N && x && s(x), ee(), Be("js", "loaded"), U();
        });
      });
    }
    function ee() {
      if (Pe(b) === !1) {
        let d = be(A[B.value]);
        Ze(d, (m) => {
          s(m);
        });
      }
    }
    function G(d) {
      return Y(this, null, function* () {
        let m = yield J(d.id);
        (!m || Object.keys(m).length == 0) && (m = me({}, be(d))), T.value = Object.assign({}, m);
        let x = te.value, N = Le(m, ...x);
        n.isVxeTableData === !0 && (N = Object.assign({}, N, d)), yield s(N);
      });
    }
    let te = de(() => {
      let d = V.value, m = [];
      for (let x of d)
        m.push(x.field);
      return m;
    });
    function J(d) {
      let m = `${ze.optPre}${n.id}/${d}`;
      return new Promise((x, N) => {
        ge.get({ url: m }, { isTransformResponse: !1 }).then((le) => {
          le.success ? x(le.result) : (N(), t.warning(le.message));
        }).catch(() => {
          N();
        });
      });
    }
    function K(d) {
      return Y(this, null, function* () {
        R.value = d.head.tableType, B.value = d.head.tableName, w.value = d.head.tableType == 1, X(d.head.extConfigJson), v(d.schema.properties, d.schema.required, L), r = h(d.enhanceJs), e("rendered", S);
        let m = yield De(p);
        m.$formValueChange = (x, N, le) => {
          Yt(x, N), le && s(le);
        };
      });
    }
    function X(d) {
      let m = { reportPrintShow: 0, reportPrintUrl: "", joinQuery: 0, modelFullscreen: 1, modalMinWidth: "" };
      d && (m = JSON.parse(d)), Object.keys(m).map((x) => {
        S[x] = m[x];
      });
    }
    function ne() {
      w.value === !0 ? pe() : ie();
    }
    function ie() {
      j().then((d) => {
        Fe(d);
      });
    }
    function j() {
      let d = {};
      return new Promise((m, x) => {
        i().then(
          (N) => m(N),
          ({ errorFields: N }) => {
            N && N.length > 0 && $(N[0][0]), x(Re);
          }
        );
      }).then((m) => (Object.assign(d, D(m)), ve())).then((m) => (Object.assign(d, m), Promise.resolve(d))).catch((m) => ((m === Re || (m == null ? void 0 : m.code) === Re) && (t.warning("校验未通过"), m.key && ae(m.key)), Promise.reject(null)));
    }
    function ae(d) {
      let m = q.value;
      for (let x = 0; x < m.length; x++)
        if (d == m[x].key) {
          Ve.value = x + "";
          break;
        }
    }
    function ve() {
      return new Promise((d, m) => Y(this, null, function* () {
        let x = {};
        try {
          let N = q.value;
          for (let le = 0; le < N.length; le++) {
            let ye = N[le].key, Ce = W[ye].value;
            if (Ce instanceof Array && (Ce = Ce[0]), N[le].relationType == 1)
              try {
                let We = yield Ce.getAll();
                x[ye] = [], x[ye].push(We);
              } catch (We) {
                throw { code: Re, key: ye };
              }
            else {
              if (yield Ce.fullValidateTable())
                throw { code: Re, key: ye };
              x[ye] = Ce.getTableData();
            }
          }
        } catch (N) {
          m(N);
        }
        d(x);
      }));
    }
    function pe() {
      return Y(this, null, function* () {
        try {
          let d = yield i();
          d = Object.assign({}, T.value, d), d = D(d), g.value = !0, Fe(d);
        } finally {
          g.value = !1;
        }
      });
    }
    function Fe(d) {
      Kt(rt, d).then(() => {
        ln(d);
      }).catch((m) => {
        t.warning(m);
      });
    }
    function Ie(d, m, x) {
      m && x ? x.setValues ? x.setValues(d) : x.setValues([
        {
          rowKey: m,
          values: d
        }
      ]) : s(d);
    }
    function Vt(d, m) {
      let x = {};
      x[d] = m, s(x);
    }
    const Ve = F("0"), it = F(300), lt = F(340);
    function Bt(d) {
      if (b.value === !0) {
        let m = T.value;
        return Wt(m, d);
      }
      return "";
    }
    function Wt(d, m) {
      if (d) {
        let x = d[m];
        return !x && x !== 0 && (x = d[m.toLowerCase()], !x && x !== 0 && (x = d[m.toUpperCase()])), x;
      }
      return "";
    }
    function Ut(d, m) {
      if (r && r[m + "_onlChange"]) {
        let x = r[m + "_onlChange"](), N = Object.keys(d)[0];
        if (x[N]) {
          let le = W[m].value;
          le instanceof Array && (le = le[0]);
          let ye = le.getFormEvent(), Ce = me({
            column: { key: N },
            value: d[N]
          }, ye);
          x[N].call(_, _, Ce);
        }
      }
    }
    function Jt(d, m) {
      if (r && r[m + "_onlChange"]) {
        let x = r[m + "_onlChange"](_);
        x[d.column.key] && x[d.column.key].call(_, _, d);
      }
    }
    function Ht(d, m) {
    }
    function qt(d) {
      return "online_" + d + ":";
    }
    function Yt(d, m) {
      return Y(this, null, function* () {
        if (T.value[d] != m && e("dataChange", d), !r || !r.onlChange || !d)
          return !1;
        let N = r.onlChange();
        if (N[d]) {
          let ye = {
            row: yield I(),
            column: { key: d },
            value: m
          };
          N[d].call(_, _, ye);
        }
      });
    }
    function Be(d, m) {
      if (d == "js")
        r && r[m] && r[m].call(_, _);
      else if (d == "action") {
        let x = T.value, N = {
          formId: n.id,
          buttonCode: m,
          dataId: x.id,
          uiFormData: Object.assign({}, x)
        };
        ge.post(
          {
            url: `${ze.urlButtonAction}`,
            params: N
          },
          { isTransformResponse: !1 }
        ).then((le) => {
          le.success ? t.success("处理完成!") : t.warning("处理失败!");
        });
      }
    }
    function st(d) {
      let m = W[d].value, x = [...m.getNewDataWithId(), ...P.value[d]];
      if (!x || x.length == 0)
        return !1;
      let N = [];
      for (let le of x)
        N.push(le.id);
      m.removeRowsById(N);
    }
    function ot(d, m) {
      if (!m)
        return !1;
      let x = W[d].value;
      typeof m == "object" ? x.addRows(m, !0) : t.error("添加子表数据,参数不识别!");
    }
    function zt(d, m) {
      st(d), ot(d, m);
    }
    function Qt(d, m) {
      !m && m.length <= 0 && (m = []), m.map((x) => {
        x.hasOwnProperty("label") || (x.label = x.text);
      }), C({
        field: d,
        componentProps: {
          options: m
        }
      });
    }
    function Kt(d, m) {
      return r && r.beforeSubmit ? r.beforeSubmit(d, m) : Promise.resolve();
    }
    function Zt(d, m) {
      let x = be(y);
      d && d.length > 0 ? Object.keys(x).map((N) => {
        !N.endsWith("_load") && d.indexOf(N) < 0 && (y[N] = !1);
      }) : m && m.length > 0 && Object.keys(x).map((N) => {
        m.indexOf(N) >= 0 && (y[N] = !1);
      });
    }
    function Gt(d) {
      return Y(this, null, function* () {
        yield o(), T.value = "", b.value = !0, yield G(d), yield Ee(() => {
          Be("js", "loaded");
        });
      });
    }
    function Xt(d) {
      let m = W[d].value;
      return m instanceof Array && (m = m[0]), m;
    }
    function en() {
      let d = S.reportPrintUrl, m = T.value.id, x = Nn();
      xn(d, m, x);
    }
    function tn(d) {
      c.value = d.id, f(!0);
    }
    function nn(d) {
    }
    function ln(d) {
      if (Object.keys(d).map((m) => {
        Array.isArray(d[m]) && d[m].length == 0 && (d[m] = "");
      }), n.request == !1)
        e("success", d);
      else {
        let m = `${ze.optPre}${n.id}?tabletype=${R.value}`;
        k.value === !0 && (d[Wn] = 1);
        let x = b.value === !0 ? "put" : "post";
        ge.request({ url: m, method: x, params: d }, { isTransformResponse: !1 }).then((N) => {
          N.success ? (N.result && (d.id || (d.id = N.result)), e("success", d), T.value = d, b.value = !0, t.success("操作成功!")) : t.warning(N.message);
        }).finally(() => {
          g.value = !1;
        });
      }
    }
    function sn() {
      return Y(this, null, function* () {
        let d = T.value, m = te.value, x = Le(d, ...m);
        if (d)
          yield s(x);
        else {
          let N = {};
          for (let le of m)
            N[le] = "";
          yield s(N);
        }
      });
    }
    let rt = {
      tableName: B,
      loading: g,
      subActiveKey: Ve,
      onlineFormRef: p,
      getFieldsValue: I,
      setFieldsValue: s,
      submitFlowFlag: k,
      subFormHeight: it,
      subTableHeight: lt,
      refMap: W,
      triggleChangeValues: Ie,
      triggleChangeValue: Vt,
      sh: y,
      clearSubRows: st,
      addSubRows: ot,
      clearThenAddRows: zt,
      changeOptions: Qt,
      isUpdate: b,
      getSubTableInstance: Xt
    };
    return E(rt), {
      //主表
      tableName: B,
      onlineFormRef: p,
      registerForm: a,
      loading: g,
      //子表
      subActiveKey: Ve,
      hasSubTable: H,
      subTabInfo: q,
      refMap: W,
      //一对一子表
      subFormHeight: it,
      getSubTableForeignKeyValue: Bt,
      isUpdate: b,
      handleSubFormChange: Ut,
      //一对多子表
      subTableHeight: lt,
      onlineFormDisabled: M,
      subDataSource: P,
      getSubTableAuthPre: qt,
      handleAdded: Ht,
      handleValueChange: Jt,
      openSubFormModalForAdd: tn,
      openSubFormModalForEdit: nn,
      registerVxeFormModal: l,
      vxeTableId: c,
      //父组件调用
      show: z,
      createRootProperties: K,
      handleSubmit: ne,
      sh: y,
      handleCgButtonClick: Be,
      handleCustomFormSh: Zt,
      handleCustomFormEdit: Gt,
      //跳转
      dbData: T,
      onOpenReportPrint: en,
      onlineExtConfigJson: S,
      recoverFormData: sn
    };
  }
}, qi = ["id"];
function Yi(n, e, t, l, f, c) {
  const p = se("BasicForm");
  return Z(), ce("div", {
    id: l.tableName + "_form"
  }, [
    ue(p, {
      ref: "onlineFormRef",
      onRegister: l.registerForm
    }, null, 8, ["onRegister"])
  ], 8, qi);
}
const kt = /* @__PURE__ */ Me(Hi, [["render", Yi]]), gs = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: kt
}, Symbol.toStringTag, { value: "Module" }));
function zi(n, { emit: e } = {}, t) {
  const l = F(null), f = F(!1), c = F(1), p = F([]), w = F(!1), g = F(0), R = F(!1), k = F(""), b = F(!1), S = F(!1), _ = F(!0), E = Se({}), V = F(!0), A = F(""), D = F(!0), B = F(!1), { popModalFixedWidth: T, resetBodyStyle: L, popBodyStyle: H } = Et(), q = F(!1), W = F(""), P = {
    handleOpenModal: (j) => {
    }
  }, O = F(""), v = F(""), y = F(!1);
  let r = {};
  const h = de(() => {
    let j = A.value;
    return j || (Pe(f) === !0 ? "详情" : Pe(S) === !0 ? "编辑" : "新增");
  }), [a, { setModalProps: u, closeModal: i }] = vt((j) => Y(this, null, function* () {
    A.value = "", B.value = !1, n === !0 ? yield P.handleOpenModal(j) : yield C(j), L(), t && t();
  })), o = F(!1);
  function s() {
    return Y(this, null, function* () {
      return yield De(o), q.value;
    });
  }
  function C(j) {
    return Y(this, null, function* () {
      u({ confirmLoading: !1 }), S.value = j.isUpdate, f.value = j.disableSubmit || !1, (j == null ? void 0 : j.hideSub) === !0 && (V.value = !1), j != null && j.title && (A.value = j.title), j != null && j.record ? v.value = j.record.id : v.value = "", yield Ee(() => Y(this, null, function* () {
        yield De(w), $(), yield l.value.show(j == null ? void 0 : j.isUpdate, j == null ? void 0 : j.record, j == null ? void 0 : j.param);
      }));
    });
  }
  function I(j) {
    w.value = !0, g.value = j.modalMinWidth, j.modelFullscreen == 1 ? u({ defaultFullscreen: !0 }) : u({ defaultFullscreen: !1 }), r = j;
  }
  function $() {
    let j = v.value;
    r.commentStatus == 1 && j ? (y.value = !0, u({ defaultFullscreen: !0 })) : y.value = !1;
  }
  const M = 800, U = 1100, z = de(() => {
    let j = 200 * (c.value - 1), ae = (Pe(_) ? M : U) + j;
    ae = ee(ae);
    let ve = g.value;
    return ve && ae < ve && (ae = ve), ae;
  });
  function ee(j) {
    let ae = E.modalMinWidth;
    if (ae != null && ae !== "")
      try {
        if (ae = Number.parseInt(ae), j < ae)
          return ae;
      } catch (ve) {
      }
    return j;
  }
  function G(j, ae) {
    l.value.handleCgButtonClick(j, ae);
  }
  function te() {
    b.value = !0, setTimeout(() => {
      b.value = !1;
    }, 1500), l.value.handleSubmit();
  }
  function J() {
    i();
  }
  function K(j, ae = {}) {
    let ve = `/online/cgform/api/getFormItem/${j}`;
    return new Promise((pe, Fe) => {
      ge.get({ url: ve, params: ae }, { isTransformResponse: !1 }).then((Ie) => {
        Ie.success ? pe(Ie.result) : Fe(Ie.message);
      }).catch(() => {
        Fe();
      });
    });
  }
  function X(j, ae, ve) {
    return Y(this, null, function* () {
      let pe = yield K(j, ae), Fe = pe.head.formTemplate;
      c.value = Fe ? Number(Fe) : 1, p.value = pe.cgButtonList, R.value = pe.head.isTree === "Y", k.value = pe.head.treeParentIdField || "", O.value = pe.head.tableName, W.value = pe.head.themeTemplate, pe.form_disable_update === !0 ? q.value = !0 : q.value = !1, o.value = !0, e && e("formConfig", pe), ve && ve(pe), yield Ee(() => Y(this, null, function* () {
        yield (yield De(l)).createRootProperties(pe);
      }));
    });
  }
  function ne(j) {
    j[Un] = O.value, e("success", j), D.value == !0 && i(), B.value = !1, D.value = !0;
  }
  function ie() {
    l.value && l.value.onCloseModal();
  }
  return {
    // modal
    title: h,
    modalWidth: z,
    registerModal: a,
    closeModal: i,
    modalObject: P,
    onCloseEvent: ie,
    // 自定义按钮
    cgButtonList: p,
    handleCgButtonClick: G,
    // 提交/关闭按钮
    disableSubmit: f,
    handleSubmit: te,
    submitLoading: b,
    handleCancel: J,
    successThenClose: D,
    handleSuccess: ne,
    topTipVisible: B,
    //表单
    handleFormConfig: X,
    onlineFormCompRef: l,
    formTemplate: c,
    isTreeForm: R,
    pidFieldName: k,
    renderSuccess: I,
    formRendered: w,
    isUpdate: S,
    showSub: V,
    themeTemplate: W,
    // 评论区域参数
    tableName: O,
    formDataId: v,
    enableComment: y,
    popBodyStyle: H,
    popModalFixedWidth: T,
    getFormStatus: s
  };
}
function Et() {
  const e = F(800);
  let t = window.innerWidth - 300;
  t < 800 && (t = 800), e.value = t;
  const l = F({});
  function f() {
    let c = window.innerHeight - 210;
    l.value = {
      height: c + "px",
      overflowY: "auto"
    };
  }
  return {
    popModalFixedWidth: e,
    popBodyStyle: l,
    resetBodyStyle: f
  };
}
const Qi = gt({
  name: "OnlinePopModal",
  props: {
    /**可以是表名 可以是ID*/
    id: {
      type: String,
      default: ""
    },
    /*展示字段名*/
    showFields: {
      type: Array,
      default: () => []
    },
    /*隐藏字段名*/
    hideFields: {
      type: Array,
      default: () => []
    },
    topTip: {
      type: Boolean,
      default: !1
    },
    request: {
      type: Boolean,
      default: !0
    },
    saveClose: {
      type: Boolean,
      default: !1
    },
    // 是否是vxeTable上方按钮点击打开的表单数据
    isVxeTableData: {
      type: Boolean,
      default: !1
    },
    formTableType: {
      type: String,
      default: ""
    }
  },
  components: {
    BasicModal: yt,
    OnlinePopForm: kt,
    JModalTip: Vn,
    Button: Je
  },
  emits: ["success", "register", "formConfig"],
  setup(n, { emit: e }) {
    const {
      title: t,
      registerModal: l,
      cgButtonList: f,
      handleCgButtonClick: c,
      disableSubmit: p,
      handleSubmit: w,
      submitLoading: g,
      handleCancel: R,
      handleFormConfig: k,
      onlineFormCompRef: b,
      formTemplate: S,
      isTreeForm: _,
      pidFieldName: E,
      renderSuccess: V,
      formRendered: A,
      handleSuccess: D,
      topTipVisible: B,
      successThenClose: T,
      isUpdate: L,
      popBodyStyle: H,
      popModalFixedWidth: q,
      getFormStatus: W
    } = zi(!1, { emit: e });
    he(() => n.id, P, { immediate: !0 });
    function P() {
      return Y(this, null, function* () {
        if (A.value = !1, !n.id)
          return;
        let u = {};
        n.formTableType && (u.tabletype = n.formTableType), yield k(n.id, u);
      });
    }
    function O() {
      n.saveClose === !1 && (T.value = !1), w();
    }
    function v() {
      B.value = !1, b.value.recoverFormData();
    }
    function y() {
      B.value = !0;
    }
    const r = de(() => L.value ? n.topTip : !1), h = de(() => {
      if (L.value == !0)
        return null;
      {
        let u = g.value;
        return [
          $e(Je, { type: "primary", loading: u, onClick: w }, () => "确定"),
          $e(Je, { onClick: R }, () => "关闭")
        ];
      }
    });
    return {
      title: t,
      topTipVisible: B,
      handleSaveData: O,
      handleRecover: v,
      onlineFormCompRef: b,
      renderSuccess: V,
      registerModal: l,
      handleSubmit: w,
      handleSuccess: D,
      handleCancel: R,
      formTemplate: S,
      disableSubmit: p,
      cgButtonList: f,
      handleCgButtonClick: c,
      isTreeForm: _,
      pidFieldName: E,
      submitLoading: g,
      handleDataChange: y,
      isUpdate: L,
      showTopTip: r,
      modalFooter: h,
      popBodyStyle: H,
      popModalFixedWidth: q,
      getFormStatus: W
    };
  }
});
function Ki(n, e, t, l, f, c) {
  const p = se("j-modal-tip"), w = se("online-pop-form"), g = se("BasicModal");
  return Z(), Oe(g, bt({
    width: n.popModalFixedWidth,
    dialogStyle: { top: "70px" },
    bodyStyle: n.popBodyStyle
  }, n.$attrs, {
    footer: n.modalFooter,
    cancelText: "关闭",
    onRegister: n.registerModal,
    wrapClassName: "jeecg-online-pop-modal",
    onOk: n.handleSubmit
  }), {
    title: oe(() => [
      _e(Te(n.title) + " ", 1),
      n.showTopTip ? (Z(), Oe(p, {
        key: 0,
        visible: n.topTipVisible,
        onSave: n.handleSaveData,
        onCancel: n.handleRecover
      }, null, 8, ["visible", "onSave", "onCancel"])) : we("", !0)
    ]),
    default: oe(() => [
      ue(w, {
        ref: "onlineFormCompRef",
        id: n.id,
        disabled: n.disableSubmit,
        "form-template": n.formTemplate,
        isTree: n.isTreeForm,
        pidField: n.pidFieldName,
        request: n.request,
        isVxeTableData: n.isVxeTableData,
        onRendered: n.renderSuccess,
        onSuccess: n.handleSuccess,
        onDataChange: n.handleDataChange,
        "modal-class": "jeecg-online-pop-modal"
      }, null, 8, ["id", "disabled", "form-template", "isTree", "pidField", "request", "isVxeTableData", "onRendered", "onSuccess", "onDataChange"])
    ]),
    _: 1
  }, 16, ["width", "bodyStyle", "footer", "onRegister", "onOk"]);
}
const Ne = /* @__PURE__ */ Me(Qi, [["render", Ki]]), bs = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Ne
}, Symbol.toStringTag, { value: "Module" }));
function pt(n, e) {
  const t = "/online/cgform/api/getData/" + n;
  return ge.get({ url: t, params: e });
}
function Zi(n, e) {
  const t = "/online/cgform/api/getColumns/" + n;
  return ge.get({ url: t, params: e });
}
function jt(n) {
  const e = F("1"), t = F({}), l = F({}), f = F(""), c = Se({
    add: !0,
    update: !0
  }), p = de(() => n.textField ? n.textField.split(",") : []), w = F([]), g = de(() => {
    let P = w.value;
    return n.multi == !0 ? P.slice(0, 3) : P.slice(0, 6);
  });
  fn(() => Y(this, null, function* () {
    if (n.tableName) {
      let O = n.valueField || "", v = n.textField || "", y = [];
      if (O && y.push(O), v) {
        let h = v.split(",");
        f.value = h[0];
        for (let a of h)
          y.push(a);
      }
      let r = n.imageField || "";
      r && y.push(r), t.value = {
        linkTableSelectFields: y.join(",")
      }, yield _(), yield E();
    }
  }));
  const R = de(() => {
    let P = n.textField || "", O = [], v = "";
    if (P) {
      let y = P.split(",");
      v = y[0];
      for (let r = 0; r < y.length; r++)
        r > 0 && O.push(y[r]);
    }
    return {
      others: O,
      labelField: v
    };
  }), k = F([]), b = F([]), S = F({});
  function _() {
    return Y(this, null, function* () {
      let P = t.value;
      const O = yield Zi(n.tableName, P);
      if (b.value = O.columns, O.columns) {
        let v = n.imageField, y = O.columns.filter((r) => r.dataIndex != f.value && r.dataIndex != v);
        w.value = y;
      }
      if (S.value = O.dictOptions, O.hideColumns) {
        let v = O.hideColumns;
        v.indexOf("add") >= 0 ? c.add = !1 : c.add = !0, v.indexOf("update") >= 0 ? c.update = !1 : c.update = !0;
      }
    });
  }
  function E() {
    return Y(this, null, function* () {
      let P = A(), v = (yield pt(n.tableName, P)).records, y = [], { others: r, labelField: h } = R.value, a = n.imageField;
      if (v && v.length > 0)
        for (let u of v) {
          let i = me({}, u);
          V(i);
          let o = Object.assign({}, Le(i, r), { id: i.id, label: i[h], value: i[n.valueField] });
          a && (o[a] = i[a]), y.push(o);
        }
      y.push({}), k.value = y;
    });
  }
  function V(P) {
    let O = b.value, v = S.value;
    for (let y of O) {
      const { dataIndex: r, customRender: h } = y;
      (P[r] || P[r] === 0) && h && h == r && v[h] && (P[r] = Ct(v[h], P[r]));
    }
  }
  function A() {
    return Object.assign({ pageSize: 10, pageNo: e.value }, t.value, l.value);
  }
  function D(P) {
    if (!P)
      l.value = {};
    else {
      let O = p.value, v = [], y = [];
      for (let r = 0; r < O.length; r++)
        r <= 1 && (y.push(O[r]), v.push({ field: O[r], rule: "like", val: P }));
      v.superQueryMatchType = "or", v.superQueryParams = encodeURI(JSON.stringify(v)), l.value = v;
    }
  }
  function B(P) {
    return Y(this, null, function* () {
      if (!P)
        return [];
      let O = n.valueField, v = Ue(me({}, t.value), {
        pageSize: 10,
        pageNo: e.value
      });
      v.superQueryMatchType = "and";
      let y = [{ field: O, rule: "in", val: P }];
      v.superQueryParams = encodeURI(JSON.stringify(y));
      let h = (yield pt(n.tableName, v)).records, a = [];
      if (h && h.length > 0)
        for (let u of h) {
          let i = me({}, u);
          V(i), a.push(i);
        }
      return a;
    });
  }
  function T(P, O) {
    if (!P || P.length == 0)
      return !1;
    let v = O.split(",");
    if (v.length != P.length)
      return !1;
    let y = !0;
    for (let r of P) {
      let h = r[n.valueField];
      v.indexOf(h) < 0 && (y = !1);
    }
    return y;
  }
  function L(P) {
    Object.keys(P).map((O) => {
      P[O] instanceof Array && (P[O] = P[O].join(","));
    });
  }
  function H(P, O, v) {
    if (v || (v = {}), O && O.length > 0)
      for (let y of O) {
        let r = y.split(","), h = r[0], a = r[1];
        if (P[h])
          P[h].push(v[a]);
        else {
          let u = v[a] || "";
          P[h] = [u];
        }
      }
  }
  function q(P) {
    if (n.imageField) {
      let O = P[n.imageField];
      return je(O);
    }
    return "";
  }
  const W = de(() => !!n.imageField);
  return {
    pageNo: e,
    otherColumns: w,
    realShowColumns: g,
    selectOptions: k,
    reloadTableLinkOptions: E,
    textFieldArray: p,
    addQueryParams: D,
    tableColumns: b,
    transData: V,
    mainContentField: f,
    loadOne: B,
    compareData: T,
    formatData: L,
    initFormData: H,
    getImageSrc: q,
    showImage: W,
    auths: c
  };
}
const Gi = {
  name: "LinkTableSelect",
  components: {
    PlusOutlined: Ge,
    EditOutlined: Sn,
    OnlinePopModal: Ne
  },
  props: {
    valueField: re.string.def(""),
    textField: re.string.def(""),
    tableName: re.string.def(""),
    multi: re.bool.def(!1),
    value: re.oneOfType([re.string, re.number, re.array]),
    linkFields: re.array.def([]),
    imageField: re.string.def("")
  },
  emits: ["change", "update:value"],
  setup(n, { emit: e }) {
    const t = mn("tableId", F(null)), l = F(), f = F([]), { auths: c, mainContentField: p, textFieldArray: w, selectOptions: g, reloadTableLinkOptions: R, addQueryParams: k, formatData: b, initFormData: S, getImageSrc: _, showImage: E } = jt(n), [V, { openModal: A }] = xe(), D = de(() => n.tableName), B = de(() => n.multi === !0 ? {
      mode: "multiple"
    } : {});
    function T(r) {
      r == null || r.stopPropagation(), r == null || r.preventDefault(), A(!0, {});
    }
    function L(r, h) {
      r == null || r.stopPropagation(), r == null || r.preventDefault(), c.update != !1 && A(!0, {
        isUpdate: !0,
        record: h
      });
    }
    const H = "custom:online:reload";
    pn(() => {
      l.value && l.value.addEventListener(H, q);
    }), hn(() => {
      l.value && l.value.removeEventListener(H, q);
    });
    function q() {
      R();
    }
    function W(r) {
      return Y(this, null, function* () {
        try {
          const a = document.querySelectorAll(`.online-list-${t.value} .jeecg-basic-table-form-container.online-query-form .link-table-select-box`);
          a && a.length > 0 && a.forEach((u) => u.dispatchEvent(new Event(H)));
        } catch (a) {
        }
        yield R();
        let h = r[n.valueField];
        n.multi === !0 ? f.value = [h] : f.value = h, O(f.value);
      });
    }
    function P(r) {
      k(r), R();
    }
    function O(r) {
      v(r), r || (k(), R());
    }
    function v(r) {
      let h = {}, a = n.linkFields, u = [];
      if (!r)
        S(h, a);
      else {
        let i = be(g.value), o = be(r);
        o instanceof Array ? u = [...o] : n.multi == !0 ? u = o.split(",") : u = [o];
        let s = i.filter((C) => u.indexOf(C[n.valueField]) >= 0);
        if (s && s.length > 0) {
          let C = me({}, s[0]);
          if (s.length > 1)
            for (let $ = 1; $ < s.length; $++)
              C = y(C, s[$]);
          let I = p.value;
          C[I] = C.label, S(h, a, C);
        }
      }
      b(h), e("change", u.join(",") || "", h), e("update:value", u.join(",") || "");
    }
    function y(r, h) {
      let a = {};
      return Object.keys(r).map((u) => {
        a[u] = (r[u] || "") + "," + (h[u] || "");
      }), a;
    }
    return he(() => n.value, (r) => Y(this, null, function* () {
      r ? (n.multi == !0 ? f.value = r.split(",") : f.value = r, n.linkFields && n.linkFields.length > 0 && v(r)) : f.value = [];
    }), { immediate: !0 }), he(() => g.value, (r) => {
      r && r.length > 0 && n.linkFields && n.linkFields.length > 0 && f.value && f.value.length > 0 && v(f.value);
    }), {
      boxRef: l,
      selectValue: f,
      selectOptions: g,
      registerPopModal: V,
      popTableName: D,
      textFieldArray: w,
      handleClickAdd: T,
      handleClickEdit: L,
      getFormData: W,
      handleSearch: Bn(P, 800),
      handleChange: O,
      bindValue: B,
      showImage: E,
      getImageSrc: _,
      auths: c
    };
  }
};
const Xi = {
  class: "link-table-select-box",
  ref: "boxRef"
}, el = {
  key: 1,
  class: "online-select-item"
}, tl = {
  key: 0,
  class: "left-avatar"
}, nl = ["src"], il = { class: "right-content" }, ll = { class: "label" }, sl = { class: "others" }, ol = { class: "other-item ellipsis" };
function rl(n, e, t, l, f, c) {
  const p = se("PlusOutlined"), w = se("EditOutlined"), g = se("a-select"), R = se("online-pop-modal");
  return Z(), ce("div", Xi, [
    ue(g, bt({
      value: l.selectValue,
      "onUpdate:value": e[1] || (e[1] = (k) => l.selectValue = k),
      style: { width: "100%" },
      placeholder: "请选择",
      "option-label-prop": "label",
      popupClassName: "table-link-select",
      allowClear: "",
      "show-search": ""
    }, l.bindValue, {
      options: l.selectOptions,
      "filter-option": !1,
      "not-found-content": null,
      onSearch: l.handleSearch,
      onChange: l.handleChange
    }), {
      option: oe((k) => [
        !k.value && l.auths.add ? (Z(), ce("div", {
          key: 0,
          class: "opt-add",
          onClick: e[0] || (e[0] = (...b) => l.handleClickAdd && l.handleClickAdd(...b))
        }, [
          ue(p),
          _e(" 记录 ")
        ])) : (Z(), ce("div", el, [
          l.showImage ? (Z(), ce("div", tl, [
            l.getImageSrc(k) ? (Z(), ce("img", {
              key: 0,
              src: l.getImageSrc(k),
              alt: ""
            }, null, 8, nl)) : we("", !0)
          ])) : we("", !0),
          fe("div", il, [
            fe("div", ll, [
              l.auths.update ? (Z(), Oe(w, {
                key: 0,
                onClick: (b) => l.handleClickEdit(b, k)
              }, null, 8, ["onClick"])) : we("", !0),
              _e(" " + Te(k.label), 1)
            ]),
            fe("div", sl, [
              (Z(!0), ce(Ae, null, Qe(l.textFieldArray, (b) => (Z(), ce("div", ol, Te(k[b]), 1))), 256))
            ])
          ])
        ]))
      ]),
      _: 1
    }, 16, ["value", "options", "onSearch", "onChange"]),
    ue(R, {
      id: l.popTableName,
      onRegister: l.registerPopModal,
      onSuccess: l.getFormData,
      topTip: ""
    }, null, 8, ["id", "onRegister", "onSuccess"])
  ], 512);
}
const At = /* @__PURE__ */ Me(Gi, [["render", rl], ["__scopeId", "data-v-4d29cbcc"]]), vs = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: At
}, Symbol.toStringTag, { value: "Module" }));
function al(n, e) {
  let t = kn();
  const l = F([]), f = F({}), c = F([]), p = F(null);
  let w = F(!0), g = de(() => {
    if (w.value != !0)
      return { x: !1 };
  });
  const [R, { openModal: k }] = xe(), b = F(""), [S, { openModal: _ }] = xe(), E = F("");
  function V(i, o = "checkbox") {
    f.value = i.dictOptions, i.checkboxFlag == "Y" ? p.value = {
      selectedRowKeys: c,
      onChange: A,
      type: o
    } : p.value = null, w.value = i.scrollFlag == 1;
    let s = i.columns;
    s.forEach((M) => {
      M.fieldExtendJson && JSON.parse(M.fieldExtendJson).isFixed && (M.fixed = "left"), Object.keys(M).map((U) => {
        M[U] == null && delete M[U];
      });
    });
    let C = i.fieldHrefSlots;
    const I = {};
    C.forEach((M) => I[M.slotName] = M);
    let $ = [];
    if ($ = D(s, I), P($), n.isTree() === !0) {
      let M = i.textField, U = -1;
      for (let z = 0; z < $.length; z++)
        if ($[z].dataIndex == M) {
          U = z;
          break;
        }
      if (U > 0) {
        let z = $.splice(U, 1);
        $.unshift(z[0]);
      }
      $.length > 0 && ($[0].align = "left");
    }
    l.value = $, n.reloadTable();
  }
  function A(i, o) {
    c.value = i, n.selectedRows = be(o), n.selectedRowKeys = be(i);
  }
  function D(i, o) {
    for (let s of i) {
      let { customRender: C, hrefSlotName: I, fieldType: $ } = s;
      if ($ == "date" || $ == "Date")
        s.customRender = ({ text: M }) => M ? M.length > 10 ? M.substring(0, 10) : M : "";
      else if ($ == "link_table")
        s.customRender = ({ text: M, record: U }) => {
          if (!M)
            return "";
          if (n.isPopList === !0)
            return U[s.dataIndex + "_dictText"];
          {
            let z = (M + "").split(","), ee = [];
            U[s.dataIndex + "_dictText"] && (ee = U[s.dataIndex + "_dictText"].split(","));
            let G = [];
            for (let te = 0; te < z.length; te++) {
              let J = $e(
                An,
                {
                  id: z[te],
                  text: ee[te],
                  onTab: (K) => u(K, I)
                }
              );
              G.push(J);
            }
            return G.length == 0 ? "" : $e("div", { style: { overflow: "hidden" } }, G);
          }
        };
      else {
        if (!I && s.scopedSlots && s.scopedSlots.customRender && o.hasOwnProperty(s.scopedSlots.customRender) && (I = s.scopedSlots.customRender), C || I) {
          let M = C, U = "_replace_text_";
          s.ellipsis = !0, s.customRender = ({ text: z, record: ee }) => {
            let G = z;
            if (M)
              if (M.startsWith(U)) {
                let te = M.replace(U, "");
                G = ee[te];
              } else
                G = Ct(Pe(f)[M], z + "");
            if (s.showLength && G && G.length > s.showLength && (G = G.substr(0, s.showLength) + "..."), I) {
              let te = o[I];
              if (te)
                return $e(
                  "a",
                  {
                    onClick: () => B(te, ee)
                  },
                  G
                );
            }
            return G;
          };
        }
        if (s.scopedSlots) {
          s.ellipsis = !0;
          let M = s.scopedSlots;
          s.slots = M, delete s.scopedSlots;
        }
      }
    }
    return i;
  }
  function B(i, o) {
    let s = i.href, C = /(ht|f)tp(s?)\:\/\/[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*(:(0-9)*)*(\/?)([a-zA-Z0-9\-\.\?\,\'\/\\\+&amp;%\$#_]*)?/, I = /\.vue(\?.*)?$/, $ = /{{([^}]+)}}/g;
    if (typeof s == "string")
      if (s.startsWith("ONLINE:")) {
        let M = s.split(":");
        b.value = M[1];
        let U = M[2];
        k(!0, {
          isUpdate: !0,
          disableSubmit: !0,
          hideSub: !0,
          record: { id: o[U] }
        });
      } else
        s = s.trim().replace(/\${([^}]+)?}/g, (M, U) => o[U]), $.test(s) && (s = s.replace($, function(M, U) {
          try {
            return et(U);
          } catch (z) {
            return M;
          }
        })), C.test(s) ? window.open(s, "_blank") : I.test(s) ? H(s) : t.push(s);
  }
  const L = Se({
    model: {
      title: "",
      okText: "关闭",
      width: "100%",
      open: !1,
      destroyOnClose: !0,
      style: {
        top: 0,
        left: 0,
        height: "100%",
        margin: 0,
        padding: 0
      },
      // dialogStyle: dialogStyle,
      bodyStyle: { padding: "8px", height: "calc(100vh - 108px)", overflow: "auto", overflowX: "hidden" },
      // 隐藏掉取消按钮
      cancelButtonProps: { style: { display: "none" } }
    },
    on: {
      ok: () => L.model.open = !1,
      cancel: () => L.model.open = !1
    },
    is: null,
    params: {}
  });
  function H(i) {
    let o = i.indexOf("?"), s = i;
    if (o !== -1) {
      s = i.substring(0, o);
      let I = i.substring(o + 1, i.length).split("&"), $ = {};
      I.forEach((M) => {
        let U = M.split("=");
        $[U[0]] = U[1];
      }), L.params = $;
    } else
      L.params = {};
    L.model.open = !0, L.model.title = "操作", L.is = gn(bn(() => In(s)));
  }
  let q = "left";
  n.isTree() && (q = "right");
  const W = Se({
    title: "操作",
    dataIndex: "action",
    slots: { customRender: "action" },
    fixed: q,
    align: "center",
    width: 150
  });
  he(() => e == null ? void 0 : e.value, () => {
    var i, o;
    ((i = e == null ? void 0 : e.value) == null ? void 0 : i.tableFixedAction) === 1 && (W.fixed = ((o = e == null ? void 0 : e.value) == null ? void 0 : o.tableFixedActionType) || "right", n.isTree() && (W.fixed = "right"));
  });
  function P(i) {
    let o = !1;
    for (let s = 0; s < i.length; s++)
      if (i[s].dataIndex.toLowerCase() == "bpm_status") {
        o = !0;
        break;
      }
    return n.hasBpmStatus = o, o;
  }
  function O(i) {
    if (!i)
      return;
    i.indexOf(",") > 0 && (i = i.substring(0, i.indexOf(",")));
    let o = je(i);
    window.open(o);
  }
  function v(i) {
    return i && i.indexOf(",") > 0 && (i = i.substring(0, i.indexOf(","))), je(i);
  }
  function y(i) {
    return i ? En(i) : "";
  }
  function r(i) {
    if (!i)
      return "";
    let o = i;
    return o.length > 10 && (o = o.substring(0, 10)), o;
  }
  he(c, () => {
    n.selectedRowKeys = be(c.value);
  }), n.clearSelectedRow = () => {
    c.value = [], n.selectedRows = [], n.selectedRowKeys = [];
  };
  function h(i) {
    if (i) {
      let o = [], s = i.split(",");
      for (let C of s)
        C && o.push(je(C));
      jn({ imageList: o });
    }
  }
  const a = F();
  function u(i, o) {
    return Y(this, null, function* () {
      E.value = o, (yield a.value.getFormStatus()) == !0 ? (b.value = o, k(!0, {
        isUpdate: !0,
        disableSubmit: !0,
        hideSub: !0,
        record: { id: i }
      })) : _(!0, {
        isUpdate: !0,
        record: {
          id: i
        }
      });
    });
  }
  return {
    columns: l,
    actionColumn: W,
    selectedKeys: c,
    rowSelection: p,
    enableScrollBar: w,
    tableScroll: g,
    downloadRowFile: O,
    getImgView: v,
    getPcaText: y,
    getFormatDate: r,
    handleColumnResult: V,
    onSelectChange: A,
    hrefComponent: L,
    viewOnlineCellImage: h,
    hrefMainTableId: b,
    registerOnlineHrefModal: R,
    registerPopModal: S,
    openPopModal: _,
    openOnlineHrefModal: k,
    onlinePopModalRef: a,
    popTableId: E
  };
}
const ul = gt({
  name: "OnlinePopListModal",
  props: {
    /**可以是表名 可以是ID*/
    id: {
      type: String,
      default: ""
    },
    multi: {
      type: Boolean,
      default: !1
    },
    addAuth: {
      type: Boolean,
      default: !0
    }
  },
  components: {
    BasicModal: yt,
    BasicTable: Mn,
    TableAction: Rn,
    PlusOutlined: Ge,
    OnlinePopModal: Ne
  },
  emits: ["success", "register"],
  setup(n, { emit: e }) {
    const { createMessage: t } = Xe(), { popModalFixedWidth: l, resetBodyStyle: f, popBodyStyle: c } = Et(), p = F(""), w = F(800), [g, { closeModal: R }] = vt(() => {
      p.value = "", C.value = [], I.value = [], o({ current: 1 }), i(), f();
    }), [k, { openModal: b }] = xe();
    function S() {
      R();
    }
    const _ = de(() => {
      const J = C.value;
      return !(J && J.length > 0);
    }), E = F(!1);
    function V() {
      E.value = !0;
      let J = be(I.value);
      J && J.length > 0 && (e("success", J), R()), setTimeout(() => {
        E.value = !1;
      }, 200);
    }
    function A(J) {
      const K = "/online/cgform/api/getData/" + n.id;
      return ge.get({ url: K, params: J });
    }
    function D(J) {
      return J.column = "id", new Promise((K, X) => Y(this, null, function* () {
        const ne = yield A(J);
        K(ne);
      }));
    }
    const B = {
      isPopList: !0,
      reloadTable() {
      },
      isTree() {
        return !1;
      }
    }, T = F({}), {
      columns: L,
      downloadRowFile: H,
      getImgView: q,
      getPcaText: W,
      getFormatDate: P,
      handleColumnResult: O,
      hrefComponent: v,
      viewOnlineCellImage: y
    } = al(B, T);
    function r() {
      const J = "/online/cgform/api/getColumns/" + n.id;
      return new Promise((K, X) => {
        ge.get({ url: J }, { isTransformResponse: !1 }).then((ne) => {
          ne.success ? K(ne.result) : (t.warning(ne.message), X());
        });
      });
    }
    const h = F("");
    he(() => n.id, () => Y(this, null, function* () {
      let J = yield r();
      O(J), h.value = J.description;
    }), { immediate: !0 });
    const { tableContext: a } = $n({
      designScope: "process-design",
      pagination: !0,
      tableProps: {
        title: "",
        api: D,
        clickToRowSelect: !0,
        columns: L,
        showTableSetting: !1,
        immediate: !1,
        //showIndexColumn: true,
        canResize: !1,
        showActionColumn: !1,
        actionColumn: {
          dataIndex: "action",
          slots: { customRender: "action" }
        },
        useSearchForm: !1,
        beforeFetch: (J) => ee(J)
      }
    }), [u, { reload: i, setPagination: o }, { rowSelection: s, selectedRowKeys: C, selectedRows: I }] = a;
    he(() => n.multi, (J) => {
      J == !0 ? s.type = "checkbox" : s.type = "radio";
    }, { immediate: !0 });
    function $(J) {
      return [
        {
          label: "编辑",
          onClick: M.bind(null, J)
        }
      ];
    }
    function M(J) {
    }
    function U() {
      i();
    }
    const z = ["int", "double", "Date", "Datetime", "BigDecimal"];
    function ee(J) {
      let K = p.value;
      if (!K)
        return J.superQueryMatchType = "or", J.superQueryParams = "", J;
      let X = L.value, ne = [];
      if (X && X.length > 0)
        for (let ie of X)
          ie.dbType && (ie.dbType == "string" ? ne.push({ field: ie.dataIndex, type: ie.dbType.toLowerCase(), rule: "like", val: K }) : ie.dbType == "Date" ? K.length == 10 && ne.push({ field: ie.dataIndex, type: ie.dbType.toLowerCase(), rule: "eq", val: K }) : ie.dbType == "Datetime" ? K.length == 19 && ne.push({ field: ie.dataIndex, type: ie.dbType.toLowerCase(), rule: "eq", val: K }) : z.indexOf(ie.dbType) && ne.push({ field: ie.dataIndex, type: ie.dbType.toLowerCase(), rule: "eq", val: K }));
      return J.superQueryMatchType = "or", J.superQueryParams = encodeURI(JSON.stringify(ne)), J;
    }
    function G() {
      b(!0, {});
    }
    function te(J) {
      e("success", [J]), R();
    }
    return {
      registerModal: g,
      modalWidth: w,
      handleCancel: S,
      submitDisabled: _,
      submitLoading: E,
      handleSubmit: V,
      registerTable: u,
      getTableAction: $,
      searchText: p,
      onSearch: U,
      downloadRowFile: H,
      getImgView: q,
      getPcaText: W,
      getFormatDate: P,
      hrefComponent: v,
      viewOnlineCellImage: y,
      rowSelection: s,
      modalTitle: h,
      registerPopModal: k,
      handleAdd: G,
      reload: i,
      popModalFixedWidth: l,
      popBodyStyle: c,
      handleDataSave: te
    };
  }
}), cl = { style: { display: "inline-block", width: "calc(100% - 140px)", "text-align": "left" } }, dl = {
  key: 0,
  style: { "font-size": "12px", "font-style": "italic" }
}, fl = {
  key: 0,
  style: { "font-size": "12px", "font-style": "italic" }
}, ml = ["src", "onClick"], pl = ["innerHTML"], hl = ["title"];
function gl(n, e, t, l, f, c) {
  const p = se("PlusOutlined"), w = se("a-button"), g = se("a-input-search"), R = se("TableAction"), k = se("BasicTable"), b = se("BasicModal"), S = se("online-pop-modal");
  return Z(), ce(Ae, null, [
    ue(b, {
      onRegister: n.registerModal,
      width: n.popModalFixedWidth,
      dialogStyle: { top: "70px" },
      bodyStyle: n.popBodyStyle,
      title: n.modalTitle,
      wrapClassName: "jeecg-online-pop-list-modal"
    }, {
      footer: oe(() => [
        fe("div", cl, [
          n.addAuth ? (Z(), Oe(w, {
            key: 0,
            style: { "border-radius": "50px" },
            type: "primary",
            onClick: n.handleAdd
          }, {
            default: oe(() => [
              ue(p),
              _e("新增记录")
            ]),
            _: 1
          }, 8, ["onClick"])) : we("", !0)
        ]),
        ue(w, {
          key: "back",
          onClick: n.handleCancel
        }, {
          default: oe(() => [
            _e("关闭")
          ]),
          _: 1
        }, 8, ["onClick"]),
        ue(w, {
          disabled: n.submitDisabled,
          key: "submit",
          type: "primary",
          onClick: n.handleSubmit,
          loading: n.submitLoading
        }, {
          default: oe(() => [
            _e("确定")
          ]),
          _: 1
        }, 8, ["disabled", "onClick", "loading"])
      ]),
      default: oe(() => [
        ue(k, {
          onRegister: n.registerTable,
          rowSelection: n.rowSelection
        }, {
          tableTitle: oe(() => [
            ue(g, {
              value: n.searchText,
              "onUpdate:value": e[0] || (e[0] = (_) => n.searchText = _),
              onSearch: n.onSearch,
              placeholder: "请输入关键词，按回车搜索",
              style: { width: "240px" }
            }, null, 8, ["value", "onSearch"])
          ]),
          action: oe(({ record: _ }) => [
            ue(R, {
              actions: n.getTableAction(_)
            }, null, 8, ["actions"])
          ]),
          fileSlot: oe(({ text: _ }) => [
            _ ? (Z(), Oe(w, {
              key: 1,
              ghost: !0,
              type: "primary",
              preIcon: "ant-design:download",
              size: "small",
              onClick: (E) => n.downloadRowFile(_)
            }, {
              default: oe(() => [
                _e(" 下载 ")
              ]),
              _: 2
            }, 1032, ["onClick"])) : (Z(), ce("span", dl, "无文件"))
          ]),
          imgSlot: oe(({ text: _ }) => [
            _ ? (Z(), ce("img", {
              key: 1,
              src: n.getImgView(_),
              alt: "图片不存在",
              class: "online-cell-image",
              onClick: (E) => n.viewOnlineCellImage(_)
            }, null, 8, ml)) : (Z(), ce("span", fl, "无图片"))
          ]),
          htmlSlot: oe(({ text: _ }) => [
            fe("div", { innerHTML: _ }, null, 8, pl)
          ]),
          pcaSlot: oe(({ text: _ }) => [
            fe("div", {
              title: n.getPcaText(_)
            }, Te(n.getPcaText(_)), 9, hl)
          ]),
          dateSlot: oe(({ text: _ }) => [
            fe("span", null, Te(n.getFormatDate(_)), 1)
          ]),
          _: 1
        }, 8, ["onRegister", "rowSelection"])
      ]),
      _: 1
    }, 8, ["onRegister", "width", "bodyStyle", "title"]),
    ue(S, {
      id: n.id,
      onRegister: n.registerPopModal,
      onSuccess: n.handleDataSave,
      topTip: ""
    }, null, 8, ["id", "onRegister", "onSuccess"])
  ], 64);
}
const Lt = /* @__PURE__ */ Me(ul, [["render", gl]]), ys = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Lt
}, Symbol.toStringTag, { value: "Module" }));
const bl = {
  name: "LinkTableCard",
  props: {
    valueField: re.string.def(""),
    textField: re.string.def(""),
    tableName: re.string.def(""),
    multi: re.bool.def(!1),
    value: re.oneOfType([re.string, re.number]),
    // ["表单字段,表字典字段","表单字段,表字典字段"]
    linkFields: re.array.def([]),
    //是否是禁用页面
    disabled: re.bool.def(!1),
    // 是否是detail页面
    detail: re.bool.def(!1),
    imageField: re.string.def("")
  },
  components: {
    PlusOutlined: Ge,
    MinusCircleFilled: Fn,
    OnlinePopListModal: Lt,
    OnlinePopModal: Ne
  },
  emits: ["change", "update:value"],
  setup(n, { emit: e }) {
    const t = de(() => n.tableName), [l, { openModal: f }] = xe(), [c, { openModal: p }] = xe(), w = F([]), g = F([]), R = de(() => !(n.disabled == !0 || n.multi === !1 && g.value.length > 0)), { auths: k, otherColumns: b, realShowColumns: S, tableColumns: _, textFieldArray: E, transData: V, loadOne: A, compareData: D, formatData: B, initFormData: T, getImageSrc: L, showImage: H } = jt(n), q = de(() => n.multi === !0 ? 12 : 24), W = de(() => n.multi === !0 ? 24 : 12);
    function P(i) {
      if (i && E.value.length > 0) {
        let o = E.value[0];
        return i[o];
      }
    }
    function O(i) {
      i == null || i.stopPropagation(), i == null || i.preventDefault();
    }
    function v(i, o) {
      O(i), k.update != !1 && n.disabled == !1 && p(!0, {
        isUpdate: !0,
        record: o
      });
    }
    function y(i) {
      f(!0, {});
    }
    function r(i) {
      let o = g.value;
      for (let s of i) {
        let C = me({}, s);
        V(C), o.push(C);
      }
      g.value = o, u();
    }
    function h(i) {
      let o = g.value;
      for (let s = 0; s < o.length; s++)
        if (o[s].id === i.id) {
          let C = me({}, i);
          V(C), o.splice(s, 1, C);
        }
      g.value = o, u();
    }
    function a(i, o) {
      O(i);
      let s = g.value;
      s && s.length > o && (s.splice(o, 1), g.value = s), u();
    }
    function u() {
      let i = g.value, o = [], s = {}, C = n.linkFields;
      if (i.length > 0)
        for (let $ = 0; $ < i.length; $++)
          o.push(i[$][n.valueField]), T(s, C, i[$]);
      else
        T(s, C);
      let I = o.join(",");
      B(s), e("change", I, s), e("update:value", I);
    }
    return he(() => n.value, (i) => Y(this, null, function* () {
      if (i) {
        if (D(g.value, i) === !1) {
          let s = yield A(i);
          g.value = s;
        }
        n.linkFields && n.linkFields.length > 0 && u();
      } else
        g.value = [];
    }), { immediate: !0 }), {
      popTableName: t,
      selectRecords: g,
      otherColumns: b,
      realShowColumns: S,
      showButton: R,
      selectValue: w,
      handleAddRecord: y,
      handleDeleteRecord: a,
      getMainContent: P,
      itemSpan: q,
      columnSpan: W,
      tableColumns: _,
      addCard: r,
      registerListModal: l,
      registerFormModal: c,
      handleClickEdit: v,
      updateCardData: h,
      getImageSrc: L,
      showImage: H,
      auths: k
    };
  }
}, vl = { class: "table-link-card" }, yl = { style: { width: "100%", height: "100%" } }, wl = {
  key: 0,
  class: "card-button"
}, Sl = ["onClick"], Fl = {
  key: 0,
  class: "card-delete"
}, Cl = { class: "card-inner" }, _l = { class: "card-main-content" }, Tl = { class: "other-content" }, Ol = { class: "label ellipsis" }, Pl = { class: "text ellipsis" }, xl = {
  key: 0,
  class: "card-item-image"
}, Il = ["src"];
function Dl(n, e, t, l, f, c) {
  const p = se("PlusOutlined"), w = se("a-button"), g = se("minus-circle-filled"), R = se("a-col"), k = se("a-row"), b = se("online-pop-list-modal"), S = se("online-pop-modal");
  return Z(), ce("div", null, [
    fe("div", vl, [
      fe("div", yl, [
        l.showButton ? (Z(), ce("div", wl, [
          ue(w, { onClick: l.handleAddRecord }, {
            default: oe(() => [
              ue(p),
              _e("记 录")
            ]),
            _: 1
          }, 8, ["onClick"])
        ])) : we("", !0),
        ue(k, null, {
          default: oe(() => [
            (Z(!0), ce(Ae, null, Qe(l.selectRecords, (_, E) => (Z(), Oe(R, { span: l.itemSpan }, {
              default: oe(() => [
                fe("div", {
                  class: ct(["card-item", { "disabled-chunk": t.detail == !0 }]),
                  onClick: (V) => l.handleClickEdit(V, _)
                }, [
                  fe("div", {
                    class: ct(["card-item-left", { "show-right-image": l.showImage }])
                  }, [
                    t.disabled == !1 ? (Z(), ce("span", Fl, [
                      ue(g, {
                        onClick: (V) => l.handleDeleteRecord(V, E)
                      }, null, 8, ["onClick"])
                    ])) : we("", !0),
                    fe("div", Cl, [
                      fe("div", _l, Te(l.getMainContent(_)), 1),
                      fe("div", Tl, [
                        ue(k, null, {
                          default: oe(() => [
                            (Z(!0), ce(Ae, null, Qe(l.realShowColumns, (V) => (Z(), Oe(R, { span: l.columnSpan }, {
                              default: oe(() => [
                                fe("span", Ol, Te(V.title), 1),
                                fe("span", Pl, Te(_[V.dataIndex]), 1)
                              ]),
                              _: 2
                            }, 1032, ["span"]))), 256))
                          ]),
                          _: 2
                        }, 1024)
                      ])
                    ])
                  ], 2),
                  l.showImage ? (Z(), ce("div", xl, [
                    l.getImageSrc(_) ? (Z(), ce("img", {
                      key: 0,
                      src: l.getImageSrc(_),
                      alt: ""
                    }, null, 8, Il)) : we("", !0)
                  ])) : we("", !0)
                ], 10, Sl)
              ]),
              _: 2
            }, 1032, ["span"]))), 256))
          ]),
          _: 1
        })
      ])
    ]),
    ue(b, {
      onRegister: l.registerListModal,
      multi: t.multi,
      id: l.popTableName,
      addAuth: l.auths.add,
      onSuccess: l.addCard
    }, null, 8, ["onRegister", "multi", "id", "addAuth", "onSuccess"]),
    ue(S, {
      id: l.popTableName,
      onRegister: l.registerFormModal,
      onSuccess: l.updateCardData,
      topTip: ""
    }, null, 8, ["id", "onRegister", "onSuccess"])
  ]);
}
const Nt = /* @__PURE__ */ Me(bl, [["render", Dl], ["__scopeId", "data-v-447ec75a"]]), ws = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Nt
}, Symbol.toStringTag, { value: "Module" })), ht = {};
function Ml() {
  n("OnlineSelectCascade", Ln), n("LinkTableSelect", At), n("LinkTableCard", Nt);
  function n(t, l) {
    ht[t] || (dn(t, l), ht[t] = 1);
  }
  function e(t) {
    t.component == "LinkTableCard" && (t.component = "LinkTableSelect", t.componentProps.popContainer = "body");
  }
  return {
    addComponent: n,
    linkTableCard2Select: e
  };
}
export {
  ds as E,
  He as F,
  nt as L,
  Ne as O,
  Wn as S,
  Re as V,
  al as a,
  zi as b,
  $t as c,
  ji as d,
  Mt as e,
  us as f,
  De as g,
  Un as h,
  ps as i,
  Ml as j,
  fs as k,
  Ze as l,
  ms as m,
  Ai as n,
  mt as o,
  cs as p,
  Nt as q,
  hs as r,
  gs as s,
  bs as t,
  Bi as u,
  vs as v,
  ys as w,
  ws as x
};
