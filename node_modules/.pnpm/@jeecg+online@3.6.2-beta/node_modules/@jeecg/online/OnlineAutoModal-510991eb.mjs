var k = (e, l, t) => new Promise((p, d) => {
  var s = (o) => {
    try {
      i(t.next(o));
    } catch (r) {
      d(r);
    }
  }, m = (o) => {
    try {
      i(t.throw(o));
    } catch (r) {
      d(r);
    }
  }, i = (o) => o.done ? p(o.value) : Promise.resolve(o.value).then(s, m);
  i((t = t.apply(e, l)).next());
});
import { defineComponent as P, ref as V, watch as W, resolveComponent as u, openBlock as c, createBlock as f, mergeProps as S, withCtx as a, createElementBlock as j, Fragment as H, renderList as q, createTextVNode as C, toDisplayString as z, createCommentVNode as G, createVNode as b } from "vue";
import { BasicModal as J } from "/@/components/Modal";
import K from "./OnlineForm-1fa2d893.mjs";
import { b as Q } from "./useExtendComponent-325fe3f1.mjs";
import U from "/@/components/jeecg/comment/CommentPanel.vue";
import { _ as X } from "./index-0e3ab3af.mjs";
import "/@/hooks/web/useMessage";
import "/@/components/Form/index";
import "/@/utils/http/axios";
import "lodash-es";
import "/@/utils";
import "/@/components/Loading";
import "/@/components/jeecg/JVxeTable/types";
import "/@/utils/auth";
import "@ant-design/icons-vue";
import "/@/hooks/core/useContext";
import "/@/utils/mitt";
import "./useCustomHook-acb00837.mjs";
import "/@/utils/cache";
import "/@/utils/common/compUtils";
import "/@/store/modules/user";
import "./constant-754f1a9d.mjs";
import "/@/components/Form/src/componentMap";
import "/@/utils/propTypes";
import "/@/components/Form/src/jeecg/components/JUpload";
import "/@/views/system/user/user.api";
import "/@/utils/desform/customExpression";
import "/@/store/modules/permission";
import "/@/utils/dict/JDictSelectUtil";
import "/@/components/Table";
import "/@/hooks/system/useListPage";
import "vue-router";
import "/@/components/Form/src/utils/Area";
import "/@/components/Preview/index";
import "./LinkTableListPiece-8499a318.mjs";
import "./OnlineSelectCascade-4265c95d.mjs";
import "./JModalTip-33c7dc44.mjs";
import "/@/hooks/web/useAppInject";
import "ant-design-vue";
import "@vueuse/core";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
const Y = P({
  name: "OnlineAutoModal",
  props: {
    id: {
      type: String,
      default: ""
    }
  },
  components: {
    BasicModal: J,
    OnlineForm: K,
    CommentPanel: U
  },
  emits: ["success", "register", "formConfig"],
  setup(e, { emit: l }) {
    const t = V();
    function p() {
      t.value && t.value.reload();
    }
    const {
      title: d,
      modalWidth: s,
      registerModal: m,
      closeModal: i,
      cgButtonList: o,
      handleCgButtonClick: r,
      disableSubmit: n,
      handleSubmit: h,
      submitLoading: F,
      handleCancel: T,
      handleFormConfig: y,
      onlineFormCompRef: B,
      formTemplate: N,
      isTreeForm: I,
      pidFieldName: M,
      renderSuccess: R,
      formRendered: v,
      tableName: $,
      formDataId: w,
      enableComment: E,
      onCloseEvent: g,
      themeTemplate: L
    } = Q(!1, { emit: l }, p);
    function O(D) {
      l("success", D), i(), g();
    }
    W(() => e.id, A, { immediate: !0 });
    function A() {
      return k(this, null, function* () {
        v.value = !1, e.id && (yield y(e.id, {}));
      });
    }
    return {
      title: d,
      onlineFormCompRef: B,
      renderSuccess: R,
      registerModal: m,
      handleSubmit: h,
      handleSuccess: O,
      handleCancel: T,
      modalWidth: s,
      formTemplate: N,
      disableSubmit: n,
      cgButtonList: o,
      handleCgButtonClick: r,
      isTreeForm: I,
      pidFieldName: M,
      submitLoading: F,
      tableName: $,
      formDataId: w,
      enableComment: E,
      commentPanelRef: t,
      onCloseEvent: g,
      themeTemplate: L
    };
  }
});
function Z(e, l, t, p, d, s) {
  const m = u("a-button"), i = u("online-form"), o = u("comment-panel"), r = u("BasicModal");
  return c(), f(r, S({
    title: e.title,
    onCancel: e.onCloseEvent,
    enableComment: e.enableComment,
    width: e.modalWidth
  }, e.$attrs, {
    maxHeight: 600,
    onRegister: e.registerModal,
    wrapClassName: "jeecg-online-modal",
    onOk: e.handleSubmit
  }), {
    footer: a(() => [
      (c(!0), j(H, null, q(e.cgButtonList, (n) => (c(), f(m, {
        key: n.id,
        type: "primary",
        onClick: (h) => e.handleCgButtonClick(n.optType, n.buttonCode),
        preIcon: n.buttonIcon ? "ant-design:" + n.buttonIcon : ""
      }, {
        default: a(() => [
          C(z(n.buttonName), 1)
        ]),
        _: 2
      }, 1032, ["onClick", "preIcon"]))), 128)),
      e.disableSubmit ? G("", !0) : (c(), f(m, {
        key: "submit",
        type: "primary",
        onClick: e.handleSubmit,
        loading: e.submitLoading
      }, {
        default: a(() => [
          C("确定")
        ]),
        _: 1
      }, 8, ["onClick", "loading"])),
      b(m, {
        key: "back",
        onClick: e.handleCancel
      }, {
        default: a(() => [
          C("关闭")
        ]),
        _: 1
      }, 8, ["onClick"])
    ]),
    comment: a(() => [
      b(o, {
        ref: "commentPanelRef",
        tableName: e.tableName,
        dataId: e.formDataId
      }, null, 8, ["tableName", "dataId"])
    ]),
    default: a(() => [
      b(i, S(e.$attrs, {
        ref: "onlineFormCompRef",
        id: e.id,
        disabled: e.disableSubmit,
        "form-template": e.formTemplate,
        isTree: e.isTreeForm,
        pidField: e.pidFieldName,
        themeTemplate: e.themeTemplate,
        onRendered: e.renderSuccess,
        onSuccess: e.handleSuccess
      }), null, 16, ["id", "disabled", "form-template", "isTree", "pidField", "themeTemplate", "onRendered", "onSuccess"])
    ]),
    _: 1
  }, 16, ["title", "onCancel", "enableComment", "width", "onRegister", "onOk"]);
}
const He = /* @__PURE__ */ X(Y, [["render", Z]]);
export {
  He as default
};
