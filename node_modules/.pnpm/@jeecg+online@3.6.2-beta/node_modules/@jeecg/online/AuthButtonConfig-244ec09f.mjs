var f = (u, i, n) => new Promise((l, r) => {
  var h = (e) => {
    try {
      s(n.next(e));
    } catch (o) {
      r(o);
    }
  }, d = (e) => {
    try {
      s(n.throw(e));
    } catch (o) {
      r(o);
    }
  }, s = (e) => e.done ? l(e.value) : Promise.resolve(e.value).then(h, d);
  s((n = n.apply(u, i)).next());
});
import { defineComponent as D, ref as g, watch as I, resolveComponent as _, openBlock as L, createElementBlock as k, createVNode as w, withCtx as v, createTextVNode as A } from "vue";
import { cloneDeep as E } from "lodash-es";
import { BasicTable as S, useTable as $ } from "/@/components/Table";
import { d as F, e as N, f as j } from "./auth.api-d3a6c4b3.mjs";
import { b as O, c as R } from "./auth.data-8be5c9e3.mjs";
import { _ as U } from "./index-0e3ab3af.mjs";
import "/@/utils/http/axios";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
import "/@/hooks/web/useMessage";
import "vue-router";
const V = D({
  name: "AuthButtonConfig",
  components: { BasicTable: S },
  props: {
    headId: {
      type: String,
      default: "",
      required: !0
    }
  },
  setup(u) {
    const i = g(""), n = g(2), l = g(3), r = g(5), [h, { reload: d }] = $({
      api: s,
      rowKey: "code",
      bordered: !0,
      columns: O,
      showIndexColumn: !1
    });
    I(
      () => u.headId,
      (t) => {
        i.value = t.split("?")[0], d().catch(() => null);
      },
      { immediate: !0 }
    );
    function s(t) {
      return f(this, null, function* () {
        let a = yield F(i.value, t), { authList: p, buttonList: c } = a, b = [];
        for (let m of E(R)) {
          let C = {
            status: 0,
            page: l.value
          }, T = p.find((x) => x.code == m.code);
          Object.assign(m, C, T), b.push(m);
        }
        return e(p, c, b);
      });
    }
    function e(t, a, p) {
      for (let c of a) {
        let b = t.find((C) => C.code == c.buttonCode), m = {
          code: c.buttonCode,
          title: c.buttonName,
          status: 0,
          page: c.buttonStyle == "form" ? r.value : l.value
        };
        p.push(Object.assign(m, b));
      }
      return p;
    }
    function o(t, a) {
      return f(this, null, function* () {
        t ? B(a) : y(a);
      });
    }
    function B(t) {
      return f(this, null, function* () {
        let a = yield N({
          id: t.id,
          code: t.code,
          page: t.page,
          cgformId: i.value,
          type: n.value,
          control: 5,
          status: 1
        });
        t.id = a.id, t.status = 1;
      });
    }
    function y(t) {
      return f(this, null, function* () {
        yield j(t.id), t.status = 0;
      });
    }
    return { registerTable: h, onUpdateStatus: o };
  }
}), q = { class: "auth-field-config" };
function z(u, i, n, l, r, h) {
  const d = _("a-switch"), s = _("BasicTable");
  return L(), k("div", q, [
    w(s, { onRegister: u.registerTable }, {
      switch: v(({ text: e, record: o }) => [
        w(d, {
          size: "small",
          checked: o.status === 1,
          onChange: (B) => u.onUpdateStatus(B, o)
        }, null, 8, ["checked", "onChange"])
      ]),
      control: v(() => [
        A(" 可见 ")
      ]),
      _: 1
    }, 8, ["onRegister"])
  ]);
}
const tt = /* @__PURE__ */ U(V, [["render", z]]);
export {
  tt as default
};
