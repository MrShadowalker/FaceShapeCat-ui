var W = Object.defineProperty;
var A = Object.getOwnPropertySymbols;
var X = Object.prototype.hasOwnProperty, Y = Object.prototype.propertyIsEnumerable;
var E = (e, t, o) => t in e ? W(e, t, { enumerable: !0, configurable: !0, writable: !0, value: o }) : e[t] = o, R = (e, t) => {
  for (var o in t || (t = {}))
    X.call(t, o) && E(e, o, t[o]);
  if (A)
    for (var o of A(t))
      Y.call(t, o) && E(e, o, t[o]);
  return e;
};
var p = (e, t, o) => new Promise((_, f) => {
  var h = (r) => {
    try {
      l(o.next(r));
    } catch (u) {
      f(u);
    }
  }, c = (r) => {
    try {
      l(o.throw(r));
    } catch (u) {
      f(u);
    }
  }, l = (r) => r.done ? _(r.value) : Promise.resolve(r.value).then(h, c);
  l((o = o.apply(e, t)).next());
});
import { defineComponent as Z, ref as k, reactive as x, computed as ee, nextTick as oe, resolveComponent as s, openBlock as D, createBlock as J, withCtx as a, createVNode as i, createTextVNode as g, createElementBlock as ne, createCommentVNode as S, normalizeProps as te, guardReactiveProps as ae } from "vue";
import { BasicModal as ie, useModalInner as re, useModal as se } from "/@/components/Modal";
import { BasicForm as le, useForm as ce } from "/@/components/Form";
import { BasicTable as ue, TableAction as me } from "/@/components/Table";
import { useListPage as de } from "/@/hooks/system/useListPage";
import { u as pe } from "./useOnlineTest-e4bd8be3.mjs";
import { u as fe, a as ge } from "./enhance.data-efc7e155.mjs";
import { a as _e, b as he, d as L } from "./enhance.api-138e6826.mjs";
import { _ as be } from "./index-0e3ab3af.mjs";
import "./cgform.data-cbdd88c3.mjs";
import "/@/utils/dict";
import "/@/utils/dict/JDictSelectUtil";
import "/@/utils/uuid";
import "/@/utils/http/axios";
import "/@/utils/is";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
import "/@/hooks/web/useMessage";
import "vue-router";
const Ce = Z({
  name: "EnhanceJavaModal",
  components: { BasicModal: ie, BasicTable: ue, BasicForm: le, TableAction: me },
  emits: ["register"],
  setup() {
    const e = k(""), t = k([]), { columns: o } = ge(t), { doRequest: _, doDeleteRecord: f, tableContext: h } = de({
      tableProps: {
        api: (n) => p(this, null, function* () {
          let { dataSource: b, btnList: Q } = yield _e(e.value, n);
          return t.value = Q, b;
        }),
        columns: o,
        canResize: !1,
        useSearchForm: !1,
        beforeFetch(n) {
          return Object.assign(n, { column: "orderNum", order: "asc" });
        }
      }
    }), [c, { reload: l }, { rowSelection: r, selectedRowKeys: u }] = h, [C, { closeModal: v }] = re((n) => p(this, null, function* () {
      e.value = n.row.id, l();
    })), { aiTestMode: w, genEnhanceJavaData: y } = pe(), [M, d] = se(), m = k(!1), B = x({
      onRegister: M,
      title: ee(() => m != null && m.value ? "修改" : "新增"),
      width: 800,
      confirmLoading: !1,
      bodyStyle: { height: "350px" },
      onOk: U,
      onCancel: d.closeModal
    });
    let F = {};
    const { formSchemas: P } = fe(t), [V, { resetFields: $, setFieldsValue: N, validate: O }] = ce({
      schemas: P,
      showActionButtonGroup: !1,
      // update-begin--author:liaozhiyang---date:20231017---for：【issues/790】弹窗内文本框不居中问题
      labelCol: { xs: 24, sm: 5 },
      wrapperCol: { xs: 24, sm: 16 }
      // update-end--author:liaozhiyang---date:20231017---for：【issues/790】弹窗内文本框不居中问题
    });
    function G() {
      v();
    }
    function T(n) {
      return p(this, null, function* () {
        var b;
        m.value = n.isUpdate, F = R({}, (b = n.record) != null ? b : {}), d.openModal(), yield oe(), yield $(), N(F);
      });
    }
    function j() {
      T({ isUpdate: !1 });
    }
    function z(n) {
      T({ isUpdate: !0, record: n });
    }
    function I() {
      y(e.value);
    }
    function K() {
      return p(this, null, function* () {
        _(() => L(u.value));
      });
    }
    function U() {
      return p(this, null, function* () {
        try {
          B.confirmLoading = !0;
          let n = yield O();
          n = Object.assign({}, F, n), yield he(e.value, n, m.value), l(), d.closeModal();
        } finally {
          B.confirmLoading = !1;
        }
      });
    }
    function q(n) {
      return [
        {
          label: "编辑",
          onClick: () => z(n)
        }
      ];
    }
    function H(n) {
      return [
        {
          label: "删除",
          popConfirm: {
            title: "确定删除吗？",
            placement: "left",
            confirm: () => f(() => L([n.id]))
          }
        }
      ];
    }
    return {
      rowSelection: r,
      selectedRowKeys: u,
      aiTestMode: w,
      onCancel: G,
      onAdd: j,
      onGenEnhanceJavaData: I,
      onBatchDelete: K,
      getTableAction: q,
      getDropDownAction: H,
      formModalProps: B,
      registerModal: C,
      registerTable: c,
      registerForm: V
    };
  },
  computed: {
    tableScroll() {
      return {
        y: window.innerHeight - 320
      };
    }
  }
}), ve = {
  key: 0,
  style: { float: "left" }
};
function we(e, t, o, _, f, h) {
  const c = s("a-button"), l = s("a-icon"), r = s("a-menu-item"), u = s("a-menu"), C = s("a-dropdown"), v = s("TableAction"), w = s("BasicTable"), y = s("BasicForm"), M = s("a-spin"), d = s("BasicModal");
  return D(), J(d, {
    onRegister: e.registerModal,
    title: "JAVA增强",
    width: 1200,
    defaultFullscreen: "",
    onCancel: e.onCancel
  }, {
    footer: a(() => [
      i(c, { onClick: e.onCancel }, {
        default: a(() => [
          g("关闭")
        ]),
        _: 1
      }, 8, ["onClick"]),
      e.aiTestMode ? (D(), ne("div", ve, [
        i(c, { onClick: e.onGenEnhanceJavaData }, {
          default: a(() => [
            g("生成测试数据")
          ]),
          _: 1
        }, 8, ["onClick"])
      ])) : S("", !0)
    ]),
    default: a(() => [
      i(w, {
        onRegister: e.registerTable,
        rowSelection: e.rowSelection
      }, {
        tableTitle: a(() => [
          i(c, {
            onClick: e.onAdd,
            type: "primary",
            preIcon: "ant-design:plus"
          }, {
            default: a(() => [
              g("新增")
            ]),
            _: 1
          }, 8, ["onClick"]),
          e.selectedRowKeys.length > 0 ? (D(), J(C, { key: 0 }, {
            overlay: a(() => [
              i(u, null, {
                default: a(() => [
                  i(r, {
                    key: "1",
                    onClick: e.onBatchDelete
                  }, {
                    default: a(() => [
                      i(l, { type: "delete" }),
                      g(" 删除 ")
                    ]),
                    _: 1
                  }, 8, ["onClick"])
                ]),
                _: 1
              })
            ]),
            default: a(() => [
              i(c, { style: { "margin-left": "8px" } }, {
                default: a(() => [
                  g(" 批量操作 "),
                  i(l, { type: "down" })
                ]),
                _: 1
              })
            ]),
            _: 1
          })) : S("", !0)
        ]),
        action: a(({ record: m }) => [
          i(v, {
            actions: e.getTableAction(m),
            dropDownActions: e.getDropDownAction(m)
          }, null, 8, ["actions", "dropDownActions"])
        ]),
        _: 1
      }, 8, ["onRegister", "rowSelection"]),
      i(d, te(ae(e.formModalProps)), {
        default: a(() => [
          i(M, {
            spinning: e.formModalProps.confirmLoading
          }, {
            default: a(() => [
              i(y, { onRegister: e.registerForm }, null, 8, ["onRegister"])
            ]),
            _: 1
          }, 8, ["spinning"])
        ]),
        _: 1
      }, 16)
    ]),
    _: 1
  }, 8, ["onRegister", "onCancel"]);
}
const je = /* @__PURE__ */ be(Ce, [["render", we]]);
export {
  je as default
};
