var ht = Object.defineProperty;
var he = Object.getOwnPropertySymbols;
var bt = Object.prototype.hasOwnProperty, yt = Object.prototype.propertyIsEnumerable;
var be = (s, c, r) => c in s ? ht(s, c, { enumerable: !0, configurable: !0, writable: !0, value: r }) : s[c] = r, I = (s, c) => {
  for (var r in c || (c = {}))
    bt.call(c, r) && be(s, r, c[r]);
  if (he)
    for (var r of he(c))
      yt.call(c, r) && be(s, r, c[r]);
  return s;
};
var v = (s, c, r) => new Promise((a, P) => {
  var T = (d) => {
    try {
      F(r.next(d));
    } catch (m) {
      P(m);
    }
  }, k = (d) => {
    try {
      F(r.throw(d));
    } catch (m) {
      P(m);
    }
  }, F = (d) => d.done ? a(d.value) : Promise.resolve(d.value).then(T, k);
  F((r = r.apply(s, c)).next());
});
import { useMessage as Ft } from "/@/hooks/web/useMessage";
import { ref as g, reactive as _t, computed as vt, watch as St, resolveComponent as y, openBlock as S, createElementBlock as N, createVNode as w, createCommentVNode as q, withCtx as V, createBlock as K, Fragment as wt, renderList as Tt, normalizeStyle as Ct, renderSlot as kt, unref as ye, nextTick as Fe, toRaw as D } from "vue";
import { BasicForm as Ot, useForm as Pt } from "/@/components/Form/index";
import { c as xt, O as Rt, d as Vt, e as Dt, u as At, l as H, g as Mt, V as J, S as Et, f as jt, h as _e } from "./useExtendComponent-325fe3f1.mjs";
import { defHttp as ee } from "/@/utils/http/axios";
import { pick as Bt, omit as ve } from "lodash-es";
import { sleep as It, goJmReportViewPage as Nt } from "/@/utils";
import { Loading as Jt } from "/@/components/Loading";
import { getToken as Ut } from "/@/utils/auth";
import { PrinterOutlined as Lt, DiffOutlined as qt, FormOutlined as Kt } from "@ant-design/icons-vue";
import { useModal as Ht } from "/@/components/Modal";
import { u as Wt, G as Gt } from "./useCustomHook-acb00837.mjs";
import { _ as zt } from "./index-0e3ab3af.mjs";
import "/@/components/Form/src/componentMap";
import "/@/utils/propTypes";
import "./constant-754f1a9d.mjs";
import "/@/components/Form/src/jeecg/components/JUpload";
import "/@/views/system/user/user.api";
import "/@/store/modules/user";
import "/@/utils/desform/customExpression";
import "/@/store/modules/permission";
import "/@/utils/dict/JDictSelectUtil";
import "/@/utils/common/compUtils";
import "/@/components/Table";
import "/@/hooks/system/useListPage";
import "vue-router";
import "/@/components/Form/src/utils/Area";
import "/@/components/Preview/index";
import "./LinkTableListPiece-8499a318.mjs";
import "./OnlineSelectCascade-4265c95d.mjs";
import "./JModalTip-33c7dc44.mjs";
import "/@/hooks/web/useAppInject";
import "ant-design-vue";
import "@vueuse/core";
import "/@/utils/cache";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
const te = {
  optPre: "/online/cgform/api/form/",
  urlButtonAction: "/online/cgform/api/doButton"
}, Qt = {
  name: "OnlineTabForm",
  components: {
    BasicForm: Ot,
    Loading: Jt,
    OnlineSubForm: xt,
    PrinterOutlined: Lt,
    DiffOutlined: qt,
    FormOutlined: Kt,
    OnlinePopModal: Rt
  },
  props: {
    id: {
      type: String,
      default: ""
    },
    formTemplate: {
      type: Number,
      default: 1
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    isTree: {
      type: Boolean,
      default: !1
    },
    pidField: {
      type: String,
      default: ""
    },
    submitTip: {
      type: Boolean,
      default: !0
    },
    modalClass: {
      type: String,
      default: ""
    },
    themeTemplate: {
      type: String,
      default: ""
    },
    tabIndex: {
      type: String,
      default: ""
    }
  },
  emits: ["success", "rendered"],
  setup(s, { emit: c }) {
    const { createMessage: r } = Ft(), a = g(null), P = g(!0), T = g(!1), k = g(1), F = g(""), d = g(!1), m = g(!1), x = _t({
      reportPrintShow: 0,
      reportPrintUrl: "",
      joinQuery: 0,
      modelFullscreen: 0,
      modalMinWidth: "",
      commentStatus: 0
    }), { onlineFormContext: f, resetContext: W } = Vt(), {
      formSchemas: A,
      defaultValueFields: R,
      changeDataIfArray2String: U,
      tableName: O,
      dbData: i,
      checkOnlyFieldValue: G,
      hasSubTable: h,
      subTabInfo: M,
      refMap: z,
      subDataSource: L,
      baseColProps: Se,
      createFormSchemas: we,
      fieldDisplayStatus: E
    } = Dt(s, a);
    let { EnhanceJS: u, initCgEnhanceJs: Te } = At(f, !1);
    const { executeJsEnhanced: Ce } = Wt({}, f), [ke, { setProps: Oe, validate: oe, resetFields: le, setFieldsValue: C, updateSchema: Q, getFieldsValue: Y, scrollToField: Pe }] = Pt({
      schemas: A,
      showActionButtonGroup: !1,
      baseColProps: Se
    }), ne = g(!1);
    function xe() {
      let e = s.disabled;
      ne.value = e, Oe({ disabled: e });
    }
    function Re(e, t, o) {
      return v(this, null, function* () {
        yield Ve(), F.value = "", yield le(), i.value = "";
        let l = ye(e);
        m.value = l, l ? yield ie(t) : re(), Fe(() => {
          !l && o && C(o), De(), X("js", "loaded"), xe();
        });
      });
    }
    function Ve() {
      return v(this, null, function* () {
        if (s.isTree === !0) {
          let e = s.pidField, t = A.value;
          t && t.length > 0 && t.filter((l) => l.field === e).length > 0 && (yield Q({
            field: e,
            componentProps: {
              reload: (/* @__PURE__ */ new Date()).getTime()
            }
          }));
        }
      });
    }
    function De() {
      if (ye(m) === !1) {
        let e = D(R[O.value]);
        H(e, (t) => {
          C(t);
        });
      }
    }
    function ae(e, t) {
      let o = D(R[e.key]);
      H(o, (l) => {
        const { row: n, target: p } = t;
        let _ = [{ rowKey: n.id, values: I({}, l) }];
        p.setValues(_);
      });
    }
    function ie(e) {
      return v(this, null, function* () {
        let t = yield Me(e.id);
        i.value = Object.assign({}, e, t);
        let o = Ae.value, l = Bt(t, ...o);
        s.disabled && Object.keys(l).map((n) => {
          !l[n] && l[n] !== 0 && l[n] !== "0" && delete l[n];
        }), yield C(l), re(t);
      });
    }
    function re(e) {
      e || (e = {});
      let t = Object.keys(L.value);
      if (t && t.length > 0) {
        let o = {};
        for (let l of t)
          o[l] = e[l] || [];
        L.value = o;
      }
    }
    let Ae = vt(() => {
      let e = A.value, t = [];
      for (let o of e)
        t.push(o.field);
      return t;
    });
    function Me(e) {
      let t = `${te.optPre}${s.id}/${e}`;
      return new Promise((o, l) => {
        ee.get({ url: t }, { isTransformResponse: !1 }).then((n) => {
          n.success ? o(n.result) : (l(), r.warning(n.message));
        }).catch(() => {
          l();
        });
      });
    }
    function Ee(e) {
      return v(this, null, function* () {
        k.value = e.head.tableType, O.value = e.head.tableName, P.value = e.head.tableType == 1, Ie(e.head.extConfigJson), we(e.schema.properties, e.schema.required, G), u = Te(e.enhanceJs), c("rendered", x);
        let t = yield Mt(a);
        t.$formValueChange = (o, l, n) => {
          et(o, l), n && C(n), je(o, l, n);
        }, u && u.setup && fe(u.setup);
      });
    }
    function je(e, t, o) {
      f.changEvent(e, t, o);
    }
    function Be(e) {
      f.addObject2Context("changEvent", e);
    }
    function Ie(e) {
      let t = { reportPrintShow: 0, reportPrintUrl: "", joinQuery: 0, modelFullscreen: 0, modalMinWidth: "", commentStatus: 0 };
      e && (t = JSON.parse(e)), Object.keys(t).map((o) => {
        x[o] = t[o];
      });
    }
    function Ne() {
      P.value === !0 ? Ke() : Je();
    }
    function Je() {
      Ue().then((e) => {
        se(e);
      });
    }
    function Ue() {
      let e = {};
      return new Promise((t, o) => {
        oe().then(
          (l) => t(l),
          ({ errorFields: l }) => {
            l && l.length > 0 && Pe(l[0][0]), o(J);
          }
        );
      }).then((t) => (Object.assign(e, U(t)), qe())).then((t) => (Object.assign(e, t), Promise.resolve(e))).catch((t) => ((t === J || (t == null ? void 0 : t.code) === J) && (r.warning("校验未通过"), t.key && Le(t.key)), Promise.reject(null)));
    }
    function Le(e) {
      let t = M.value;
      for (let o = 0; o < t.length; o++)
        if (e == t[o].key) {
          let l = o + "";
          if (j.value === l)
            break;
          if (j.value = l, t[o].relationType === 0) {
            let n = b(e);
            It(300, () => n == null ? void 0 : n.validateTable());
          }
          break;
        }
    }
    function qe() {
      return new Promise((e, t) => v(this, null, function* () {
        let o = {};
        try {
          let l = M.value;
          for (let n = 0; n < l.length; n++) {
            let p = l[n].key, _ = b(p);
            if (l[n].relationType == 1)
              try {
                let B = yield _.getAll();
                o[p] = [], o[p].push(B);
              } catch (B) {
                throw { code: J, key: p };
              }
            else {
              if (yield _.fullValidateTable())
                throw { code: J, key: p };
              o[p] = _.getTableData();
            }
          }
        } catch (l) {
          t(l);
        }
        e(o);
      }));
    }
    function Ke() {
      return v(this, null, function* () {
        try {
          let e = yield oe();
          e = Object.assign({}, i.value, e), e = U(e), T.value = !0, se(e);
        } finally {
          T.value = !1;
        }
      });
    }
    function se(e) {
      lt(ge, e).then(() => {
        He(e);
      }).catch((t) => {
        r.warning(t);
      });
    }
    function He(e) {
      Object.keys(e).map((n) => {
        Array.isArray(e[n]) && e[n].length == 0 && (e[n] = "");
      });
      let t = F.value, o = `${te.optPre}${s.id}?tabletype=${k.value}`;
      t && (o = `${t}?tabletype=${k.value}`), d.value === !0 && (e[Et] = 1);
      let l = m.value === !0 ? "put" : "post";
      ee.request({ url: o, method: l, params: e }, { isTransformResponse: !1 }).then((n) => {
        n.success ? (n.result && (e[jt] = n.result), c("success", e), s.submitTip === !0 && r.success(n.message)) : r.warning(n.message);
      }).finally(() => {
        T.value = !1;
      });
    }
    function We(e, t, o) {
      t && o ? o.vxeProps ? o.setValues([
        {
          rowKey: t,
          values: e
        }
      ]) : o.setValues(e) : C(e);
    }
    function Ge(e, t) {
      let o = {};
      o[e] = t, C(o);
    }
    const j = g("0"), ue = g(300), ce = g(340);
    function ze(e) {
      if (m.value === !0) {
        let t = i.value;
        return Qe(t, e);
      }
      return "";
    }
    St(
      () => s.tabIndex,
      (e) => {
        j.value = e;
      },
      {
        immediate: !0
      }
    );
    function Qe(e, t) {
      if (e) {
        let o = e[t];
        return !o && o !== 0 && (o = e[t.toLowerCase()], !o && o !== 0 && (o = e[t.toUpperCase()])), o;
      }
      return "";
    }
    function Ye(e, t) {
      if (u && u[t + "_onlChange"]) {
        let o = u[t + "_onlChange"](), l = Object.keys(e)[0];
        if (o[l]) {
          let p = b(t).getFormEvent(), _ = I({
            column: { key: l },
            value: e[l]
          }, p);
          o[l].call(f, f, _);
        }
      }
    }
    function Xe(e, t) {
      if (u && u[t + "_onlChange"]) {
        let o = u[t + "_onlChange"](f);
        if (e.column === "all") {
          let l = Object.keys(o);
          if (l.length > 0)
            for (let n of l)
              o[n].call(f, f, e);
        } else {
          let l = e.column.key || e.col.key;
          o[l] && e.row && e.row.id && o[l].call(f, f, e);
        }
      }
    }
    function Ze(e, t) {
      t.isModalData || ae(e, t);
    }
    function $e(e) {
      return "online_" + e + ":";
    }
    function et(e, t) {
      return v(this, null, function* () {
        if (!u || !u.onlChange || !e)
          return !1;
        let o = u.onlChange();
        if (o[e]) {
          let n = {
            row: yield Y(),
            column: { key: e },
            value: t
          };
          o[e].call(f, f, n);
        }
      });
    }
    function fe(e) {
      let o = e.toLocaleString().match(Gt);
      if (o.length > 1) {
        let l = o[1];
        Ce(l);
      }
    }
    function X(e, t) {
      if (e == "js") {
        let o = t + "_hook";
        u && u[t] ? u[t].call(f, f) : u && u[o] && fe(u[o]);
      } else if (e == "action") {
        let o = i.value, l = {
          formId: s.id,
          buttonCode: t,
          dataId: o.id,
          uiFormData: Object.assign({}, o)
        };
        ee.post(
          {
            url: `${te.urlButtonAction}`,
            params: l
          },
          { isTransformResponse: !1 }
        ).then((n) => {
          n.success ? r.success("处理完成!") : r.warning("处理失败!");
        });
      }
    }
    function de(e) {
      let t = b(e), o = [...t.getNewDataWithId(), ...L.value[e]];
      if (!o || o.length == 0)
        return !1;
      let l = [];
      for (let n of o)
        l.push(n.id);
      t.removeRowsById(l);
    }
    function me(e, t) {
      if (!t)
        return !1;
      let o = b(e);
      typeof t == "object" ? o.addRows(t, !0) : this.$message.error("添加子表数据,参数不识别!");
    }
    function tt(e, t) {
      de(e), me(e, t);
    }
    function ot(e, t) {
      !t && t.length <= 0 && (t = []), t.map((o) => {
        o.hasOwnProperty("label") || (o.label = o.text);
      }), Q({
        field: e,
        componentProps: {
          options: t
        }
      });
    }
    function lt(e, t) {
      return u && u.beforeSubmit ? u.beforeSubmit(e, t) : Promise.resolve();
    }
    function nt(e, t) {
      let o = D(E);
      e && e.length > 0 ? Object.keys(o).map((l) => {
        !l.endsWith("_load") && e.indexOf(l) < 0 && (E[l] = !1);
      }) : t && t.length > 0 && Object.keys(o).map((l) => {
        t.indexOf(l) >= 0 && (E[l] = !1);
      });
    }
    function at(e, t) {
      return v(this, null, function* () {
        F.value = t, yield le(), i.value = "", m.value = !0, yield ie(e), yield Fe(() => {
          X("js", "loaded");
        });
      });
    }
    function b(e) {
      let t = z[e].value;
      if (t instanceof Array && (t = t[0]), !t) {
        r.warning("子表ref找不到:" + e);
        return;
      }
      return t;
    }
    function it() {
      let e = x.reportPrintUrl, t = i.value.id, o = Ut();
      Nt(e, t, o);
    }
    const [rt, { openModal: pe }] = Ht(), Z = g(""), $ = g(!0);
    function st(e) {
      Z.value = e.id, $.value = !1, pe(!0, { isUpdate: !1, tableType: "3" });
    }
    function ut(e) {
      let o = b(e.key).getSelectedData();
      if (o.length != 1) {
        r.warning("请选择一条数据");
        return;
      }
      Z.value = e.id, $.value = !1, pe(!0, { isUpdate: !0, record: o[0] });
    }
    function ct(e) {
      const t = e[_e];
      let o = ve(e, [_e]);
      if (o.id) {
        let l = ve(I({}, o), "id"), n = [{ rowKey: o.id, values: l }];
        b(t).setValues(n);
      } else
        b(t).addRows(o, { isOnlineJS: !1, setActive: !1, emitChange: !0, isModalData: !0 });
    }
    function ft() {
      let e = M.value;
      if (e && e.length > 0) {
        for (let t of e)
          if (t.relationType != 1) {
            let o = b(t.key);
            o && o.clearSelection();
          }
      }
    }
    function dt() {
      let e = Y(), t = D(R[O.value]);
      H(
        t,
        (o) => {
          C(o);
        },
        e
      );
    }
    function mt(e, t) {
      let o = M.value;
      if (o && o.length > 0) {
        let l = o.filter((n) => n.key === e);
        if (l.length == 0)
          return;
        if (l[0].relationType == 1)
          b(e).executeFillRule();
        else {
          let n = D(R[e]), p = D(t.row);
          H(
            n,
            (_) => {
              const { row: B, target: pt } = t;
              let gt = [{ rowKey: B.id, values: I({}, _) }];
              pt.setValues(gt);
            },
            p
          );
        }
      }
    }
    let ge = {
      tableName: O,
      loading: T,
      subActiveKey: j,
      onlineFormRef: a,
      getFieldsValue: Y,
      setFieldsValue: C,
      submitFlowFlag: d,
      subFormHeight: ue,
      subTableHeight: ce,
      refMap: z,
      triggleChangeValues: We,
      triggleChangeValue: Ge,
      sh: E,
      clearSubRows: de,
      addSubRows: me,
      clearThenAddRows: tt,
      changeOptions: ot,
      isUpdate: m,
      getSubTableInstance: b,
      updateSchema: Q,
      executeMainFillRule: dt,
      executeSubFillRule: mt,
      changEvent: () => {
      },
      onlineFormValueChange: Be
    };
    return W(ge), {
      //主表
      tableName: O,
      onlineFormRef: a,
      registerForm: ke,
      loading: T,
      //子表
      subActiveKey: j,
      hasSubTable: h,
      subTabInfo: M,
      refMap: z,
      //一对一子表
      subFormHeight: ue,
      getSubTableForeignKeyValue: ze,
      isUpdate: m,
      handleSubFormChange: Ye,
      //一对多子表
      subTableHeight: ce,
      onlineFormDisabled: ne,
      subDataSource: L,
      getSubTableAuthPre: $e,
      handleAdded: Ze,
      handleSubTableDefaultValue: ae,
      handleValueChange: Xe,
      openSubFormModalForAdd: st,
      openSubFormModalForEdit: ut,
      //父组件调用
      show: Re,
      createRootProperties: Ee,
      handleSubmit: Ne,
      sh: E,
      handleCgButtonClick: X,
      handleCustomFormSh: nt,
      handleCustomFormEdit: at,
      //跳转
      dbData: i,
      onOpenReportPrint: it,
      onlineExtConfigJson: x,
      //一对多子表弹窗操作数据
      registerPopModal: rt,
      popTableName: Z,
      getPopFormData: ct,
      popModalRequest: $,
      onCloseModal: ft
    };
  }
}, Yt = ["id"], Xt = {
  key: 0,
  style: { "text-align": "right", position: "absolute", top: "6px", right: "20px", "z-index": "999" }
}, Zt = { key: 1 };
function $t(s, c, r, a, P, T) {
  const k = y("PrinterOutlined"), F = y("BasicForm"), d = y("a-tab-pane"), m = y("online-sub-form"), x = y("diff-outlined"), f = y("a-button"), W = y("form-outlined"), A = y("JVxeTable"), R = y("a-tabs"), U = y("Loading"), O = y("online-pop-modal");
  return S(), N("div", {
    id: a.tableName + "_form"
  }, [
    a.dbData.id && a.onlineExtConfigJson.reportPrintShow ? (S(), N("div", Xt, [
      w(k, {
        title: "打印",
        onClick: a.onOpenReportPrint,
        style: { "font-size": "16px" }
      }, null, 8, ["onClick"])
    ])) : q("", !0),
    w(R, {
      class: "tabTheme",
      activeKey: a.subActiveKey,
      "onUpdate:activeKey": c[0] || (c[0] = (i) => a.subActiveKey = i)
    }, {
      default: V(() => [
        (S(), K(d, {
          tab: "主表",
          key: "-1"
        }, {
          default: V(() => [
            w(F, {
              ref: "onlineFormRef",
              onRegister: a.registerForm
            }, null, 8, ["onRegister"])
          ]),
          _: 1
        })),
        a.hasSubTable ? (S(!0), N(wt, { key: 0 }, Tt(a.subTabInfo, (i, G) => (S(), K(d, {
          tab: i.describe,
          key: G + "",
          forceRender: !0
        }, {
          default: V(() => [
            i.relationType == 1 ? (S(), N("div", {
              key: 0,
              style: Ct({ "overflow-y": "auto", "overflow-x": "hidden", "max-height": a.subFormHeight + "px" })
            }, [
              w(m, {
                ref_for: !0,
                ref: a.refMap[i.key],
                table: i.key,
                disabled: a.onlineFormDisabled,
                "form-template": r.formTemplate,
                "main-id": a.getSubTableForeignKeyValue(i.foreignKey),
                properties: i.properties,
                "required-fields": i.requiredFields,
                "is-update": a.isUpdate,
                onFormChange: (h) => a.handleSubFormChange(h, i.key)
              }, null, 8, ["table", "disabled", "form-template", "main-id", "properties", "required-fields", "is-update", "onFormChange"])
            ], 4)) : (S(), N("div", Zt, [
              w(A, {
                ref_for: !0,
                ref: a.refMap[i.key],
                toolbar: "",
                "keep-source": "",
                "row-number": "",
                "row-selection": "",
                height: (
                  // 【VUEN-803】一对多子表固定340高度，修复自定义列组件被遮挡的问题
                  a.subTableHeight
                ),
                disabled: a.onlineFormDisabled,
                columns: i.columns,
                dataSource: a.subDataSource[i.key],
                onValueChange: (h) => a.handleValueChange(h, i.key),
                authPre: a.getSubTableAuthPre(i.key),
                onAdded: (h) => a.handleAdded(i, h),
                onExecuteFillRule: (h) => a.handleSubTableDefaultValue(i, h)
              }, {
                toolbarSuffix: V(() => [
                  a.onlineFormDisabled ? q("", !0) : (S(), K(f, {
                    key: 0,
                    type: "primary",
                    onClick: (h) => a.openSubFormModalForAdd(i)
                  }, {
                    default: V(() => [
                      w(x)
                    ]),
                    _: 2
                  }, 1032, ["onClick"])),
                  a.onlineFormDisabled ? q("", !0) : (S(), K(f, {
                    key: 1,
                    type: "primary",
                    onClick: (h) => a.openSubFormModalForEdit(i)
                  }, {
                    default: V(() => [
                      w(W)
                    ]),
                    _: 2
                  }, 1032, ["onClick"]))
                ]),
                _: 2
              }, 1032, ["height", "disabled", "columns", "dataSource", "onValueChange", "authPre", "onAdded", "onExecuteFillRule"])
            ]))
          ]),
          _: 2
        }, 1032, ["tab"]))), 128)) : q("", !0)
      ]),
      _: 1
    }, 8, ["activeKey"]),
    w(U, {
      loading: a.loading,
      absolute: !1
    }, null, 8, ["loading"]),
    kt(s.$slots, "bottom", {}, void 0, !0),
    w(O, {
      formTableType: "3",
      request: a.popModalRequest,
      id: a.popTableName,
      onRegister: a.registerPopModal,
      onSuccess: a.getPopFormData,
      topTip: "",
      isVxeTableData: ""
    }, null, 8, ["request", "id", "onRegister", "onSuccess"])
  ], 8, Yt);
}
const Io = /* @__PURE__ */ zt(Qt, [["render", $t], ["__scopeId", "data-v-52a8d605"]]);
export {
  Io as default
};
