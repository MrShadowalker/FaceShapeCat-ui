var c = (e, a, o) => new Promise((l, i) => {
  var p = (t) => {
    try {
      m(o.next(t));
    } catch (r) {
      i(r);
    }
  }, n = (t) => {
    try {
      m(o.throw(t));
    } catch (r) {
      i(r);
    }
  }, m = (t) => t.done ? l(t.value) : Promise.resolve(t.value).then(p, n);
  m((o = o.apply(e, a)).next());
});
import { defineComponent as I, ref as $, watch as v, resolveComponent as d, openBlock as P, createBlock as y, mergeProps as O, withCtx as s, createVNode as f, createTextVNode as L } from "vue";
import { BasicModal as V } from "/@/components/Modal";
import W from "./OnlineFormDetail-0e7294ca.mjs";
import { b as j } from "./useExtendComponent-325fe3f1.mjs";
import q from "/@/components/jeecg/comment/CommentPanel.vue";
import { _ as A } from "./index-0e3ab3af.mjs";
import "/@/hooks/web/useMessage";
import "/@/components/Loading";
import "/@/utils/auth";
import "/@/utils";
import "@ant-design/icons-vue";
import "./DetailForm-424638eb.mjs";
import "/@/utils/propTypes";
import "/@/utils/dict";
import "/@/utils/dict/JDictSelectUtil";
import "/@/utils/dict/index";
import "/@/api/common/api";
import "/@/utils/http/axios";
import "/@/components/Form/src/utils/Area";
import "/@/utils/common/compUtils";
import "/@/components/Preview/index";
import "/@/components/Markdown";
import "./OnlineSubFormDetail-f0d2c016.mjs";
import "/@/components/Form/index";
import "./constant-754f1a9d.mjs";
import "/@/components/Form/src/componentMap";
import "lodash-es";
import "/@/components/Form/src/jeecg/components/JUpload";
import "/@/views/system/user/user.api";
import "/@/store/modules/user";
import "/@/utils/desform/customExpression";
import "/@/store/modules/permission";
import "/@/components/Table";
import "/@/hooks/system/useListPage";
import "vue-router";
import "./LinkTableListPiece-8499a318.mjs";
import "./OnlineSelectCascade-4265c95d.mjs";
import "./JModalTip-33c7dc44.mjs";
import "/@/hooks/web/useAppInject";
import "ant-design-vue";
import "@vueuse/core";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
const E = I({
  name: "OnlineDetailModal",
  props: {
    id: {
      type: String,
      required: !1,
      default: ""
    }
  },
  components: {
    BasicModal: V,
    OnlineFormDetail: W,
    CommentPanel: q
  },
  emits: ["success", "register", "formConfig"],
  setup(e, { emit: a }) {
    const o = $();
    function l() {
      o.value && o.value.reload();
    }
    const {
      title: i,
      modalWidth: p,
      registerModal: n,
      cgButtonList: m,
      handleCgButtonClick: t,
      disableSubmit: r,
      handleSubmit: u,
      submitLoading: h,
      handleCancel: b,
      handleFormConfig: C,
      onlineFormCompRef: g,
      formTemplate: w,
      isTreeForm: _,
      pidFieldName: R,
      renderSuccess: F,
      formRendered: M,
      showSub: N,
      tableName: T,
      formDataId: k,
      enableComment: B,
      themeTemplate: S
    } = j(!1, { emit: a }, l);
    v(() => e.id, D, { immediate: !0 });
    function D() {
      return c(this, null, function* () {
        M.value = !1, e.id && (yield C(e.id, {}));
      });
    }
    return {
      title: i,
      onlineFormCompRef: g,
      renderSuccess: F,
      registerModal: n,
      handleSubmit: u,
      handleCancel: b,
      modalWidth: p,
      formTemplate: w,
      disableSubmit: r,
      cgButtonList: m,
      handleCgButtonClick: t,
      isTreeForm: _,
      pidFieldName: R,
      submitLoading: h,
      showSub: N,
      tableName: T,
      formDataId: k,
      enableComment: B,
      commentPanelRef: o,
      themeTemplate: S
    };
  }
});
function H(e, a, o, l, i, p) {
  const n = d("a-button"), m = d("online-form-detail"), t = d("comment-panel"), r = d("BasicModal");
  return P(), y(r, O({
    title: e.title,
    width: e.modalWidth,
    maxHeight: 600,
    enableComment: e.enableComment,
    defaultFullscreen: !1
  }, e.$attrs, {
    onRegister: e.registerModal,
    wrapClassName: "jeecg-online-detail-modal"
  }), {
    footer: s(() => [
      f(n, {
        key: "back",
        onClick: e.handleCancel
      }, {
        default: s(() => [
          L("关闭")
        ]),
        _: 1
      }, 8, ["onClick"])
    ]),
    comment: s(() => [
      f(t, {
        ref: "commentPanelRef",
        tableName: e.tableName,
        dataId: e.formDataId
      }, null, 8, ["tableName", "dataId"])
    ]),
    default: s(() => [
      f(m, {
        ref: "onlineFormCompRef",
        id: e.id,
        "form-template": e.formTemplate,
        "show-sub": e.showSub,
        themeTemplate: e.themeTemplate,
        onRendered: e.renderSuccess
      }, null, 8, ["id", "form-template", "show-sub", "themeTemplate", "onRendered"])
    ]),
    _: 1
  }, 16, ["title", "width", "enableComment", "onRegister"]);
}
const ye = /* @__PURE__ */ A(E, [["render", H]]);
export {
  ye as default
};
