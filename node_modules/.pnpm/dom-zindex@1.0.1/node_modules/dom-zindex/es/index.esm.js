var storeEl = null;
var storeId = 'z-index-manage';
var storeMainKey = 'm';
var storeSubKey = 's';
var storeData = {
    m: 1000,
    s: 1000
};
function getDom() {
    if (!storeEl) {
        if (typeof document !== 'undefined') {
            storeEl = document.getElementById(storeId);
            if (!storeEl) {
                storeEl = document.createElement('div');
                storeEl.id = storeId;
                storeEl.style.display = 'none';
                document.body.appendChild(storeEl);
                setCurrent(storeData.m);
                setSubCurrent(storeData.s);
            }
        }
    }
    return storeEl;
}
function createSetHandle(key) {
    return function (value) {
        if (value) {
            value = Number(value);
            storeData[key] = value;
            var doc = getDom();
            if (doc) {
                if (doc.dataset) {
                    doc.dataset[key] = value + '';
                }
                else {
                    doc.setAttribute('data-' + key, value + '');
                }
            }
        }
        return storeData[key];
    };
}
export var setCurrent = createSetHandle(storeMainKey);
function createGetHandle(key, nextMethod) {
    return function getCurrent(currZindex) {
        var zIndex;
        var doc = getDom();
        if (doc) {
            var domVal = doc.dataset ? doc.dataset[key] : doc.getAttribute('data-' + key);
            if (domVal) {
                zIndex = Number(domVal);
            }
        }
        if (!zIndex) {
            zIndex = storeData[key];
        }
        if (currZindex) {
            if (Number(currZindex) < zIndex) {
                return nextMethod();
            }
            return currZindex;
        }
        return zIndex;
    };
}
export var getCurrent = createGetHandle(storeMainKey, getNext);
export function getNext() {
    return setCurrent(getCurrent() + 1);
}
export var setSubCurrent = createSetHandle(storeSubKey);
var _getSubCurrent = createGetHandle(storeSubKey, getSubNext);
export function getSubCurrent() {
    return getCurrent() + _getSubCurrent();
}
export function getSubNext() {
    setSubCurrent(_getSubCurrent() + 1);
    return getSubCurrent();
}
/**
 * Web common z-index style management
 */
var DomZIndex = {
    setCurrent: setCurrent,
    getCurrent: getCurrent,
    getNext: getNext,
    setSubCurrent: setSubCurrent,
    getSubCurrent: getSubCurrent,
    getSubNext: getSubNext
};
export default DomZIndex;
